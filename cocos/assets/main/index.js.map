{"version":3,"sources":["assets/main/core/ui/component/AdaptNotch.ts","assets/main/core/track/AdjustTrack.ts","assets/main/core/conf/ApiErrorCode.ts","assets/main/core/app/AppParamManager.ts","assets/main/core/app/AppParamModel.ts","assets/main/core/audio/AudioManager.ts","assets/main/core/utils/decorators/AutoBind.ts","assets/main/core/ui/component/list/AutoListItem.ts","assets/main/core/ui/component/list/AutoListLayout.ts","assets/main/core/utils/decorators/AwaitFunction.ts","assets/main/core/language/BaseBundleLanguage.ts","assets/main/core/bd/bd_skin/BaseBundleSkin.ts","assets/main/core/language/BaseBundleUiLanguage.ts","assets/main/core/ui/component/BaseEnumComp.ts","assets/main/core/bd/BundleCenter.ts","assets/main/core/conf/bd_depend/skin/final/BundleDependFinal.ts","assets/main/core/conf/bd_depend/skin/world_cup/BundleDependWorldCup.ts","assets/main/core/conf/bd_depend/BundleDepend.ts","assets/main/core/bd/BundleMgr.ts","assets/main/core/conf/BundleNames.ts","assets/main/core/bd/bd_skin/BundleSkinCenter.ts","assets/main/core/ui/base/ButtonManager.ts","assets/main/core/ui/component/ButtonTouchTop.ts","assets/main/core/utils/class/CacheObserver.ts","assets/main/core/ui/component/CharLabel.ts","assets/main/core/utils/class/ClassListener.ts","assets/main/core/ui/component/define/CocosBundleEnum.ts","assets/main/core/ui/component/utils/CocosUiUtil.ts","assets/main/core/utils/CocosUtils.ts","assets/main/core/depend/CommonDependManager.ts","assets/main/core/ws/CommonSocketModel.ts","assets/main/core/ws/CommonSocket.ts","assets/main/core/constant/CoreEventName.ts","assets/main/core/event/CoreEvents.ts","assets/main/core/conf/int/CountryCodeEnum.ts","assets/main/core/crypt/CryptMgr.ts","assets/main/core/conf/int/CurrencyEnum.ts","assets/main/core/utils/DateUtils.ts","assets/main/core/utils/decorators/DecoratorsUtils.ts","assets/main/core/conf/int/Domain.ts","assets/main/core/ui/component/DropDownListEx/DropDownListEx.ts","assets/main/core/ui/component/DropDownList.ts","assets/main/core/ui/base/EditBoxManager.ts","assets/main/core/ui/component/EnumActive.ts","assets/main/core/ui/component/EnumColor.ts","assets/main/core/ui/component/EnumController.ts","assets/main/core/ui/component/EnumLabel.ts","assets/main/core/ui/component/EnumMix.ts","assets/main/core/ui/component/EnumPosition.ts","assets/main/core/ui/component/EnumSpriteFrame.ts","assets/main/core/services/Lighthouse/proto/EventCode.ts","assets/main/core/ui/component/FindButtonPlayClickSound.ts","assets/main/core/conf/Flavor.ts","assets/main/core/model/GameCategoryModel.ts","assets/main/core/conf/int/GameConf.ts","assets/main/core/conf/GameDatabase.ts","assets/main/core/conf/GameEnum.ts","assets/main/core/game/GameMounted.ts","assets/main/core/conf/GameRoomId.ts","assets/main/core/model/GameStatusModel.ts","assets/main/core/conf/GameType.ts","assets/main/core/platform/H5Util.ts","assets/main/core/utils/class/HttpObserver.ts","assets/main/core/http/HttpRequestJson.ts","assets/main/core/http/HttpRequestUtil.ts","assets/main/core/http/HttpRequest.ts","assets/main/core/utils/decorators/Injector.ts","assets/main/core/utils/decorators/InstanceClassDecorator.ts","assets/main/core/conf/int/IntConf.ts","assets/main/core/utils/decorators/IntervalsDecorator.ts","assets/main/core/ui/base/LabelManager.ts","assets/main/core/language/LanguageCenter.ts","assets/main/core/language/LanguageObserver.ts","assets/main/core/conf/LanguageType.ts","assets/main/Script/Launcher/LauncherInit.ts","assets/main/Script/Launcher/LauncherLoading.ts","assets/main/Script/Launcher/Launcher.ts","assets/main/core/utils/decorators/LazyInitialize.ts","assets/main/core/conf/int/LighterEnum.ts","assets/main/core/services/Lighthouse/Lighter.ts","assets/main/core/services/Lighthouse/proto/LighthouseProto.ts","assets/main/core/utils/Listener.ts","assets/main/core/storage/LocalStorageMgr.ts","assets/main/core/utils/class/LocalStorageObserver.ts","assets/main/core/utils/decorators/LogsDesc.ts","assets/main/core/ui/component/LongPressButton.ts","assets/main/core/utils/MathUtils.ts","assets/main/core/utils/MoneyUtil.ts","assets/main/core/ui/component/mult_lang/MultLangLabelBase.ts","assets/main/core/ui/component/mult_lang/MultLangLabelCustom.ts","assets/main/core/ui/component/mult_lang/MultLangLabel.ts","assets/main/core/ui/component/mult_lang/MultLangRichTextBase.ts","assets/main/core/ui/component/mult_lang/MultLangRichText.ts","assets/main/core/language/MultLangUtil.ts","assets/main/core/platform/NativeUtil.ts","assets/main/core/ui/base/NodeManager.ts","assets/main/core/utils/NpmExport.ts","assets/main/core/ui/component/ObjectLabel.ts","assets/main/core/hook/Object.ts","assets/main/core/ui/component/PageViewTurnPageButton.ts","assets/main/core/platform/PlatformType.ts","assets/main/core/platform/PlatformUtil.ts","assets/main/core/ui/component/PlayButtonSoundComp.ts","assets/main/core/utils/playButtonSoundUtils/PlayButtonSoundUtils.ts","assets/main/core/objectPool/PoolMgr.ts","assets/main/core/popUpViewUtils/PopUpViewBase.ts","assets/main/core/utils/PopupUtil.ts","assets/main/core/ui/base/PrefabManager.ts","assets/main/core/utils/preventScreenSleep/PreventScreenSleep.ts","assets/main/core/utils/decorators/PreviewFunctionParams.ts","assets/main/core/conf/ProjectConf.ts","assets/main/core/conf/ProjectInfo.ts","assets/main/core/bd/ResLoader.ts","assets/main/core/ui/base/RichTextManager.ts","assets/main/core/utils/class/SkeletonHelper.ts","assets/main/core/conf/SkinType.ts","assets/main/core/ui/base/SpineManager.ts","assets/main/core/ui/base/SpriteManager.ts","assets/main/core/utils/StringEX.ts","assets/main/core/utils/class/Time2Value.ts","assets/main/core/timer/TimerMgr.ts","assets/main/core/ui/component/ToggleUiContainer.ts","assets/main/core/utils/Tools.ts","assets/main/core/utils/class/TouchOneByOne.ts","assets/main/core/track/TrackUtil.ts","assets/main/core/depend/UIDependManager.ts","assets/main/core/user/UserInfoObserver.ts","assets/main/core/user/UserManager.ts","assets/main/core/utils/class/ValueObserver.ts","assets/main/core/conf/VersionType.ts","assets/main/core/ui/component/ViewGroupNesting.ts","assets/main/core/ui/component/item/_ColorItem.ts","assets/main/core/ui/component/item/_LabelItem.ts","assets/main/core/ui/component/item/_MixItem.ts","assets/main/core/ui/component/item/_PositionItem.ts","assets/main/core/ui/component/item/_SpriteFrameItem.ts","assets/main/core/utils/preventScreenSleep/media.ts"],"names":["Listener_1","require","SCREEN_ORIENTATION","exports","OFFSET_MODE","cc","Enum","MAX_MARGIN_AND_NOTCH","ADD_MARGIN_AND_OFFSET","ccclass","property","executeInEditMode","requireComponent","menu","_decorator","AdaptNotch","Component","[object Object]","this","_offsetMode","_offset","_landscapeSymmetry","_portraitSymmetry","isNotch","orientation","LANDSCAPE_RIGHT","widget","topRaw","bottomRaw","leftRaw","rightRaw","offsetMode","value","offset","landscapeSymmetry","portraitSymmetry","getNotch","getOritation","node","getComponent","Widget","top","bottom","left","right","adapt","view","on","onResize","default","onScreenOrientationChanged","off","target","parent","isAlignTop","margin","PORTRAIT","PORTRAIT_UPSIDE_DOWN","getMargin","isAbsoluteTop","height","isAlignBottom","isAbsoluteBottom","isAlignLeft","LANDSCAPE_LEFT","isAbsoluteLeft","width","isAlignRight","isAbsoluteRight","updateAlignment","abs","notch","frameSize","getFrameSize","sys","isNative","jsb","getDeviceRotation","__decorate","prototype","type","tooltip","Float","visible","Boolean","AdjustTrack","connect_to_naming","app_start","user_active","register_phone","register_fb","register_account","pay_success_lowquota","pay_success_midquota","pay_success_highquota","adjustConf","_instance","launchConfig","CommonDepend","LocalStorageMgr","readLauncherConfig","adjust_conf","eventInfo","event_list","events","key","eventName","event_name","eventToken","event_token","H5Util","initAdjustID","appid","data","user_id","UserManager","uid","channel","AppParamManager","getChn","brand_code","getBrandCode","PlatformUtil","trackAdjustEvent","amount","trackEvent","ApiErrorCode","ProjectInfo_1","LocalStorageMgr_1","initPackageName","initMerCode","initBrandCode","initChn","initAppVersionCode","initDeviceID","packageName","getPackageName","AppParamModel","setPackageName","savePackageName","setMerCode","saveMerCode","brandCode","getBrand","setBrandCode","saveBrandCode","chn","getChannel","setChn","saveChn","vc","ProjectInfo","getInstance","GAME_BUILD_NUMBER","setAppVersionCode","saveAppVersionCode","deviceId","getDeviceID","readSwitchDevice","readDeviceID","Math","random","setDeviceID","saveDeviceID","readPackageName","readBrandCode","readChn","getAppName","readAppVersionCode","length","merCode","appName","appVersionCode","deviceInfo","network","BundleMgr_1","MUSIC_VOLUME_STORAGE_KEY","EFFECT_VOLUME_STORAGE_KEY","MUSIC_VOLUME_RATIO","EFFECT_VOLUME_RATIO","AudioManager","musicVolume","musics","effectVolume","effects","resumeEnabled","readData","Number","saveData","toString","resDesc","loop","volume","onEnd","resPath","isMusicOpen","url","id","stopMusic","audio","push","BundleMgr","loadResFromBundle","clip","indexOf","audioEngine","play","setFinishCallback","i","stop","pause","resume","open","setMusicVolumeValue","setMusicVolume","ratio","resetTime","setTimeout","setVolume","time","tag","onPlay","isEffectOpen","getMaxAudioInstance","shift","duration","stopEffect","remove","index","splice","getDuration","setCurrentTime","playEffect","all","setEffectsVolumeValue","setEffectsVolume","stopAll","pauseAll","enabled","resumeAll","uncacheAll","DecoratorsUtils_1","defineProperty","getPrototypeOf","Object","mapStore","getBoundSuper","obj","fn","WeakMap","has","set","superStore","get","bind","autobindClass","klass","descs","getOwnPropertyDescriptors","keys","getOwnKeys","l","desc","autobindMethod","propertyKey","descriptor","configurable","enumerable","SyntaxError","constructor","boundFn","writable","createDefaultSetter","handle","Function","AutoListItem","args","onRefreshUI","AutoListItem_1","__importDefault","AutoListLayout","itemPrefab","spacingPrefab","items","_total","renderItems","total","v","updataItems","forEach","destroy","spacingItem","instantiate","addChild","item","refreshUi","Prefab","displayName","AwaitFunction","oldValue","current","_a","then","call","Promise","resolve","Flavor_1","InstanceClassDecorator_1","Tools_1","LanguageObserver_1","skin","object","begin","Proxy","p","result","getLang","lang","_c","_b","Instance","Language","curLanguage","undefined","Skin","curMainSkin","language","Tools","formatStringInArgs","CUR","CurrentIntConf","currency","_skin_","split","applyPorxy","SkinType_1","BundleSkinCenter_1","bundleName","applySkin","assign","SkinType","FINAL","array","setBundleName","forEachDesc","e","Priority","skinProxy","getCurSkin","priority","UnPriority","unpriority","LoadOnDemand","loadOnDemand","LanguageCenter_1","className","js","getClassName","applyLanguage","exec","groups","bundle","getLanguage","getLanguage4Bundle","EnumActiveType","BaseEnumComp","_activeIndex","activeIndex","updateActive","nodeName","getChilds","findIndex","name","currentName","BundleDepend_1","BundleNames_1","ResLoader_1","BundleCenter","bundleMap","Map","currentBundle","window","sceneName","onProgress","onSuccess","onLaunchedSceneComplete","onFailed","callfunc","promise","load","bundleInfo","getBundleInfo","launchScene","director","loadScene","error","deleteReference","launchPrefabPath","scene","CocosUtils","getSceneCanvas","prefab","catch","BundleNames","HALL","failed","loadBundleWithDependencies","bundles","findDependencies","loadBundles","TOTAl","len","loadBundleWithRes","addReference","count","releaseResPackageFromBundle","__findDependencies","dependencies","BundleDepend","getDepend","includes","ResLoader","asyncLoadBundle","Error","loadResPackageFromBundle","cur","BundleDependFinal","COMMON","WALLET","COMMON_BRC","COMMON_SLOT","COMMON_VERSUS","LOADING","BIGBATTLE","BUFFALO","WOLFGOLD","BIG_SMALL","FIRE_JOKER","CLASSIC_FIVE_DRAGONS","RED_BLACK","MARQUEE","DOMINO","FISHING","SHARK","TRUCO","RUMMY_POINT","BINGO","TEENPATTI","SEVEN_UP_DOWN","BEST_OFFIVE","CRICKET_BATTLE","ANDAR_BAHAR","JHANDI_MUNDA","BEST_CLUB","THREE_DICE","ROULETTE","CACHETA","CALL_BREAK","BLACK_JACK","DOMINO_GAPLE","BundleDependWorldCup","CRASH","GOD_OF_FORTUNE","LUDO","BundleDependWorldCup_1","BundleDependFinal_1","depend","WORLD_CUP","LIGHT","_d","bundleResInfo","progressFunc","loadResWithObj","callFunc","loadSceneFromBundle","resDesObj","res","imageUrl","imageSuffix","asyncLoadSpriteFrameFromRemote","callFull","loadSpriteFrameFromRemote","getResFromBundle","BundleSkinCenter","skinMap","delete","bundleNames","getSkin","ButtonManager","btnNode","labelTxt","isValid","Button","Node","string","resDescs","sprite","Toggle","normalSprite","pressedSprite","hoverSprite","disabledSprite","callback","self","loadSpriteBundle","errorCallback","TouchOneByOne_1","ButtonOverride","getSiblingIndex","TouchOneByOne","onOver","setSiblingIndex","layout","Layout","onBegin","childrenCount","enableTouch","ValueObserver_1","super","init","initCache","json","getCacheKey","JSON","parse","newValue","stringify","CharLabel","Label","_listener","EventTarget","emit","targetOff","NpmExport_1","CocosBundleEnum","lodash","chain","toPairs","map","element","fromPairs","CocosUiUtil","getTopParent","createEnum","updatePropertyEnum","comp","ccEnum","Class","setClassAttr","directorScene","getScene","canvas","getChildByName","platform","os","OS_ANDROID","OS_IOS","targetParent","curWorld","convertToWorldSpaceAR","v3","targetPos","convertToNodeSpaceAR","position","AppParamManager_1","AppParamModel_1","AudioManager_1","GameDatabase_1","HttpRequest_1","H5Util_1","NativeUtil_1","PlatformUtil_1","AdjustTrack_1","UserManager_1","CocosUtils_1","DateUtils_1","MoneyUtil_1","CommonSocketModel_1","CommonDependManager","commonDepend","HttpRequest","GameDatabase","CommonSocketModel","MoneyUtil","DateUtils","NativeUtil","userId","token","version","saveUserId","saveToken","saveVersion","parseInt","readUserID","isNaN","readUserToken","GAME_VERSION","replace","getMerCode","Date","getTime","Lighter_1","EventCode_1","LighthouseProto_1","gameID","host","msgCallback","initCallBack","onCloseCallback","_gameID","isEmpty","_wsHost","_msgCallback","_initCallBack","_onCloseCallback","_initWs","trackStart","LighthouseProto","Events","EventType","WS_REQ","info","resources","getInfoWithPath","pemUrl","assetManager","utils","getUrlWithUuid","uuid","nativeExt","_webSocket","WebSocket","onopen","trackEnd","EVENT_CODE","RequestSuccess","_onOpen","onerror","RequestFailure","_onError","onclose","_onClose","onmessage","event","_onMessage","clearTimeout","_connectTimeoutID","binaryType","close","msg","readyState","OPEN","send","MAKE_HIDE_GAME","MAKE_SHOW_GAME","NETWORK_STATE_CHANGED","PAYFAILURE","REFRESH_USER_INFO","IMAGEUPLOADEDSUCCESS","RECEIVE_NOTIFICATION_RESPONSE","PUSH_NOTIFICATION_SUCCEED","EVENT_NATIVE_SPLASH_FINISH","EVENT_NATIVE_CACHE_PROMOTION_IMAGE","EVENT_FACEBOOK_LOGIN_RESULT","CoreEvents","CountryCodeEnum","buffer_1","crypto","CryptMgr","base64","Buffer","from","buffers","padStart","join","plain","aesKey","getHttpAesKey","aes_key","decodeBase64","ci","createCipheriv","crypted","update","concat","final","encrypted","deci","createDecipheriv","decrypted","ts","sign_key","getHttpSignKey","input","createHash","digest","str","UNIVERSAL","CurrencyEnum","time_diff","serverTimestamp","clientTimestamp","getTimestamp","toLocaleDateString","n","round","ms","format","rFormat","date","TIME_ZONE_DIFF","dateObject","Y","getUTCFullYear","M","fillZero","getUTCMonth","D","getUTCDate","h","getUTCHours","m","getUTCMinutes","s","getUTCSeconds","getUTCMilliseconds","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","zeroCount","fillCount","String","fillStr","timeStamp","floor","setTime","y","d","minute","second","LazyInitialize_1","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","isDescriptor","hasOwnProperty","decorate","handleDescriptor","entryArgs","Array","slice","Meta","debounceTimeoutIds","throttleTimeoutIds","throttlePreviousTimestamps","throttleTrailingArgs","profileLastRan","META_KEY","Symbol","metaFor","context","apply","warn","seenDeprecations","internalDeprecation","Domain","Dev","IN_TEST","IN_ONLINE","BR_TEST","playOnFocus","DropDownListEx","content","options","active","TOUCH_END","scaleY","childs","children","option","setItem","opacity","title","onItemClick","onDelete","onSelect","DropDownList","mainBtnSpriteFrames","spacing","_isChecked","isChecked","onUpdateUi","showBtns","hideBtns","stopAllAnim","Sprite","spriteFrame","beginPosY","tween","to","start","Tween","stopAllByTarget","SpriteFrame","EditBoxManager","editBoxNode","EditBox","placeholder","targetNode","BaseEnumComp_1","EnumActive","curentNode","enumMap","<None>","_ColorItem_1","EnumColor","color","_ColorItem","EnumController","EnumController_1","_allChildNames","resetChilds","childName","allChildsNames","Set","getAllChilds","add","getComponentsInChildren","filter","reduce","pre","toArray","actieName","show4Name","_LabelItem_1","EnumLabel","label","_LabelItem","_MixItem_1","SkeletonHelper_1","EnumMix","values","MixType","NodeColor","Text","RichText","OutLineColor","LabelOutline","Size","setContentSize","SkeletionAnimation","helper","sp","Skeleton","animation","animationName","getAnimationNames","scheduleOnce","delayTime","addComponent","NodeActive","nodes","_MixItem","_PositionItem_1","EnumPosition","_PositionItem","_SpriteFrameItem_1","EnumSpriteFrame","_SpriteFrameItem","RequestTimeout","PlayButtonSoundUtils_1","FindButtonPlayClickSound","PlayButtonSoundUtils","buttonPlaySoundHandle","ProjectConf_1","LanguageType_1","IntConf_1","CountryCodeEnum_1","BALL","curVersionType","version_type","IntConf","LanguageType","EN","PT","lan","Country","code","IN","BR","country","GameStatusModel_1","categoryInfo","sort","gameNavNo","gameNavType","gameList","list","gameModel","commonGame","mergeCommonGame","arr","GameConf","ID","GameType_1","database","initalize","gameId","GameType","GAME_HALL","LOGIN","LAUNCHER","UNIVERSE","REDBLACK","WOLF_GOLD","BTI","HallFunctionEntrance","GameKind","H5ScreenDirection","ConnectType","GameChannel","NON_GAME","kind","SELF_DEV","COCOS_GAME","MINI_GAME_SOCKET","MINI_GAME","connectType","SOCKET","MINI_GAME_HTTP","HTTP","IM","H5_GAME","h5ScreenDirection","GameNavNo","GameNavType","MFAgentType","FacebookLoginState","AccountType","PromoterCommissionRecordType","PromoterStatType","PromoterDataType","PromoterUsersOrderBy","PromoterUsersOrderType","PopupWindowGravity","CustomerType","IdentityType","ResetPwdType","NewbieType","NoticeType","NoticeShowFrequency","BonusCenterType","DialogActionType","GameMounted","hasMountedGameList","GameRoomId","RoomID","gameInfo","tag_hot","tagHot","tag_event","tagEvent","tag_new","tagNew","tag_earth","tagEarth","icon","PlatformType_1","fpPromise","__importStar","FingerprintJS","brand","copiedText","fingerId","PlatformType","H5Native","H5","location","href","queryParams","urlParser","query","jsBridge","fp","visitorId","openUrlByWebView","param","browserType","BROWSER_TYPE_SAFARI","openUrlPromise","openUrlString","openUrlByBrowser","newWindow","fallbackUrl","openApp","text","navigator","clipboard","writeText","copyText","getCopiedText","saveImage","toast","showNativeToast","adjustID","deviceID","getDeviceInfoForLighthouse","userAgent","getSystemVersionCode","getClientVersionCode","gameUrl","saveGameUrl","accountInfo","saveAccountInfo","getAccountInfo","adjustDeviceID","getAdjustDeviceID","googleADID","getGoogleADID","idfa","getIDFA","referID","getReferID","agentID","getAgentID","setCocosData","getCocosData","loadUrl","goBack","refresh","clearCache","materialUrl","savePromotionMaterial","qrCodeUrl","size","x","synthesizePromotionImage","shareUrl","isSafari","search","onQuery","ApiErrorCode_1","HttpRequestUtil_1","REQUEST_TYPE","POST","GET","HttpRequestJson","timer","canRetryWithHostBackup","host_backup","xhr","request","api","onError","TIMEOUT","HTTP_ERROR","_f","_e","OFFLINE","charAt","substring","request_type","XMLHttpRequest","onreadystatechange","httpStatus","status","responseText","responseJson","jsonData","jsonStatus","success","ontimeout","retryWithHostBackup","abort","businessTimeout","setRequestHeader","timeout","isOnline","CryptMgr_1","HttpRequestUtil","req_plain","md5_digest","aes_encrypt","response","aes_decrypt","sign","buildSign","gameVersion","aid","svn","getSvn","svc","cvc","cvn","pkg","app","encodeURIComponent","fullUrl","reqHeader","curr_time","getTimeDiff","timestamp","auth_token","req_header","req_prototype","req","deserializeBinary","newHeader","buildHeader","header","serializeBinary","CoreEvents_1","protoInfo","reBuildReq","SWITCH_HOST","post_protobuf","buildFullUrl","encrypt_data","HTTP_REQ","server_req_plain","decrypt_response","err","resp","resp_prototype","respHeader","toObject","responseType","Injector_1","rootInjector","providerMap","instanceMap","createListKey","Injectable","_constructor","newClass","setInstance","setProvider","Inject","propertyType","propertyName","create","onCreate","injector","providerInsntance","getProvider","Injector","ctor","newCtor","VersionType_1","CurrencyEnum_1","Domain_1","LighterEnum_1","VersionType","IN_LUBI","domin","time_zone_diff","lighter","LighterEnum","TEST","countryCode","LIGHT_ONLINE","ONLINE","BR_COIN","IntervalsDecorator","timeKey","startTime","now","LabelManager","initFont","labelOutline","getLabelOutline","fromHEX","destNode","hexColor","font","spacingX","LanguageCenter","toBundleName","merge","toLower","LocalStorageObserver_1","LanguageObserver","readLanguage","saveLanguage","CommonDependManager_1","UIDependManager_1","initDepend","initNativeUtil","initH5Util","initLocalStorage","initAppParamManager","initCommonSocketModel","initAudio","initDebugUtil","initTrackConfig","startNetworkWatch","initCommon","UIDependManager","initUIDepend","Time2Value_1","LauncherLoading","MAX_LAUNCH_PROGRESS","MAX_COMMON_PROGRESS","MAX_WALLET_PROGRESS","_launch","_common","_wallet","time2Value","progress","sum","setValue","ProgressBar","min","updateProgress","LauncherInit_1","BundleCenter_1","LauncherLoading_1","Launcher","versionLb","loadbar","__init","getComponentInChildren","launchProgress","dt","initializer","ret","INTERVAL_CHECK_EVENT_QUEUE","MAX_LENGTH_EVENT_QUEUE","Lighter","_undoneEventMap","_eventQueue","setInterval","_checkEventQueue","sInstance","eid","md5","finishTs","fromObject","ua","getUserAgent","_send","fire","httpRequest","lighterHost","getLighterHost","log","lighterAddr","onload","saveEverUploadLighthouse","everUpload","getEverUploadLighthouse","Event","DEVICE_INFO","nativeLog","pb_1","Message","_one_of_decls","initialize","isArray","__classPrivateFieldGet","getFieldWithDefault","setField","getRepeatedWrapperField","setRepeatedWrapperField","message","w","writer","BinaryWriter","writeString","writeInt64","writeRepeatedMessage","serialize","getResultBuffer","bytes","reader","BinaryReader","nextField","isEndGroup","getFieldNumber","readString","readInt64","readMessage","addToRepeatedWrapperField","deserialize","skipField","_one_of_decls_1","writeEnum","writeInt32","readEnum","readInt32","arg1","arg2","arg3","arg4","arg5","useCapture","types","once","_clearExpiredStorage","localStorage","getItem","removeItem","clearData","user_token","k","clearUserID","clearUserToken","itemKey","buildDeviceInfoItemKey","launcherConf","adjustAppId","account","accountsJSON","accounts","room","betSucceedChipIndex","odds","avatarId","newAvatarData","isUpload","sharkCurrentCoin","b","dailyStorage","todayDataMap","readDaily","checkOne","saveTimestamp","daillyDataJson","daillyData","allDailyDataMap","getMonthAndDay","tempList","transformDate","month","day","todayDate","nowMonth","nowDay","saveObj","it","chcekTime","chceckDate","chcekMonth","chcekDay","saveDaily","read","save","deprecated","oldMethod","methodTime","reject","LongPressButton","touchEvents","touchCancalEvents","initTouch","TOUCH_START","onTouchBegin","onTocuhEnd","TOUCH_CANCEL","handler","customEventData","unscheduleAllCallbacks","EventHandler","saveTowDecimal","decimal","max","num","getInteger","trunc","numeral","amountValue","moeny","digit","rate","parseFloat","floatLen","precisionDigit","toPrecision","pos_decimal","money","thousandths","endsWith","ceil","_money","roundDown","myNumeral","toThousandths","roundUp","CocosBundleEnum_1","inspector","MultLangLabelBase","_bundleName","_mainLangKey","_subLangKey","_object","updateString","getLangString","formatString","onLoad","MultLangLabelBase_1","MultLangLabelCustom","mainLangKey","subLangKey","CocosUiUtil_1","MultLangLabel","MainLangEnum","SubLangEnum","tempSub","tempMain","updateMainLangEnum","updateSubLangEnum","override","MultLangRichTextBase","MultLangRichTextBase_1","MultLangRichText","MultLangUtils","assetPath","path","newPath","getBundle","assetDesc","getNativeClassName","nativeAndroidClassName","methodName","methodSignature","reflection","callStaticMethod","LabelManager_1","SpriteManager_1","NodeManager","visiable","urlPath","find","nodeRes","nodePath","spriteNode","SpriteManager","loadSpriteForNodeBundle","fontNode","loadFontBundle","Color","moment","ObjectLabel","newText","regExp","matchArgs","getLabel","fromEntries","entries","iterator","o","TurnPage","PageViewTurnPageButton","pageView","turnType","Previous","PageView","refreshButtonState","scrollToPage","getCurrentPageIndex","Next","interactable","getPages","Unknow","PlayButtonSoundComp","soundClip","isPlay","soundPath","resBundleName","playEffectWithClip","trim","AudioClip","PlayButtonSoundComp_1","rootNode","tryAddPlaySoundComp","childNodeButtonPlaySoundHandle","childNode","addPlaySoundComp","playButtonSoundComp","resDescribe","btnEffect","setResBundleName","setSoundPath","setIsPlay","PoolMgr","pools","pool","NodePool","put","clear","clearPool","PopupUtil_1","PopUpViewBase","PopupUtil","BasePopup","_content","scale","easing","showSwallow","__awaiter","swallowNode","winSize","BlockInputEvents","PopupState","PopupEvent","__state","None","ChangeState","Show","onShow","_setState","ready","onHide","Hide","hide","onClose","Close","createShowResult","popupNode","popup","createNode","zIndex","onConstruct","popupShow","show","preload","getPopup","preInit","showSync","last","parant","new","PrefabManager","prefabIns","successCallback","failCallback","media_1","oldIOS","MSStream","nativeWakeLock","NoSleep","_wakeLock","handleVisibilityChange","document","visibilityState","enable","addEventListener","noSleepTimer","noSleepVideo","createElement","setAttribute","_addSourceToVideo","webm","mp4","currentTime","dataURI","source","src","appendChild","isEnabled","wakeLock","disable","hidden","release","clearInterval","_platform","_startPreventScreenSleep","isMobile","noSleep","addMask","maskDiv","body","insertBefore","maskNode","querySelectorAll","previewFunctionParams","ProjectConf","GAME_VERSION_V","DEFAULT_HOST","LIGHTER_HOST","loadBundle","loadBunleScene","assetBundle","loadBunleRes","resDir","loadBundleResDir","loadResPackage","resDescribeList","getResDescribeList","totalLoadNum","curLoadNum","addRef","preloadResPackage","preloadBunleRes","relaseResWithObj","removeBundle","releaseAll","loadRemote","texture","ext","releaseResFormBundle","resList","traversalObj","resObj","sceneAsset","loadDir","RichTextManager","richText","richStr","imageAtlas","SkeletonHelper","_skeleton","_eventListeners","setEventListener","onSkeletonEvent","skeletonNode","skeleton","skeletonData","animName","skeletonJson","animations","getAnimations","hasAnimation","setCompleteListener","getState","trackEntry","setAnimation","animationStart","animationEnd","_g","paused","timeScale","_h","boneName","boneNode","getBones","POSITION_CHANGED","attachUtil","generateAttachedNodes","getAttachedNodes","eventListners","eventListner","SpineManager","resultSpine","animationOption","completeCallback","eventListener","spine","getSpine","trackIndex","eventData","failedCallback","defaultAnimation","loadCallback","setSkin","defaultSkin","spriteName","loadSpriteAtlasBundle","getSpriteFrame","atlas","tex","arguments","reg","RegExp","limtLength","maxLen","replaceStr","replacePad","cutStr","padStr","substr","Time2Value","_time","_maxStep","_step","_current","_target","_positive","getScheduler","enableForTarget","scheduleUpdate","unscheduleUpdate","limit","Timer","params","_isValid","runTime","loopCount","intervalTime","scopeIntervalTime","updateCallback","randomTime","timeList","scopeRandom_float","TimerMgr","_timerList","_tempTimerList","_timerId","timerUpdate","optionalParams","addSchedule","timerData","addTimerList","deleteById","timerMgr","ToggleUiContainer","ToggleUiContainer_1","checkEvent","ToggleContainer","component","onToggleClicked","toggleItems","toggle","checkEvents","defaultValue","fillValue","fullStr","pow","repeat","isLimit","isLimitArray","randElement","isToday","nowTime","toDateString","evenyEmpty","matchArgStrings","match","searchValue","transateUrlParams","formatStringOnArrayIndex","flag","subStr","arrayCompareResult","newArray","strMapToObj","strMap","clickManager","noteBtn","formatNumStr","numStr","calcCharacterNum","strArray","TouchType","listen","touchId","allTouchPos","touchTime","getID","getLocation","doTouch","Begin","TOUCH_MOVE","Move","End","Over","checkGesture","Cancal","checkMoveDir","checkPress","Press","dirs","a","vec","sub","MoveRight","MoveLeft","MoveUp","MoveBottom","touchType","onListenTouch","TRACK_PRESS_BUTTON_BY","TRACK_PRESS_BUTTON_FIRE_JOKER","TRACK_PRESS_BUTTON_BUFFALO","TRACK_PRESS_BUTTON_WOLF_GOLD","TRACK_PRESS_BUTTON_HH","TRACK_PRESS_BUTTON_JSYS","TRACK_PRESS_BUTTON_LHD","TRACK_PRESS_BUTTON_7UD","TRACK_PRESS_BUTTON_BEST_OF_FIVE","TRACK_PRESS_BUTTON_CRASH","TRACK_PRESS_BUTTON_GOD_OF_FORTUNE","TRACK_PRESS_BUTTON_DAXIAO","TRACK_PRESS_BUTTON_DOMINO","TRACK_PRESS_BUTTON_TRUCO","TRACK_PRESS_BUTTON_RUMMY_POINT","TRACK_PRESS_BUTTON_TEENPATTI","TRACK_PRESS_BUTTON_CLASSIC_FIVE_DRAGONS","TRACK_PRESS_BUTTON_CRICKET_BATTLE","TRACK_PRESS_BUTTON_ANDAR_BAHAR","TRACK_PRESS_BUTTON_JHANDI_MUNDA","TRACK_PRESS_BUTTON_BEST_CLUB","TRACK_PRESS_BUTTON_BINGO","TRACK_PRESS_BUTTON_CALL_BREAK","ButtonManager_1","EditBoxManager_1","NodeManager_1","PrefabManager_1","RichTextManager_1","SpineManager_1","uiDepend","UIDepend","onNotice","LogsDesc_1","UserInfoObserver_1","ticket","chat_timeStamp","kefu_uid","available_avatar","_value","Coin","lastcoin","nick","gender","avatar","coin","phone","safe_box","vip","is_formal","modify","phoneStr","ClassListener_1","onInit","applyHandler","removeHandler","removeHandlerWithTarget","notice","value1","value2","defalutVal","cloneDeep","noticeHandler","ViewGroupNesting","onTouchHandle","sham","simulate","cancelEvent","EventTouch","getTouches","bubbles","touch","dispatchEvent","__MixItemPropertyItemNodeActive","__MixItemPropertyNodeActive","__MixItemPropertySkeletionAnimation","__MixItemPropertyLayout","Type","NONE","resizeMode","ResizeMode","paddingLeft","paddingRight","paddingTop","paddingBottom","spacingY","VERTICAL","HORIZONTAL","_MixItemProperty","_type","nodeColor","outLineColor","skeletionAnimation","nodeActive","SkeletonData","propertys","Vec3"],"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","sourcesContent":["import Listener from \"../../utils/Listener\";\n\n/** 屏幕方向 */\nexport enum SCREEN_ORIENTATION {\n    /** 竖屏 home 在下  */\n    PORTRAIT = 0,\n    /** 横屏 home 在右  */\n    LANDSCAPE_RIGHT = 1,\n    /** 竖屏 home 在上  */\n    PORTRAIT_UPSIDE_DOWN = 2,\n    /** 横屏 home 在左  */\n    LANDSCAPE_LEFT = 3,\n}\n\n/** 设计宽度 */\nconst DESIGN_WIDTH = 1280;\n/** 设计高度 */\nconst DESIGN_HEIGHT = 720;\n/** 刘海高度 */\nconst NOTCH_HEIGHT = 60;\n\n/** 偏移模式 */\nconst OFFSET_MODE = cc.Enum({\n    /** 按照 max(margin, 刘海高度) 取最大值 偏移 */\n    MAX_MARGIN_AND_NOTCH: 0,\n    /** 按照 add(margin, offset) 取和 偏移 */\n    ADD_MARGIN_AND_OFFSET: 1,\n});\n\nconst { ccclass, property, executeInEditMode, requireComponent, menu } = cc._decorator;\n\n@ccclass\n@executeInEditMode\n@requireComponent(cc.Widget)\n@menu(\"core/ui/AdaptNotch\")\nexport default class AdaptNotch extends cc.Component {\n    @property\n    private _offsetMode: number = OFFSET_MODE.MAX_MARGIN_AND_NOTCH;\n    @property({\n        type: cc.Enum(OFFSET_MODE),\n        tooltip: `偏移模式, 默认 MAX_MARGIN_AND_NOTCH\n                \\n1.MAX_MARGIN_AND_NOTCH, 按照 max(margin, 刘海高度) 取最大值 偏移\n                \\n2.ADD_MARGIN_AND_OFFSET, 按照 add(margin, offset) 取和 偏移\n                `,\n    })\n    public get offsetMode() {\n        return this._offsetMode;\n    }\n    public set offsetMode(value: number) {\n        this._offsetMode = value;\n    }\n\n    @property\n    private _offset: number = 0;\n    @property({\n        type: cc.Float,\n        tooltip: `偏移量(px), 默认 0`,\n        visible: function () {\n            return this._offsetMode == OFFSET_MODE.ADD_MARGIN_AND_OFFSET;\n        },\n    })\n    public get offset() {\n        return this._offset;\n    }\n    public set offset(value: number) {\n        this._offset = value;\n    }\n\n    @property\n    private _landscapeSymmetry: boolean = true;\n    @property({\n        type: cc.Boolean,\n        tooltip: `横屏是否对称, 默认 true`,\n    })\n    public get landscapeSymmetry() {\n        return this._landscapeSymmetry;\n    }\n    public set landscapeSymmetry(value: boolean) {\n        this._landscapeSymmetry = value;\n    }\n\n    @property\n    private _portraitSymmetry: boolean = false;\n    @property({\n        type: cc.Boolean,\n        tooltip: `竖屏是否对称, 默认 false`,\n    })\n    public get portraitSymmetry() {\n        return this._portraitSymmetry;\n    }\n    public set portraitSymmetry(value: boolean) {\n        this._portraitSymmetry = value;\n    }\n\n    /** 是否刘海屏 */\n    private isNotch: boolean = false;\n    /** 屏幕方向 */\n    private orientation: SCREEN_ORIENTATION = SCREEN_ORIENTATION.LANDSCAPE_RIGHT;\n    private widget: cc.Widget = null;\n    private topRaw: number = 0;\n    private bottomRaw: number = 0;\n    private leftRaw: number = 0;\n    private rightRaw: number = 0;\n\n    protected onLoad(): void {\n        this.isNotch = this.getNotch();\n        this.orientation = this.getOritation();\n        this.widget = this.node.getComponent(cc.Widget);\n        this.topRaw = this.widget.top;\n        this.bottomRaw = this.widget.bottom;\n        this.leftRaw = this.widget.left;\n        this.rightRaw = this.widget.right;\n\n        this.adapt();\n\n        cc.view.on(\"canvas-resize\", this.onResize, this);\n        // todo L\n        Listener.on(\"SCREEN_ORIENTATION_CHANGED\", this.onScreenOrientationChanged, this);\n    }\n\n    protected onDestroy(): void {\n        cc.view.off(\"canvas-resize\", this.onResize, this);\n        Listener.off(\"SCREEN_ORIENTATION_CHANGED\", this.onScreenOrientationChanged, this);\n    }\n\n    private onResize(): void {\n        let isNotch = this.getNotch();\n        if (isNotch == this.isNotch) {\n            return;\n        }\n\n        this.isNotch = isNotch;\n        this.adapt();\n    }\n\n    private onScreenOrientationChanged(): void {\n        let orientation = this.getOritation();\n        if (orientation == this.orientation) {\n            return;\n        }\n\n        this.orientation = orientation;\n        this.adapt();\n    }\n\n    private adapt(): void {\n        let target = this.widget.target || this.widget.node.parent;\n\n        if (this.widget.isAlignTop) {\n            let margin = this.topRaw;\n            if (\n                this.orientation == SCREEN_ORIENTATION.PORTRAIT ||\n                (this._portraitSymmetry &&\n                    this.orientation == SCREEN_ORIENTATION.PORTRAIT_UPSIDE_DOWN)\n            ) {\n                margin = this.getMargin(margin, this.widget.isAbsoluteTop, target.height);\n            }\n            this.widget.top = margin;\n        }\n\n        if (this.widget.isAlignBottom) {\n            let margin = this.bottomRaw;\n            if (\n                this.orientation == SCREEN_ORIENTATION.PORTRAIT_UPSIDE_DOWN ||\n                (this._portraitSymmetry && this.orientation == SCREEN_ORIENTATION.PORTRAIT)\n            ) {\n                margin = this.getMargin(margin, this.widget.isAbsoluteBottom, target.height);\n            }\n            this.widget.bottom = margin;\n        }\n\n        if (this.widget.isAlignLeft) {\n            let margin = this.leftRaw;\n            if (\n                this.orientation == SCREEN_ORIENTATION.LANDSCAPE_RIGHT ||\n                (this._landscapeSymmetry && this.orientation == SCREEN_ORIENTATION.LANDSCAPE_LEFT)\n            ) {\n                margin = this.getMargin(margin, this.widget.isAbsoluteLeft, target.width);\n            }\n            this.widget.left = margin;\n        }\n\n        if (this.widget.isAlignRight) {\n            let margin = this.rightRaw;\n            if (\n                this.orientation == SCREEN_ORIENTATION.LANDSCAPE_LEFT ||\n                (this._landscapeSymmetry && this.orientation == SCREEN_ORIENTATION.LANDSCAPE_RIGHT)\n            ) {\n                margin = this.getMargin(margin, this.widget.isAbsoluteRight, target.width);\n            }\n            this.widget.right = margin;\n        }\n\n        this.widget.updateAlignment();\n    }\n\n    private getMargin(margin: number, abs: boolean, parent: number): number {\n        if (!this.isNotch) {\n            return margin;\n        }\n\n        let notch = this.isNotch ? NOTCH_HEIGHT : 0;\n\n        if (abs) {\n            if (this._offsetMode == OFFSET_MODE.MAX_MARGIN_AND_NOTCH) {\n                margin = margin < notch ? notch : margin;\n            } else {\n                margin = margin + this._offset;\n            }\n        } else {\n            if (this._offsetMode == OFFSET_MODE.MAX_MARGIN_AND_NOTCH) {\n                margin = margin < notch / parent ? notch / parent : margin;\n            } else {\n                margin = margin + this._offset / parent;\n            }\n        }\n\n        return margin;\n    }\n\n    private getNotch(): boolean {\n        let frameSize = cc.view.getFrameSize();\n        let width = frameSize.width > frameSize.height ? frameSize.width : frameSize.height;\n        let height = frameSize.width > frameSize.height ? frameSize.height : frameSize.width;\n        let isNotch = width / height > (DESIGN_WIDTH + NOTCH_HEIGHT * 2) / DESIGN_HEIGHT;\n\n        return isNotch;\n    }\n\n    private getOritation(): SCREEN_ORIENTATION {\n        let orientation: SCREEN_ORIENTATION;\n        if (cc.sys.isNative) {\n            orientation = jsb[\"device\"].getDeviceRotation();\n        } else {\n            let frameSize = cc.view.getFrameSize();\n            orientation =\n                frameSize.height > frameSize.width\n                    ? SCREEN_ORIENTATION.PORTRAIT\n                    : SCREEN_ORIENTATION.LANDSCAPE_RIGHT;\n        }\n\n        return orientation;\n    }\n}\n","export class AdjustTrack {\n    private static _instance: AdjustTrack = null;\n\n    public readonly connect_to_naming = \"Updated\";\n    public readonly app_start = \"Start\";\n    public readonly user_active = \"Activate\";\n    public readonly register_phone = \"Phone_reg\";\n    public readonly register_fb = \"FB_reg\";\n    public readonly register_account = \"Register\";\n    public readonly pay_success_lowquota = \"Small\";\n    public readonly pay_success_midquota = \"Medium\";\n    public readonly pay_success_highquota = \"Large\";\n\n    private adjustConf = {};\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new AdjustTrack();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public initAdjustConf() {\n        let launchConfig = CommonDepend.LocalStorageMgr.readLauncherConfig();\n        if (launchConfig && launchConfig.adjust_conf) {\n            let eventInfo = launchConfig.adjust_conf.event_list;\n            if (eventInfo) {\n                let events = {};\n                for (let key in eventInfo) {\n                    let eventName = eventInfo[key].event_name;\n                    let eventToken = eventInfo[key].event_token;\n                    events[eventName] = eventToken;\n                }\n                this.adjustConf = events;\n\n                CommonDepend.H5Util.initAdjustID(launchConfig.adjust_conf.appid || \"\");\n                CC_DEBUG && cc.log(\"AdjustTrack: initAdjust\", JSON.stringify(this.adjustConf));\n            }\n        }\n    }\n\n    /**\n     * Adjust事件track入口，事件参数依赖LaunchConfig返回的事件列表\n     * 如果没有找到事件，返回false，否则返回true\n     * @param eventName\n     * @param data\n     */\n    public trackEvent(eventName, data?): boolean {\n        if (!eventName) {\n            return false;\n        }\n        let eventToken = this.adjustConf[eventName];\n        if (!eventToken) {\n            return false;\n        }\n        if (!data) {\n            data = {};\n        }\n        data.user_id = CommonDepend.UserManager.uid;\n        data.channel = CommonDepend.AppParamManager.getChn();\n        data.brand_code = CommonDepend.AppParamManager.getBrandCode();\n        CC_DEBUG && cc.log(\"AdjustTrack: trackEvent\", eventName, eventToken, JSON.stringify(data));\n        CommonDepend.PlatformUtil.trackAdjustEvent(eventToken, data);\n\n        return true;\n    }\n\n    /**\n     * 按照金额范围Track对应事件\n     * @param amount\n     */\n    public trackPaySuccessEvent(amount) {\n        let eventName = \"\";\n        if (amount > 6000000) {\n            eventName = this.pay_success_highquota;\n        } else if (amount > 300000 && amount <= 6000000) {\n            eventName = this.pay_success_midquota;\n        } else {\n            eventName = this.pay_success_lowquota;\n        }\n        this.trackEvent(eventName);\n    }\n}\n","export enum ApiErrorCode {\n    TIMEOUT = 10000,\n    HTTP_ERROR = 20000,\n    OFFLINE = 30000,\n}\n","import { ProjectInfo } from \"../conf/ProjectInfo\";\nimport { LocalStorageMgr } from \"../storage/LocalStorageMgr\";\n\nexport class AppParamManager {\n    private static _instance: AppParamManager = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new AppParamManager();\n        }\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    /**\n     * AppParam init\n     */\n    public initParam() {\n        let self = this;\n        self.initPackageName();\n        self.initMerCode();\n        self.initBrandCode();\n        self.initChn();\n        self.initAppVersionCode();\n        self.initDeviceID();\n    }\n\n    private initPackageName() {\n        let packageName = CommonDepend.PlatformUtil.getPackageName();\n        CommonDepend.AppParamModel.setPackageName(packageName);\n        CommonDepend.LocalStorageMgr.savePackageName(packageName);\n    }\n\n    private initMerCode() {\n        let merCode = \"\";\n        CommonDepend.AppParamModel.setMerCode(merCode);\n        CommonDepend.LocalStorageMgr.saveMerCode(merCode);\n    }\n\n    private initBrandCode() {\n        let brandCode = CommonDepend.PlatformUtil.getBrand();\n        CommonDepend.AppParamModel.setBrandCode(brandCode);\n        CommonDepend.LocalStorageMgr.saveBrandCode(brandCode);\n    }\n\n    private initChn() {\n        let chn = CommonDepend.PlatformUtil.getChannel();\n        CommonDepend.AppParamModel.setChn(chn);\n        CommonDepend.LocalStorageMgr.saveChn(chn);\n    }\n\n    private initAppVersionCode() {\n        let vc = ProjectInfo.getInstance().GAME_BUILD_NUMBER;\n        CommonDepend.AppParamModel.setAppVersionCode(vc);\n        CommonDepend.LocalStorageMgr.saveAppVersionCode(vc);\n    }\n\n    private initDeviceID() {\n        let deviceId = CommonDepend.PlatformUtil.getDeviceID();\n        //后门，生成新的device_id\n        let switch_device = LocalStorageMgr.getInstance().readSwitchDevice();\n        if (switch_device == \"1\") {\n            let oldDeviceID = CommonDepend.LocalStorageMgr.readDeviceID();\n            if (!oldDeviceID) {\n                deviceId = deviceId + \"_\" + Math.random();\n            } else {\n                deviceId = oldDeviceID;\n            }\n        }\n        CommonDepend.AppParamModel.setDeviceID(deviceId);\n        CommonDepend.LocalStorageMgr.saveDeviceID(deviceId);\n    }\n\n    /**\n     * 包名\n     */\n    public getPackageName() {\n        let packageName = CommonDepend.LocalStorageMgr.readPackageName();\n        if (!packageName) {\n            packageName = CommonDepend.PlatformUtil.getPackageName();\n            CommonDepend.LocalStorageMgr.savePackageName(packageName);\n        }\n        return packageName;\n    }\n\n    /**\n     * 商户号\n     */\n    public getMerCode() {\n        return \"\";\n    }\n\n    /**\n     * 品牌\n     */\n    public getBrandCode() {\n        let brandCode = CommonDepend.LocalStorageMgr.readBrandCode();\n        if (!brandCode) {\n            brandCode = CommonDepend.PlatformUtil.getBrand();\n            CommonDepend.LocalStorageMgr.saveBrandCode(brandCode);\n        }\n        return brandCode;\n    }\n\n    /**\n     * 渠道\n     */\n    public getChn() {\n        let chn = CommonDepend.LocalStorageMgr.readChn();\n        if (!chn) {\n            chn = CommonDepend.PlatformUtil.getChannel();\n            CommonDepend.LocalStorageMgr.saveChn(chn);\n        }\n        return chn;\n    }\n\n    /**\n     * 应用程序名\n     */\n    public getAppName() {\n        return CommonDepend.PlatformUtil.getAppName();\n    }\n\n    /**\n     * appVersionCode\n     */\n    public getAppVersionCode() {\n        let vc = CommonDepend.LocalStorageMgr.readAppVersionCode();\n        if (!vc) {\n            vc = ProjectInfo.getInstance().GAME_BUILD_NUMBER;\n            CommonDepend.LocalStorageMgr.saveAppVersionCode(vc);\n        }\n        return vc;\n    }\n\n    /**\n     * deviceId\n     */\n    public getDeviceID() {\n        let deviceId = CommonDepend.LocalStorageMgr.readDeviceID();\n        if (!deviceId || deviceId.length < 10) {\n            deviceId = CommonDepend.PlatformUtil.getDeviceID();\n            CommonDepend.LocalStorageMgr.saveDeviceID(deviceId);\n        }\n        return deviceId;\n    }\n}\n","export class AppParamModel {\n    private static _instance: AppParamModel = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new AppParamModel();\n        }\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    private chn: string = \"\";\n\n    private merCode: string = \"\";\n\n    private brandCode: string = \"\";\n\n    private appName: string = \"\";\n\n    private packageName: string = \"\";\n\n    private appVersionCode: string = \"\";\n\n    private deviceId: string = \"\";\n\n    private deviceInfo: string = \"\";\n\n    private network: number = 1;\n\n    /**\n     * 包名\n     */\n    public getPackageName() {\n        return this.packageName;\n    }\n\n    public setPackageName(packageName) {\n        this.packageName = packageName;\n    }\n\n    /**\n     * 商户号\n     */\n    public getMerCode() {\n        return this.merCode;\n    }\n\n    public setMerCode(merCode) {\n        this.merCode = merCode;\n    }\n\n    /**\n     * 品牌号\n     */\n    public getBrandCode() {\n        return this.brandCode;\n    }\n\n    public setBrandCode(brandCode) {\n        this.brandCode = brandCode;\n    }\n\n    /**\n     * 完整渠道号\n     */\n    public getChn() {\n        return this.chn;\n    }\n\n    public setChn(chn) {\n        this.chn = chn;\n    }\n\n    /**\n     * 应用程序名\n     */\n    public getAppName() {\n        return this.appName;\n    }\n\n    public setAppName(appName) {\n        this.appName = appName;\n    }\n\n    /**\n     * appVersionCode\n     */\n    public getAppVersionCode() {\n        return this.appVersionCode;\n    }\n\n    public setAppVersionCode(vc) {\n        this.appVersionCode = vc;\n    }\n\n    /**\n     * deviceId\n     */\n    public getDeviceID() {\n        return this.deviceId;\n    }\n\n    public setDeviceID(deviceId) {\n        this.deviceId = deviceId;\n    }\n\n    /**\n     * deviceInfo\n     */\n    public getDeviceInfo() {\n        return this.deviceInfo;\n    }\n\n    public setDeviceInfo(deviceInfo) {\n        this.deviceInfo = deviceInfo;\n    }\n\n    public getNetwork(): number {\n        return this.network;\n    }\n\n    public setNetwork(network: number) {\n        this.network = network;\n    }\n}\n","import { BundleMgr } from \"../bd/BundleMgr\";\n\n/** 背景音乐音量存储键 */\nconst MUSIC_VOLUME_STORAGE_KEY = \"_music_volume\";\n/** 音效音量存储键 */\nconst EFFECT_VOLUME_STORAGE_KEY = \"_effect_volume\";\n/** 背景音乐基础音量倍数 */\nconst MUSIC_VOLUME_RATIO = 0.5;\n/** 音效基础音量倍数 */\nconst EFFECT_VOLUME_RATIO = 0.6;\n\nexport class AudioManager {\n    private static _instance: AudioManager = null;\n\n    private musicVolume: number = 0;\n    private musics: IAudio[] = [];\n\n    private effectVolume: number = 0;\n    private effects: IAudio[] = [];\n\n    /** 是否可恢复 */\n    private resumeEnabled: boolean = true;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new AudioManager();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public init(): void {\n        let musicVolume = CommonDepend.LocalStorageMgr.readData(MUSIC_VOLUME_STORAGE_KEY);\n        if (musicVolume == null) {\n            musicVolume = 1;\n        } else {\n            musicVolume = Number(musicVolume);\n            if (!(musicVolume >= 0 && musicVolume <= 1)) {\n                musicVolume = 1;\n            }\n        }\n        this.musicVolume = musicVolume;\n        CommonDepend.LocalStorageMgr.saveData(\n            MUSIC_VOLUME_STORAGE_KEY,\n            this.musicVolume.toString()\n        );\n\n        let effectVolume = CommonDepend.LocalStorageMgr.readData(EFFECT_VOLUME_STORAGE_KEY);\n        if (effectVolume == null) {\n            effectVolume = 1;\n        } else {\n            effectVolume = Number(effectVolume);\n            if (!(effectVolume >= 0 && effectVolume <= 1)) {\n                effectVolume = 1;\n            }\n        }\n        this.effectVolume = effectVolume;\n        CommonDepend.LocalStorageMgr.saveData(\n            EFFECT_VOLUME_STORAGE_KEY,\n            this.effectVolume.toString()\n        );\n    }\n\n    /** -------------------------------- 背景音乐 -------------------------------- */\n\n    /**\n     * 播放背景音乐\n     * @param resDesc\n     * @param loop 是否循环，默认 true\n     * @param volume 音量，0-1，默认 系统音量\n     * @param onEnd 结束回调\n     */\n    public playMusic(\n        resDesc: IResDescribe,\n        loop: boolean = null,\n        volume: number = null,\n        onEnd: (audio: IAudio) => void = null\n    ): void {\n        if (!(resDesc && typeof resDesc.resPath == \"string\")) {\n            CC_DEBUG && cc.error(`AudioManager playMusic, resDesc err`);\n            return;\n        }\n\n        if (loop == null) {\n            loop = true;\n        }\n\n        if (volume == null) {\n            volume = this.musicVolume;\n        }\n\n        if (!(volume >= 0 && volume <= 1)) {\n            CC_DEBUG && cc.warn(`AudioManager playMusic, volume err: ${volume}`);\n            volume = 1;\n        }\n\n        if (!this.isMusicOpen()) {\n            volume = 0;\n        }\n\n        if (\n            this.musics.length > 0 &&\n            this.musics[this.musics.length - 1].url == resDesc.resPath &&\n            this.musics[this.musics.length - 1].id != null\n        ) {\n            return;\n        }\n\n        this.stopMusic();\n\n        let audio: IAudio = {\n            url: resDesc.resPath,\n            id: null,\n            loop: loop,\n            volume: volume,\n        };\n        this.musics.push(audio);\n\n        BundleMgr.getInstance().loadResFromBundle(resDesc, (clip: cc.AudioClip) => {\n            if (!clip) {\n                return;\n            }\n\n            let index = this.musics.indexOf(audio);\n            if (index != this.musics.length - 1) {\n                // 后面又播放了其他bgm\n                return;\n            }\n\n            audio.id = cc.audioEngine.play(clip, loop, MUSIC_VOLUME_RATIO * volume);\n\n            cc.audioEngine.setFinishCallback(audio.id, () => {\n                audio.id = null;\n\n                if (typeof onEnd == \"function\") {\n                    onEnd(audio);\n                }\n            });\n        });\n    }\n\n    /**\n     * 停止背景音乐\n     */\n    public stopMusic(): void {\n        for (let i = 0; i < this.musics.length; i++) {\n            let audio = this.musics[i];\n            if (audio.id != null) {\n                cc.audioEngine.stop(audio.id);\n                audio.id = null;\n            }\n        }\n    }\n\n    /**\n     * 暂停背景音乐\n     */\n    public pauseMusic(): void {\n        if (this.musics.length > 0) {\n            cc.audioEngine.pause(this.musics[this.musics.length - 1].id);\n        }\n    }\n\n    /**\n     * 恢复背景音乐\n     */\n    public resumeMusic(): void {\n        if (this.musics.length > 0) {\n            cc.audioEngine.resume(this.musics[this.musics.length - 1].id);\n        }\n    }\n\n    /**\n     * 设置背景音乐开关\n     * @param open\n     */\n    public setMusicOpen(open: boolean): void {\n        this.setMusicVolumeValue(open ? 1 : 0);\n    }\n\n    /**\n     * 设置背景音乐音量-数值\n     * @param volume 音量，0-1\n     */\n    public setMusicVolumeValue(volume: number): void {\n        if (!(volume >= 0 && volume <= 1)) {\n            CC_DEBUG && cc.warn(`AudioManager setMusicVolumeValue, volume err: ${volume}`);\n            volume = 1;\n        }\n\n        if (this.musicVolume == volume) {\n            return;\n        }\n\n        this.musicVolume = volume;\n        CommonDepend.LocalStorageMgr.saveData(\n            MUSIC_VOLUME_STORAGE_KEY,\n            this.musicVolume.toString()\n        );\n\n        this.setMusicVolume(this.musicVolume);\n    }\n\n    /**\n     * 设置背景音乐音量-比例\n     * @param ratio 比例，0-1\n     * @param resetTime 重置时间，[0-60]，单位 秒，默认 0（不重置）\n     */\n    public setMusicVolumeRatio(ratio: number, resetTime: number = 0): void {\n        if (!(ratio >= 0 && ratio <= 1)) {\n            CC_DEBUG && cc.warn(`AudioManager setMusicVolumeRatio, ratio err: ${ratio}`);\n            ratio = 1;\n        }\n\n        if (!(resetTime >= 0 && resetTime <= 60)) {\n            CC_DEBUG && cc.warn(`AudioManager setMusicVolumeRatio, resetTime err: ${resetTime}`);\n            return;\n        }\n\n        this.setMusicVolume(this.musicVolume * ratio);\n\n        if (resetTime > 0) {\n            setTimeout(() => {\n                this.setMusicVolume(this.musicVolume);\n            }, resetTime * 1000);\n        }\n    }\n\n    /**\n     * 设置背景音乐音量\n     * @param volume 音量，0-1\n     */\n    private setMusicVolume(volume: number): void {\n        if (!(volume >= 0 && volume <= 1)) {\n            CC_DEBUG && cc.warn(`AudioManager setMusicVolume, volume err: ${volume}`);\n            volume = 1;\n        }\n\n        if (!this.isMusicOpen()) {\n            volume = 0;\n        }\n\n        if (this.musics.length > 0) {\n            cc.audioEngine.setVolume(\n                this.musics[this.musics.length - 1].id,\n                MUSIC_VOLUME_RATIO * volume\n            );\n        }\n    }\n\n    /**\n     * 背景音乐是否打开\n     * @returns\n     */\n    public isMusicOpen(): boolean {\n        return this.musicVolume > 0;\n    }\n\n    /** -------------------------------- 音效 -------------------------------- */\n\n    /**\n     * 播放音效\n     * @param resDesc\n     * @param loop 是否循环，默认 false\n     * @param volume 音量，0-1，默认 系统音量\n     * @param time 从什么时间开始播放，单位秒，0-duration，默认 0\n     * @param tag 标签，默认 空\n     * @param onPlay 播放回调\n     * @param onEnd 结束回调\n     * @returns IAudio\n     */\n    public playEffect(\n        resDesc: IResDescribe,\n        loop: boolean = null,\n        volume: number = null,\n        time: number = null,\n        tag: string = null,\n        onPlay: (audio: IAudio) => void = null,\n        onEnd: (audio: IAudio) => void = null\n    ): IAudio {\n        if (!(resDesc && typeof resDesc.resPath == \"string\")) {\n            CC_DEBUG && cc.error(`AudioManager playEffect, resDesc err`);\n        }\n\n        if (loop == null) {\n            loop = false;\n        }\n\n        if (volume == null) {\n            volume = this.effectVolume;\n        }\n\n        if (!(volume >= 0 && volume <= 1)) {\n            CC_DEBUG && cc.warn(`AudioManager playEffect, volume err: ${volume}`);\n            volume = 1;\n        }\n\n        if (!this.isEffectOpen()) {\n            volume = 0;\n        }\n\n        if (this.effects.length >= cc.audioEngine.getMaxAudioInstance() - 1) {\n            let audio = this.effects.shift();\n            cc.audioEngine.stop(audio.id);\n        }\n\n        let stop = () => {\n            CC_DEBUG && cc.warn(`AudioManager playEffect, stop, uninit, url: ${resDesc.resPath}`);\n            this.stopEffect(resDesc);\n        };\n\n        let audio: IAudio = {\n            url: resDesc.resPath,\n            id: null,\n            loop: loop,\n            volume: volume,\n            duration: null,\n            tag: tag,\n            stop: stop,\n        };\n        this.effects.push(audio);\n\n        let remove = () => {\n            let index = this.effects.indexOf(audio);\n            if (index > -1) {\n                this.effects.splice(index, 1);\n            }\n\n            audio.id = null;\n            audio.stop = () => {};\n        };\n\n        BundleMgr.getInstance().loadResFromBundle(resDesc, (clip: cc.AudioClip) => {\n            if (clip) {\n                audio.id = cc.audioEngine.play(clip, loop, EFFECT_VOLUME_RATIO * volume);\n                audio.duration = cc.audioEngine.getDuration(audio.id);\n\n                if (time > 0 && time < audio.duration) {\n                    cc.audioEngine.setCurrentTime(audio.id, time);\n                }\n\n                audio.stop = () => {\n                    cc.audioEngine.stop(audio.id);\n                    remove();\n                };\n\n                cc.audioEngine.setFinishCallback(audio.id, () => {\n                    remove();\n\n                    if (typeof onEnd == \"function\") {\n                        onEnd(audio);\n                    }\n                });\n\n                if (typeof onPlay == \"function\") {\n                    onPlay(audio);\n                }\n            } else {\n                remove();\n            }\n        });\n\n        return audio;\n    }\n\n    public playMultiEffect(resDesc: IResDescribe, loop?: boolean) {\n        return this.playEffect(resDesc, loop);\n    }\n\n    public playEffectWithClip(clip: cc.AudioClip, loop: boolean = false, volume: number = null) {\n        if (volume == null) {\n            volume = this.effectVolume;\n        }\n\n        if (!(volume >= 0 && volume <= 1)) {\n            CC_DEBUG && cc.warn(`AudioManager playEffect, volume err: ${volume}`);\n            volume = 1;\n        }\n\n        if (!this.isEffectOpen()) {\n            volume = 0;\n        }\n\n        cc.audioEngine.play(clip, loop, EFFECT_VOLUME_RATIO * volume);\n    }\n\n    /**\n     * 停止音效\n     * @param resDesc\n     * @param all 相同url是否全部停止，默认 true\n     */\n    public stopEffect(resDesc: IResDescribe, all: boolean = true): void {\n        if (!(resDesc && typeof resDesc.resPath == \"string\")) {\n            CC_DEBUG && cc.error(`AudioManager stopEffect, resDesc err`);\n        }\n\n        for (let i = 0; i < this.effects.length; i++) {\n            if (resDesc.resPath == this.effects[i].url) {\n                cc.audioEngine.stop(this.effects[i].id);\n                this.effects.splice(i, 1);\n                i--;\n\n                if (!all) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * 播放标签音效\n     * @param tag 标签\n     * @param resDesc\n     * @param loop 是否循环，默认 false\n     * @param volume 音量，0-1，默认 系统音量\n     * @returns IAudio\n     */\n    public playTagEffect(\n        tag: string,\n        resDesc: IResDescribe,\n        loop: boolean = null,\n        volume: number = null\n    ): IAudio {\n        return this.playEffect(resDesc, loop, volume, null, tag);\n    }\n\n    /**\n     * 停止标签音效\n     * @param tag 标签，默认空（停止所有标签）\n     */\n    public stopTagEffect(tag: string = null): void {\n        for (let i = 0; i < this.effects.length; i++) {\n            if ((tag && tag == this.effects[i].tag) || (!tag && this.effects[i].tag)) {\n                cc.audioEngine.stop(this.effects[i].id);\n                this.effects.splice(i, 1);\n                i--;\n            }\n        }\n    }\n\n    /**\n     * 停止所有音效\n     */\n    public stopAllEffects(): void {\n        for (let i = 0; i < this.effects.length; i++) {\n            cc.audioEngine.stop(this.effects[i].id);\n        }\n\n        this.effects = [];\n    }\n\n    /**\n     * 暂停音效\n     * @param resDesc\n     * @param all 相同url是否全部暂停，默认 true\n     */\n    public pauseEffect(resDesc: IResDescribe, all: boolean = true): void {\n        if (!(resDesc && typeof resDesc.resPath == \"string\")) {\n            CC_DEBUG && cc.error(`AudioManager pauseEffect, resDesc err`);\n        }\n\n        for (let i = 0; i < this.effects.length; i++) {\n            if (resDesc.resPath == this.effects[i].url) {\n                cc.audioEngine.pause(this.effects[i].id);\n                if (!all) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * 暂停所有音效\n     */\n    public pauseAllEffects(): void {\n        for (let i = 0; i < this.effects.length; i++) {\n            cc.audioEngine.pause(this.effects[i].id);\n        }\n    }\n\n    /**\n     * 恢复音效\n     * @param resDesc\n     * @param all 相同url是否全部恢复，默认 true\n     */\n    public resumeEffect(resDesc: IResDescribe, all: boolean = true): void {\n        if (!(resDesc && typeof resDesc.resPath == \"string\")) {\n            CC_DEBUG && cc.error(`AudioManager resumeEffect, resDesc err`);\n        }\n\n        for (let i = 0; i < this.effects.length; i++) {\n            if (resDesc.resPath == this.effects[i].url) {\n                cc.audioEngine.resume(this.effects[i].id);\n                if (!all) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * 恢复所有音效\n     */\n    public resumeAllEffects(): void {\n        for (let i = 0; i < this.effects.length; i++) {\n            cc.audioEngine.resume(this.effects[i].id);\n        }\n    }\n\n    /**\n     * 设置音效开关\n     * @param open\n     */\n    public setEffectOpen(open: boolean): void {\n        this.setEffectsVolumeValue(open ? 1 : 0);\n    }\n\n    /**\n     * 设置音效音量-数值\n     * @param volume 音量，0-1\n     */\n    public setEffectsVolumeValue(volume: number): void {\n        if (!(volume >= 0 && volume <= 1)) {\n            CC_DEBUG && cc.warn(`AudioManager setEffectsVolumeValue, volume err: ${volume}`);\n            volume = 1;\n        }\n\n        if (this.effectVolume == volume) {\n            return;\n        }\n\n        this.effectVolume = volume;\n        CommonDepend.LocalStorageMgr.saveData(\n            EFFECT_VOLUME_STORAGE_KEY,\n            this.effectVolume.toString()\n        );\n\n        this.setEffectsVolume(this.effectVolume);\n    }\n\n    /**\n     * 设置音效音量-比例\n     * @param ratio 比例，0-1\n     * @param resetTime 重置时间，[0-30]，单位 秒，默认 0（不重置）\n     */\n    public setEffectsVolumeRatio(ratio: number, resetTime: number = 0): void {\n        if (!(ratio >= 0 && ratio <= 1)) {\n            CC_DEBUG && cc.warn(`AudioManager setEffectsVolumeRatio, ratio err: ${ratio}`);\n            ratio = 1;\n        }\n\n        if (!(resetTime >= 0 && resetTime <= 30)) {\n            CC_DEBUG && cc.warn(`AudioManager setEffectsVolumeRatio, resetTime err: ${resetTime}`);\n            return;\n        }\n\n        this.setEffectsVolume(this.effectVolume * ratio);\n\n        if (resetTime > 0) {\n            setTimeout(() => {\n                this.setEffectsVolume(this.effectVolume);\n            }, resetTime * 1000);\n        }\n    }\n\n    /**\n     * 设置音效音量\n     * @param volume 音量，0-1\n     */\n    private setEffectsVolume(volume: number): void {\n        if (!(volume >= 0 && volume <= 1)) {\n            CC_DEBUG && cc.warn(`AudioManager setEffectsVolume, volume err: ${volume}`);\n            volume = 1;\n        }\n\n        if (!this.isEffectOpen()) {\n            volume = 0;\n        }\n\n        for (let i = 0; i < this.effects.length; i++) {\n            cc.audioEngine.setVolume(this.effects[i].id, EFFECT_VOLUME_RATIO * volume);\n        }\n    }\n\n    /**\n     * 音效是否打开\n     * @returns\n     */\n    public isEffectOpen(): boolean {\n        return this.effectVolume > 0;\n    }\n\n    /** -------------------------------- all -------------------------------- */\n\n    public stopAll(): void {\n        cc.audioEngine.stopAll();\n\n        for (let i = 0; i < this.musics.length; i++) {\n            this.musics[i].id = null;\n        }\n\n        this.effects = [];\n    }\n\n    public pauseAll(): void {\n        cc.audioEngine.pauseAll();\n    }\n\n    public setResumeEnabled(enabled: boolean): void {\n        this.resumeEnabled = enabled;\n    }\n\n    public resumeAll(): void {\n        if (!this.resumeEnabled) {\n            return;\n        }\n\n        cc.audioEngine.resumeAll();\n    }\n\n    public uncacheAll(): void {\n        this.stopAll();\n        cc.audioEngine.uncacheAll();\n    }\n}\n","import {\n    bind,\n    createDefaultSetter,\n    getOwnKeys,\n    getOwnPropertyDescriptors,\n} from \"./DecoratorsUtils\";\n\nconst { defineProperty, getPrototypeOf } = Object;\n\nlet mapStore;\n\nfunction getBoundSuper(obj, fn) {\n    if (!mapStore) {\n        mapStore = new WeakMap();\n    }\n\n    if (mapStore.has(obj) === false) {\n        mapStore.set(obj, new WeakMap());\n    }\n\n    const superStore = mapStore.get(obj);\n\n    if (superStore.has(fn) === false) {\n        superStore.set(fn, bind(fn, obj));\n    }\n\n    return superStore.get(fn);\n}\n\nfunction autobindClass<TFunction extends Function>(klass: TFunction): TFunction | void {\n    const descs = getOwnPropertyDescriptors(klass.prototype);\n    const keys = getOwnKeys(descs);\n\n    for (let i = 0, l = keys.length; i < l; i++) {\n        const key = keys[i];\n        const desc = descs[key];\n\n        if (typeof desc.value !== \"function\" || key === \"constructor\") {\n            continue;\n        }\n\n        defineProperty(klass.prototype, key, autobindMethod(klass.prototype, key, desc));\n    }\n}\n\nfunction autobindMethod<T>(\n    target: Object,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<T>\n): TypedPropertyDescriptor<T> {\n    const { value: fn, configurable, enumerable } = descriptor;\n    if (typeof fn !== \"function\") {\n        throw new SyntaxError(`@autobind can only be used on functions, not: ${fn}`);\n    }\n\n    const { constructor } = target;\n\n    return {\n        configurable,\n        enumerable,\n\n        get() {\n            if (this === target) {\n                return fn;\n            }\n\n            if (\n                this.constructor !== constructor &&\n                getPrototypeOf(this).constructor === constructor\n            ) {\n                return fn;\n            }\n\n            if (this.constructor !== constructor && propertyKey in this.constructor.prototype) {\n                return getBoundSuper(this, fn);\n            }\n\n            const boundFn = bind(fn, this);\n\n            defineProperty(this, propertyKey, {\n                configurable: true,\n                writable: true,\n                // NOT enumerable when it's a bound method\n                enumerable: false,\n                value: boundFn,\n            });\n\n            return boundFn;\n        },\n        set: createDefaultSetter(propertyKey),\n    };\n}\n\nfunction handle<TFunction extends Function>(target: TFunction): TFunction | void;\nfunction handle<T>(\n    target: Object,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<T>\n): TypedPropertyDescriptor<T> | void;\nfunction handle<T, TFunction extends Function>(\n    target: TFunction,\n    propertyKey?: string | symbol,\n    descriptor?: TypedPropertyDescriptor<T>\n): TypedPropertyDescriptor<T> | void | TFunction {\n    if (target instanceof Function) {\n        return autobindClass(target);\n    }\n    return autobindMethod(target, propertyKey, descriptor);\n}\n\nexport default function autobind<TFunction extends Function>(target: TFunction): TFunction | void;\nexport default function autobind<T>(\n    target: Object,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<T>\n): TypedPropertyDescriptor<T> | void;\nexport default function autobind<T, TFunction>(\n    target: Object | TFunction,\n    propertyKey?: string | symbol,\n    descriptor?: TypedPropertyDescriptor<T>\n): TypedPropertyDescriptor<T> | void | TFunction {\n    return handle(target, propertyKey, descriptor);\n}\n","const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class AutoListItem extends cc.Component {\n    public refreshUi(index: number, ...args: any[]): void {\n        this.onRefreshUI(index, ...args);\n    }\n\n    protected onRefreshUI(index: number, ...args: any[]) {}\n}\n","import AutoListItem from \"./AutoListItem\";\nconst { ccclass, property, menu } = cc._decorator;\n\n@ccclass\n@menu(\"core/ui/AutoListLayout\")\nexport default class AutoListLayout extends cc.Component {\n    @property(cc.Prefab)\n    protected itemPrefab: cc.Prefab = null;\n\n    @property({ type: cc.Prefab, displayName: \"item间的间隔icon\" })\n    protected spacingPrefab: cc.Prefab = null;\n\n    protected items: cc.Node[] = [];\n\n    private _total: number = 0;\n    public get total(): number {\n        return this._total;\n    }\n    public set total(v: number) {\n        if (this.total !== v) {\n            this._total = v;\n            this.updataItems();\n        }\n    }\n\n    public renderItems: (index: number, comp: AutoListItem) => void = null;\n\n    protected updataItems() {\n        this.items.splice(this.total, this.items.length - this.total).forEach((node) => {\n            node.destroy();\n        });\n        for (let i = this.items.length; i < this.total; i++) {\n            if (i > 0 && this.spacingPrefab) {\n                let spacingItem = cc.instantiate(this.spacingPrefab);\n                this.node.addChild(spacingItem);\n            }\n            let item = cc.instantiate(this.itemPrefab);\n            this.node.addChild(item);\n            this.items.push(item);\n        }\n\n        this.items.forEach((item, index) => {\n            if (this.renderItems) {\n                this.renderItems(index, item.getComponent(AutoListItem));\n            } else {\n                item.getComponent(AutoListItem).refreshUi(index);\n            }\n        });\n    }\n}\n","export function AwaitFunction(\n    target: Object,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<any>\n): TypedPropertyDescriptor<any> {\n    const { constructor } = target;\n    let oldValue = descriptor.value;\n    let current: Promise<any> = null;\n    descriptor.value = function (...args) {\n        current =\n            current?.then(() => {\n                oldValue.call(this, ...args);\n            }) ??\n            Promise.resolve().then(() => {\n                oldValue.call(this, ...args);\n            });\n    };\n    return descriptor;\n}\n","import Flavor from \"../conf/Flavor\";\nimport ProjectConf from \"../conf/ProjectConf\";\nimport { ProjectInfo } from \"../conf/ProjectInfo\";\nimport { SkinType } from \"../conf/SkinType\";\nimport { Instance } from \"../utils/decorators/InstanceClassDecorator\";\nimport { Tools } from \"../utils/Tools\";\nimport LanguageCenter from \"./LanguageCenter\";\nimport LanguageObserver from \"./LanguageObserver\";\n\nexport default abstract class BaseBundleLanguage<T extends LG.ILanguageConfig> {\n    protected abstract language: LG.ILanguageConfigs;\n    protected skin: LG.ISkinLangeConfigs = {};\n\n    constructor() { }\n\n    applyPorxy(object: LG.ILanguageConfig, begin: boolean = false) {\n        if (!object) {\n            return;\n        }\n        const proxy = new Proxy(object, {\n            get: (target: T, p: string, receiver: any): any => {\n                let result: any = target[p];\n\n                if (begin) {\n                    function getLang(lang: LG.ILanguageConfigs) {\n                        return (\n                            (lang?.[Instance(LanguageObserver).get()] ??\n                                lang?.[Flavor.Language.curLanguage])?.[p] ?? undefined\n                        );\n                    }\n                    result =\n                        getLang(this.skin?.[Flavor.Skin.curMainSkin]) || getLang(this.language);\n                }\n\n                if (typeof result === \"string\") {\n                    result = Tools.formatStringInArgs(result, {\n                        CUR: ProjectInfo.getInstance().CurrentIntConf.currency,\n                        _skin_: Flavor.Skin.curMainSkin.split(\"-\")[1],\n                    });\n                    return result;\n                } else if (typeof result === \"number\") {\n                    return result;\n                } else if (typeof result === \"object\") {\n                    return this.applyPorxy(result);\n                } else {\n                    return result;\n                }\n            },\n        });\n        return proxy;\n    }\n\n    public get(): LG.TLanguageConfig<T> {\n        return this.applyPorxy(this.language[Flavor.Language.curLanguage], true) as any;\n    }\n}\n","import { BundleNames } from \"../../conf/BundleNames\";\nimport Flavor from \"../../conf/Flavor\";\nimport { SkinType } from \"../../conf/SkinType\";\nimport BundleSkinCenter from \"./BundleSkinCenter\";\nexport default abstract class BaseBundleSkin<T extends IBundleResInfo>\n    implements BdSkin.IBundleSkin\n{\n    protected abstract skin: BdSkin.TSkinInfo;\n    constructor(protected bundleName: BundleNames) {\n        BundleSkinCenter.getInstance().applySkin(bundleName, this);\n    }\n\n    public getCurSkin(): BdSkin.TBundleInfo<T> {\n        return {\n            bundleName: this.bundleName,\n            ...(this.skin?.[Flavor.Skin.curMainSkin] ?? this.skin[SkinType.FINAL]),\n        };\n    }\n\n    public skinProxy<T extends { [index: string]: any }>(array: T): T {\n        const setBundleName = (desc: IResDescribe) => {\n            desc.bundleName = this.bundleName;\n        };\n        const forEachDesc = (descs: IResDescribe[]) => {\n            for (let key in descs) {\n                if (!descs[key].resPath && !descs[key].type) {\n                    forEachDesc(descs[key] as any);\n                } else {\n                    setBundleName(descs[key]);\n                }\n            }\n        };\n\n        const proxy = new Proxy(array, {\n            get: (target: T, p: string, receiver: any): IBundleDesc => {\n                try {\n                    const result = target[p];\n                    if (result.resPath && result.type) {\n                        setBundleName(result);\n                    } else {\n                        forEachDesc(result);\n                    }\n\n                    return result;\n                } catch (e) {\n                    /*    if (CC_DEBUG) {\n                        CC_DEBUG && cc.error(\n                            `[${this.constructor.name}] not found skin, key=>${p} target=>`,\n                            target,\n                            e\n                        );\n                    } */\n                }\n                return null;\n            },\n        });\n\n        return proxy;\n    }\n\n    //////////////////获取资源配置 begin/////////////////////\n    public get Priority() {\n        return this.skinProxy(this.getCurSkin().priority);\n    }\n    public get UnPriority() {\n        return this.skinProxy(this.getCurSkin().unpriority);\n    }\n    public get LoadOnDemand() {\n        return this.skinProxy(this.getCurSkin().loadOnDemand);\n    }\n\n    //////////////////获取资源配置 end/////////////////////\n}\n","import Flavor from \"../conf/Flavor\";\nimport ProjectConf from \"../conf/ProjectConf\";\nimport { ProjectInfo } from \"../conf/ProjectInfo\";\nimport { Instance } from \"../utils/decorators/InstanceClassDecorator\";\nimport { Tools } from \"../utils/Tools\";\nimport LanguageCenter from \"./LanguageCenter\";\nimport LanguageObserver from \"./LanguageObserver\";\n\nexport default abstract class BaseBundleUiLanguage<T extends LG.ILanguageConfig> {\n    protected abstract getLanguage(): LG.ILanguageConfigs;\n\n    constructor() {\n        let className = cc.js.getClassName(this);\n        Instance(LanguageCenter).applyLanguage(\n            /(?<bundle>.+)UiLanguage/.exec(className)?.groups?.bundle ?? \"\",\n            this.getLanguage()\n        );\n    }\n\n    get() {\n        let className = cc.js.getClassName(this);\n        return Instance(LanguageCenter).getLanguage4Bundle(className);\n    }\n}\n","const { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\nexport enum EnumActiveType {\n    HideAll,\n    ShowFirstChild,\n}\n\n@ccclass\n@executeInEditMode\n@menu(\"core/ui/BaseEnumComp\")\nexport default abstract class BaseEnumComp extends cc.Component {\n    @property\n    private _activeIndex: number = 0;\n\n    @property({ type: cc.Enum({}) })\n    public get activeIndex() {\n        return this._activeIndex;\n    }\n\n    public set activeIndex(value: EnumActiveType | number) {\n        this._activeIndex = value;\n        this.updateActive();\n    }\n\n    public show4Name(nodeName: string) {\n        this.activeIndex =\n            this.getChilds().findIndex((item) => {\n                return item.name === nodeName;\n            }) + 1;\n    }\n\n    public get currentName() {\n        return this.getChilds()[this.activeIndex - 1].name;\n    }\n\n    public abstract getChilds(): { name: string; [index: string]: any }[];\n\n    protected abstract updateActive(): void;\n\n    // update (dt) {}\n}\n","import { BundleDepend } from \"../conf/bd_depend/BundleDepend\";\nimport { BundleNames } from \"../conf/BundleNames\";\nimport { lodash } from \"../utils/NpmExport\";\nimport BundleSkinCenter from \"./bd_skin/BundleSkinCenter\";\nimport { BundleMgr } from \"./BundleMgr\";\nimport { ResLoader } from \"./ResLoader\";\n\ntype TBundleName = string;\ntype TBundle = BundleNames;\n\ntype TProgressCallfunc = (current: number, total: number) => void;\n\nexport default class BundleCenter {\n    private static _instance = null;\n\n    public static getInstance(): BundleCenter {\n        if (!this._instance) {\n            this._instance = new BundleCenter();\n            window[\"BundleCenter\"] = this._instance;\n        }\n        return this._instance;\n    }\n\n    private bundleMap: Map<TBundleName, number> = new Map();\n\n    private currentBundle: TBundle = null;\n\n    private constructor() {}\n\n    public launchScene(bundle: TBundle, sceneName?: string) {\n        if (CC_DEBUG) {\n            CC_DEBUG && cc.log(\"[BundleCenter] launchScene \", bundle, sceneName || \"\");\n        }\n\n        let onProgress = null;\n        let onSuccess = null;\n        let onLaunchedSceneComplete = null;\n        let onFailed = null;\n\n        const promise = this.load(\n            bundle,\n            (current: number, total: number) => {\n                onProgress?.(current, total);\n            },\n            () => {\n                CC_DEBUG && cc.error(\"[bundleCenter] bundle: scene failed\");\n            }\n        )\n            .then(() => {\n                const bundleInfo = BundleSkinCenter.getInstance().getBundleInfo(bundle);\n                sceneName = sceneName || bundleInfo.launchScene;\n                if (sceneName) {\n                    cc.director.loadScene(sceneName, (error) => {\n                        if (error) {\n                            this.deleteReference(bundle);\n                            onFailed?.();\n                        } else {\n                            this.deleteReference(this.currentBundle);\n                            this.currentBundle = bundle;\n                            onLaunchedSceneComplete?.();\n                            onSuccess?.();\n                        }\n                    });\n                } else {\n                    const launchPrefabPath = bundleInfo.launchPrefabPath;\n                    if (CC_DEBUG) {\n                        if (lodash.isEmpty(launchPrefabPath)) {\n                            CC_DEBUG &&\n                                CC_DEBUG &&\n                                cc.error(\n                                    `[bundleCenter] bundle:${bundle} Skin 未配置sceneName||launchPrefabPath 参数`\n                                );\n                            return;\n                        }\n                    }\n                    let scene = CommonDepend.CocosUtils.getSceneCanvas();\n                    BundleMgr.getInstance().loadResFromBundle(\n                        { bundleName: bundle, resPath: launchPrefabPath, type: cc.Prefab },\n                        (prefab: cc.Prefab) => {\n                            if (prefab) {\n                                scene.addChild(cc.instantiate(prefab));\n                                this.currentBundle = bundle;\n                            }\n                        }\n                    );\n                    onSuccess?.();\n                }\n            })\n            .catch(() => {\n                onFailed?.();\n            });\n\n        const result = {\n            onFailed: (callfunc: Function) => {\n                onFailed = callfunc;\n                return result;\n            },\n            onProgress: (callfunc: TProgressCallfunc) => {\n                onProgress = callfunc;\n                return result;\n            },\n            onSuccess: (callfunc: Function) => {\n                onSuccess = callfunc;\n                return result;\n            },\n            onLaunchedSceneComplete: (callfunc: Function) => {\n                onLaunchedSceneComplete = callfunc;\n                return result;\n            },\n            promise,\n        };\n\n        return result;\n    }\n\n    public closeMiniGame(node: cc.Node) {\n        node.destroy();\n        this.deleteReference(this.currentBundle);\n        this.currentBundle = BundleNames.HALL;\n    }\n\n    public load(bundle: TBundle, onProgress?: TProgressCallfunc, failed?: () => void) {\n        return this.loadBundleWithDependencies(bundle, onProgress, failed);\n    }\n\n    private async loadBundleWithDependencies(\n        bundle: TBundle,\n        onProgress?: TProgressCallfunc,\n        failed?: () => void\n    ) {\n        const bundles = this.findDependencies(bundle);\n        await this.loadBundles(bundles, onProgress, failed);\n    }\n\n    private async loadBundles(\n        bundles: TBundle[],\n        onProgress?: TProgressCallfunc,\n        failed?: () => void\n    ) {\n        const ITEM = 100;\n        const TOTAl = ITEM * bundles.length;\n\n        for (let i = 0, len = bundles.length; i < len; i++) {\n            const bundle: TBundle = bundles[i];\n            await this.loadBundleWithRes(\n                bundle,\n                (current: number, total: number) => {\n                    const progress = (current / total) * ITEM + ITEM * i;\n                    onProgress?.(progress, TOTAl);\n                },\n                failed\n            );\n            this.addReference(bundle);\n        }\n    }\n\n    private addReference(bundle: TBundle) {\n        const count = this.bundleMap.get(bundle) ?? 0;\n        this.bundleMap.set(bundle, count + 1);\n    }\n\n    private deleteReference(bundle?: TBundle) {\n        if (!bundle) {\n            return;\n        }\n        const bundles = this.findDependencies(bundle);\n\n        for (let bundle of bundles) {\n            const count = (this.bundleMap.get(bundle) ?? 0) - 1;\n\n            this.bundleMap.set(bundle, count);\n\n            if (count == 0) {\n                const bundleInfo = BundleSkinCenter.getInstance().getBundleInfo(bundle);\n                BundleMgr.getInstance().releaseResPackageFromBundle(bundleInfo);\n            } else if (count < 0) {\n                this.bundleMap.set(bundle, 0);\n            }\n        }\n    }\n\n    private findDependencies(bundle: TBundle) {\n        return this.__findDependencies(bundle);\n    }\n\n    private __findDependencies(bundle: TBundle, bundles: TBundle[] = []) {\n        let dependencies: TBundle[] = BundleDepend.getDepend(bundle);\n        for (let bundle of dependencies ?? []) {\n            this.__findDependencies(bundle, bundles);\n        }\n        if (!bundles.includes(bundle)) {\n            bundles.push(bundle);\n        }\n        return bundles;\n    }\n\n    private async loadBundleWithRes(\n        bundle: TBundle,\n        onProgress?: TProgressCallfunc,\n        failed?: () => void\n    ): Promise<boolean> {\n        let bd = await ResLoader.getInstance().asyncLoadBundle(bundle);\n        if (!bd) {\n            throw new Error(\"[BundleCenter] loading bundle failed!\" + bundle);\n        }\n        return new Promise((resolve) => {\n            const bundleInfo = BundleSkinCenter.getInstance().getBundleInfo(bundle);\n            BundleMgr.getInstance().loadResPackageFromBundle(\n                bundleInfo,\n                (total: number, cur: number) => {\n                    onProgress?.(cur, total);\n                    if (total <= cur) {\n                        resolve(true);\n                    }\n                },\n                () => {\n                    failed?.();\n                }\n            );\n        });\n    }\n}\n\nBundleCenter.getInstance();\n","import { BundleNames } from \"../../../BundleNames\";\n\nexport let BundleDependFinal: BdDepend.TBundleSkinDepend = {\n    [BundleNames.COMMON]: [],\n    [BundleNames.WALLET]: [BundleNames.COMMON],\n    [BundleNames.COMMON_BRC]: [BundleNames.COMMON],\n    [BundleNames.COMMON_SLOT]: [BundleNames.COMMON],\n    [BundleNames.COMMON_VERSUS]: [BundleNames.COMMON],\n    [BundleNames.LOADING]: [BundleNames.COMMON],\n    [BundleNames.HALL]: [BundleNames.COMMON, BundleNames.WALLET, BundleNames.LOADING],\n    [BundleNames.BIGBATTLE]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.BUFFALO]: [BundleNames.COMMON, BundleNames.COMMON_SLOT],\n    [BundleNames.WOLFGOLD]: [BundleNames.COMMON, BundleNames.COMMON_SLOT],\n    [BundleNames.BIG_SMALL]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.FIRE_JOKER]: [BundleNames.COMMON, BundleNames.COMMON_SLOT],\n    [BundleNames.CLASSIC_FIVE_DRAGONS]: [BundleNames.COMMON, BundleNames.COMMON_SLOT],\n    [BundleNames.RED_BLACK]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.MARQUEE]: [BundleNames.COMMON],\n    [BundleNames.DOMINO]: [BundleNames.COMMON],\n    [BundleNames.FISHING]: [BundleNames.COMMON],\n    [BundleNames.SHARK]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.TRUCO]: [BundleNames.COMMON],\n    [BundleNames.RUMMY_POINT]: [BundleNames.COMMON],\n    [BundleNames.BINGO]: [BundleNames.COMMON],\n    [BundleNames.TEENPATTI]: [BundleNames.COMMON],\n    [BundleNames.SEVEN_UP_DOWN]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.BEST_OFFIVE]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.CRICKET_BATTLE]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.ANDAR_BAHAR]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.JHANDI_MUNDA]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.BEST_CLUB]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n\n    [BundleNames.THREE_DICE]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.ROULETTE]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.CACHETA]: [BundleNames.COMMON],\n    [BundleNames.CALL_BREAK]: [BundleNames.COMMON],\n    [BundleNames.BINGO]: [BundleNames.COMMON],\n    [BundleNames.BLACK_JACK]: [BundleNames.COMMON],\n    [BundleNames.DOMINO_GAPLE]: [BundleNames.COMMON],\n};\n","import { BundleNames } from \"../../../BundleNames\";\n\nexport let BundleDependWorldCup: BdDepend.TBundleSkinDepend = {\n    [BundleNames.COMMON]: [],\n    [BundleNames.WALLET]: [BundleNames.COMMON],\n    [BundleNames.COMMON_BRC]: [BundleNames.COMMON],\n    [BundleNames.COMMON_SLOT]: [BundleNames.COMMON],\n    [BundleNames.COMMON_VERSUS]: [BundleNames.COMMON],\n    [BundleNames.LOADING]: [BundleNames.COMMON],\n    [BundleNames.HALL]: [BundleNames.COMMON, BundleNames.LOADING],\n    [BundleNames.BIGBATTLE]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.BUFFALO]: [BundleNames.COMMON, BundleNames.COMMON_SLOT],\n    [BundleNames.WOLFGOLD]: [BundleNames.COMMON, BundleNames.COMMON_SLOT],\n    [BundleNames.BIG_SMALL]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.FIRE_JOKER]: [BundleNames.COMMON, BundleNames.COMMON_SLOT],\n    [BundleNames.CLASSIC_FIVE_DRAGONS]: [BundleNames.COMMON, BundleNames.COMMON_SLOT],\n    [BundleNames.RED_BLACK]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.MARQUEE]: [BundleNames.COMMON],\n    [BundleNames.DOMINO]: [BundleNames.COMMON],\n    [BundleNames.FISHING]: [BundleNames.COMMON],\n    [BundleNames.SHARK]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.TRUCO]: [BundleNames.COMMON],\n    [BundleNames.RUMMY_POINT]: [BundleNames.COMMON],\n    [BundleNames.TEENPATTI]: [BundleNames.COMMON],\n    [BundleNames.SEVEN_UP_DOWN]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.CRASH]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.GOD_OF_FORTUNE]: [BundleNames.COMMON, BundleNames.COMMON_SLOT],\n    [BundleNames.BEST_OFFIVE]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.CRICKET_BATTLE]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.LUDO]: [BundleNames.COMMON, BundleNames.COMMON_VERSUS],\n    [BundleNames.ANDAR_BAHAR]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.JHANDI_MUNDA]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.BEST_CLUB]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.BINGO]: [BundleNames.COMMON, BundleNames.COMMON_BRC],\n    [BundleNames.DOMINO_GAPLE]: [BundleNames.COMMON],\n    [BundleNames.CACHETA]: [BundleNames.COMMON, BundleNames.COMMON_VERSUS],\n};\n","import Flavor from \"../Flavor\";\nimport { SkinType } from \"../SkinType\";\nimport { BundleDependWorldCup } from \"./skin/world_cup/BundleDependWorldCup\";\nimport { BundleNames } from \"../BundleNames\";\nimport { BundleDependFinal } from \"./skin/final/BundleDependFinal\";\nexport namespace BundleDepend {\n    //配置各个皮肤间的依赖\n    let depend: BdDepend.TBundleDepend = {\n        [SkinType.FINAL]: BundleDependFinal,\n        [SkinType.WORLD_CUP]: BundleDependWorldCup,\n        [SkinType.LIGHT]: BundleDependWorldCup,\n    };\n\n    export function getDepend(bundle: BundleNames) {\n        return depend[Flavor.Skin.curMainSkin]?.[bundle] ?? depend[SkinType.FINAL]?.[bundle] ?? [];\n    }\n}\n","import { ResLoader } from \"./ResLoader\";\n\nexport class BundleMgr {\n    private static _instance: BundleMgr = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new BundleMgr();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public loadResPackageFromBundle(\n        bundleResInfo: IBundleResInfo,\n        progressFunc?: (total: number, cur: number) => void,\n        failed?: () => void\n    ) {\n        ResLoader.getInstance().loadResPackageFromBundle(bundleResInfo, progressFunc, failed);\n    }\n\n    public loadResWithObj(\n        bundleName: string,\n        obj: Object,\n        progressFunc?: (total: number, cur: number) => void\n    ) {\n        ResLoader.getInstance().loadResWithObj(bundleName, obj, progressFunc);\n    }\n\n    public releaseResPackageFromBundle(bundleResInfo: IBundleResInfo) {\n        ResLoader.getInstance().releaseResPackageFromBundle(bundleResInfo);\n    }\n\n    public loadSceneFromBundle(\n        bundleName: string,\n        sceneName: string,\n        callFunc: (sceneAsset: cc.SceneAsset) => void\n    ) {\n        ResLoader.getInstance().loadSceneFromBundle(bundleName, sceneName, callFunc);\n    }\n\n    public loadResFromBundle<T>(resDesObj: IResDescribe, callFunc?: (res: T) => void): Promise<T> {\n        return new Promise((resolve) => {\n            ResLoader.getInstance().loadResFromBundle(resDesObj.bundleName, resDesObj, (res) => {\n                callFunc?.(res);\n                resolve(res);\n            });\n        });\n    }\n\n    public asyncLoadSpriteFrameFromRemote(\n        imageUrl: string,\n        imageSuffix: string = \".png\"\n    ): Promise<cc.SpriteFrame> {\n        return ResLoader.getInstance().asyncLoadSpriteFrameFromRemote(imageUrl, imageSuffix);\n    }\n\n    public loadSpriteFrameFromRemote(\n        imageUrl: string,\n        callFull: (res: cc.SpriteFrame) => void,\n        imageSuffix: string = \".png\"\n    ) {\n        ResLoader.getInstance().loadSpriteFrameFromRemote(imageUrl, callFull, imageSuffix);\n    }\n\n    public getResFromBundle(resDesObj: IResDescribe) {\n        return ResLoader.getInstance().getResFromBundle(resDesObj.bundleName, resDesObj);\n    }\n}\n","export enum BundleNames {\n    UNKNOWN = \"unknown\",\n    COMMON = \"common\",\n    WALLET = \"wallet\",\n    COMMON_BRC = \"common_brc\",\n    COMMON_SLOT = \"common_slot\",\n    COMMON_VERSUS = \"common_versus\",\n    LOADING = \"loading\",\n    HALL = \"hall\",\n    BIGBATTLE = \"bigbattle\",\n    BUFFALO = \"buffalo\",\n    WOLFGOLD = \"wolfgold\",\n    BIG_SMALL = \"bigsmall\",\n    FIRE_JOKER = \"firejoker\",\n    CLASSIC_FIVE_DRAGONS = \"cfdragon\",\n    RED_BLACK = \"redblack\",\n    MARQUEE = \"marquee\",\n    DOMINO = \"domino\",\n    FISHING = \"fishing\",\n    SHARK = \"shark\",\n    TRUCO = \"truco\",\n    RUMMY_POINT = \"rummypoint\",\n    TEENPATTI = \"teenpatti\",\n    SEVEN_UP_DOWN = \"sevenupdown\",\n    CRASH = \"crash\",\n    LUDO = \"ludo\",\n    GOD_OF_FORTUNE = \"godoffortune\",\n    BEST_OFFIVE = \"bestoffive\",\n    CRICKET_BATTLE = \"cricketbattle\",\n    ANDAR_BAHAR = \"andarbahar\",\n    JHANDI_MUNDA = \"jhandimunda\",\n    BEST_CLUB = \"bestclub\",\n    THREE_DICE = \"three_dice\",\n    ROULETTE = \"roulette\",\n    CACHETA = \"cacheta\",\n    CALL_BREAK = \"call_break\",\n    BINGO = \"bingo\",\n    BLACK_JACK = \"blackjack\",\n    DOMINO_GAPLE = \"dominogaple\",\n}\n","import { BundleNames } from \"../../conf/BundleNames\";\n\nexport default class BundleSkinCenter {\n    private static _instance: BundleSkinCenter = null;\n    public static getInstance(): BundleSkinCenter {\n        if (!this._instance) {\n            this._instance = new BundleSkinCenter();\n        }\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    private skinMap: Map<BundleNames, BdSkin.IBundleSkin> = new Map();\n\n    public applySkin(bundleName: BundleNames, skin: BdSkin.IBundleSkin): void {\n        this.skinMap.set(bundleName, skin);\n    }\n\n    public removeSkin(bundleName: BundleNames) {\n        return this.skinMap.delete(bundleName);\n    }\n\n    public getSkin(bundleNames: BundleNames): BdSkin.IBundleSkin {\n        return this.skinMap.get(bundleNames);\n    }\n\n    public getBundleInfo(bundleNames: BundleNames): IBundleResInfo {\n        return this.getSkin(bundleNames).getCurSkin();\n    }\n}\n","import { BundleMgr } from \"../../bd/BundleMgr\";\n\nexport class ButtonManager {\n    private static _instance: ButtonManager = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new ButtonManager();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public setLabelString(btnNode, labelTxt) {\n        if (cc.isValid(btnNode)) {\n            if (btnNode instanceof cc.Button) {\n            } else if (btnNode instanceof cc.Node) {\n                btnNode = btnNode.getComponent(cc.Button);\n            }\n            if (cc.isValid(btnNode)) {\n                btnNode.string = labelTxt;\n            }\n        }\n    }\n\n    public setButtonSpriteFrame(node: cc.Node, resDescs: cc.SpriteFrame[]) {\n        if (cc.isValid(node)) {\n            let sprite: cc.Button = node.getComponent(cc.Toggle) || node.getComponent(cc.Button);\n            if (cc.isValid(sprite)) {\n                for (let i = 0; i < resDescs.length; i++) {\n                    switch (i) {\n                        case 0:\n                            sprite.normalSprite = resDescs[i];\n                            break;\n                        case 1:\n                            sprite.pressedSprite = resDescs[i];\n                            break;\n                        case 2:\n                            sprite.hoverSprite = resDescs[i];\n                            break;\n                        case 3:\n                            sprite.disabledSprite = resDescs[i];\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n        }\n    }\n\n    public loadButtonSpriteForNodeBundle(node, resDescs: IResDescribe[], callback?) {\n        let self = this;\n        if (cc.isValid(node)) {\n            let sprite: cc.Button = node.getComponent(cc.Toggle) || node.getComponent(cc.Button);\n            self.loadSpriteBundle(sprite, resDescs, callback);\n        }\n    }\n\n    public loadSpriteBundle(sprite, resDescs: IResDescribe[], callback?, errorCallback?) {\n        if (!cc.isValid(sprite)) {\n            return;\n        }\n\n        for (let i = 0; i < resDescs.length; i++) {\n            BundleMgr.getInstance().loadResFromBundle(resDescs[i], (res: any) => {\n                if (res) {\n                    if (cc.isValid(sprite)) {\n                        switch (i) {\n                            case 0:\n                                sprite.normalSprite = res;\n                                break;\n                            case 1:\n                                sprite.pressedSprite = res;\n                                break;\n                            case 2:\n                                sprite.hoverSprite = res;\n                                break;\n                            case 3:\n                                sprite.disabledSprite = res;\n                                break;\n                            default:\n                                break;\n                        }\n                        if (typeof callback === \"function\") {\n                            callback();\n                        }\n                    }\n                } else {\n                    if (typeof errorCallback === \"function\") {\n                        errorCallback();\n                    }\n                }\n            });\n        }\n    }\n}\n","import { TouchOneByOne } from \"../../utils/class/TouchOneByOne\";\nconst { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\n@ccclass\n@menu(\"core/ui/ButtonOverride\")\nexport default class ButtonOverride extends cc.Component {\n    protected start(): void {\n        let index = this.node.getSiblingIndex();\n\n        new TouchOneByOne(this.node)\n            .onOver(() => {\n                this.node.setSiblingIndex(index);\n                let layout = this.node.parent.getComponent(cc.Layout);\n                if (layout) {\n                    layout.enabled = true;\n                }\n            })\n            .onBegin(() => {\n                let layout = this.node.parent.getComponent(cc.Layout);\n                if (layout) {\n                    layout.enabled = false;\n                }\n                this.node.setSiblingIndex(this.node.parent.childrenCount - 1);\n            })\n            .enableTouch();\n    }\n}\n","import { LocalStorageMgr } from \"../../storage/LocalStorageMgr\";\nimport ValueObserver from \"./ValueObserver\";\n\nconst CHANGE_VALUE = \"change_value\";\n\nexport default abstract class CacheObserver<T> extends ValueObserver<T> {\n    protected abstract getCacheKey(): string;\n\n    public init() {\n        super.init(this.initCache());\n    }\n\n    protected onInit(data?: T): T {\n        return data || ({} as any);\n    }\n\n    public initCache(): T {\n        try {\n            let json = LocalStorageMgr.getInstance().readData(this.getCacheKey());\n            if (!json) {\n                return;\n            }\n            let data = JSON.parse(json);\n            return data;\n        } catch {}\n        return;\n    }\n\n    protected onNotice(newValue: T) {\n        LocalStorageMgr.getInstance().saveData(this.getCacheKey(), JSON.stringify(newValue));\n    }\n}\n","const { ccclass, property, menu } = cc._decorator;\n\n/**\n * @zh 支持对ttf格式文本进行间距调整\n * @des 此处主要将spacingX属性暴露出来, 注意: ttf字体间距调整只支持CHAR模式\n */\n@ccclass\n@menu(\"UI/CharLabel\")\nexport default class CharLabel extends cc.Label {}\n","export default class ClassListener {\n    private _listener: cc.EventTarget = new cc.EventTarget();\n\n    protected noticeHandler(type: string, ...args: any[]) {\n        this._listener.emit(type, ...args);\n    }\n\n    protected applyHandler(type: string, callFunc: (...args) => void, target?: any) {\n        this._listener.on(type, callFunc, target);\n    }\n\n    protected removeHandler(type: string, callFunc: (...args) => void, target?: any) {\n        this._listener.off(type, callFunc, target);\n    }\n\n    protected removeHandlerWithTarget(target: any) {\n        this._listener.targetOff(target);\n    }\n}\n","import { BundleNames } from \"../../../conf/BundleNames\";\nimport { lodash } from \"../../../utils/NpmExport\";\n\nexport const CocosBundleEnum = cc.Enum(\n    lodash\n        .chain(lodash.toPairs(BundleNames))\n        .map((element, index) => {\n            return [`<${element[0]}>`, index];\n        })\n        .fromPairs()\n        .value()\n);\n","import { lodash } from \"../../../utils/NpmExport\";\n\nexport namespace CocosUiUtil {\n    //获取最顶层的父节点\n    export function getTopParent(node: cc.Node): cc.Node {\n        CC_DEBUG && cc.log(node.name);\n        if (node.parent && node.parent.name !== \"New Node\") {\n            return getTopParent(node.parent);\n        }\n        return node;\n    }\n\n    export function createEnum(keys: string[]) {\n        return cc.Enum(\n            lodash\n                .chain(keys)\n                .map((element, index) => {\n                    return [`<${element}>`, index];\n                })\n                .fromPairs()\n                .value()\n        );\n    }\n\n    export function updatePropertyEnum(comp: cc.Component, key: string, ccEnum: any) {\n        cc.Class[\"Attr\"].setClassAttr(comp, key, \"enumList\", ccEnum);\n    }\n}\n","export class CocosUtils {\n    private static _instance: CocosUtils = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new CocosUtils();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public getSceneCanvas() {\n        if (cc.director) {\n            let directorScene = cc.director.getScene();\n            if (cc.isValid(directorScene)) {\n                let canvas = directorScene.getChildByName(\"Canvas\");\n                if (cc.isValid(canvas)) {\n                    return canvas;\n                } else {\n                    return null;\n                }\n            } else {\n                return null;\n            }\n        }\n        return null;\n    }\n\n    public getPlatform() {\n        let platform = \"\";\n        if (cc.sys.isNative) {\n            if (cc.sys.os == cc.sys.OS_ANDROID) {\n                platform = \"a\";\n            } else if (cc.sys.os == cc.sys.OS_IOS) {\n                platform = \"i\";\n            }\n        } else {\n            platform = \"hn\";\n        }\n        return platform;\n    }\n    public swapParentSavePos(node: cc.Node, targetParent: cc.Node) {\n        if (node.parent === targetParent) {\n            return;\n        }\n        let curWorld = node.convertToWorldSpaceAR(cc.v3());\n        let targetPos = targetParent.convertToNodeSpaceAR(curWorld);\n        node.parent = targetParent;\n        node.position = targetPos;\n    }\n\n    public convertNode2InTargetPos(node: cc.Node, target: cc.Node): cc.Vec3 {\n        const curWorld = node.convertToWorldSpaceAR(cc.v3());\n        const targetPos = target.parent.convertToNodeSpaceAR(curWorld);\n        return targetPos;\n    }\n}\n","import { AppParamManager } from \"../app/AppParamManager\";\nimport { AppParamModel } from \"../app/AppParamModel\";\nimport { AudioManager } from \"../audio/AudioManager\";\nimport { GameDatabase } from \"../conf/GameDatabase\";\nimport { ProjectInfo } from \"../conf/ProjectInfo\";\nimport { HttpRequest } from \"../http/HttpRequest\";\nimport { H5Util } from \"../platform/H5Util\";\nimport { NativeUtil } from \"../platform/NativeUtil\";\nimport { PlatformUtil } from \"../platform/PlatformUtil\";\nimport { LocalStorageMgr } from \"../storage/LocalStorageMgr\";\nimport { AdjustTrack } from \"../track/AdjustTrack\";\nimport { UserManager } from \"../user/UserManager\";\nimport { CocosUtils } from \"../utils/CocosUtils\";\nimport { DateUtils } from \"../utils/DateUtils\";\nimport { MoneyUtil } from \"../utils/MoneyUtil\";\nimport { CommonSocketModel } from \"../ws/CommonSocketModel\";\n\nexport class CommonDependManager {\n    private static _instance: CommonDependManager = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new CommonDependManager();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public initCommon() {\n        let commonDepend: CommonDependInterface = {\n            HttpRequest: HttpRequest,\n            LocalStorageMgr: LocalStorageMgr.getInstance(),\n            H5Util: H5Util.getInstance(),\n            UserManager: UserManager.getInstance(),\n            ProjectInfo: ProjectInfo.getInstance(),\n            AppParamModel: AppParamModel.getInstance(),\n            AppParamManager: AppParamManager.getInstance(),\n            PlatformUtil: PlatformUtil.getInstance(),\n            GameDatabase: GameDatabase.getInstance(),\n            CommonSocketModel: CommonSocketModel.getInstance(),\n            AudioManager: AudioManager.getInstance(),\n            MoneyUtil: MoneyUtil.getInstance(),\n            DateUtils: DateUtils.getInstance(),\n            CocosUtils: CocosUtils.getInstance(),\n            AdjustTrack: AdjustTrack.getInstance(),\n            NativeUtil: NativeUtil.getInstance(),\n        };\n        CommonDepend = commonDepend;\n    }\n}\n","export class CommonSocketModel {\n    private static _instance: CommonSocketModel = null;\n\n    private userId = 0;\n    private token: string = \"\";\n    private version: number = 0;\n    private merCode: string = \"\";\n    private brandCode: string = \"\";\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new CommonSocketModel();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public init() {\n        this.saveUserId();\n        this.saveToken();\n        this.saveVersion();\n        this.saveMerCode();\n        this.saveBrandCode();\n    }\n\n    public getUserId() {\n        return this.userId;\n    }\n\n    public getToken() {\n        return this.token;\n    }\n\n    public getVersion() {\n        return this.version;\n    }\n\n    public getMerCode() {\n        return this.merCode;\n    }\n\n    public getBrandCode() {\n        return this.brandCode;\n    }\n\n    private saveUserId() {\n        let userId = parseInt(CommonDepend.LocalStorageMgr.readUserID());\n        this.userId = isNaN(userId) ? 0 : userId;\n    }\n\n    private saveToken() {\n        this.token = CommonDepend.LocalStorageMgr.readUserToken();\n    }\n\n    private saveVersion() {\n        this.version = parseInt(CommonDepend.ProjectInfo.GAME_VERSION.replace(/\\./g, \"\"));\n    }\n\n    private saveMerCode() {\n        this.merCode = CommonDepend.AppParamManager.getMerCode();\n    }\n\n    private saveBrandCode() {\n        this.brandCode = CommonDepend.AppParamManager.getBrandCode();\n    }\n\n    public getCurrentTimestamp() {\n        return new Date().getTime();\n    }\n}\n","import Lighter from \"../services/Lighthouse/Lighter\";\nimport { EVENT_CODE } from \"../services/Lighthouse/proto/EventCode\";\nimport { LighthouseProto } from \"../services/Lighthouse/proto/LighthouseProto\";\nimport { lodash } from \"../utils/NpmExport\";\n\nclass CommonSocket {\n    private _gameID: number;\n    private _wsHost: string;\n    private _msgCallback: Function;\n    private _initCallBack: Function;\n    private _onCloseCallback: Function;\n    private _webSocket: WebSocket;\n\n    private _connectTimeoutID: NodeJS.Timeout;\n\n    constructor(\n        gameID: number,\n        host: string,\n        msgCallback: Function,\n        initCallBack: Function,\n        onCloseCallback?: Function\n    ) {\n        this._gameID = gameID;\n        if (!lodash.isEmpty(host)) {\n            this._wsHost = host;\n        } else {\n            return;\n        }\n\n        this._msgCallback = msgCallback;\n        this._initCallBack = initCallBack;\n        this._onCloseCallback = onCloseCallback;\n\n        this._initWs();\n    }\n\n    public getHost() {\n        return this._wsHost;\n    }\n    private _initWs() {\n        Lighter.getInstance().trackStart(this._wsHost, LighthouseProto.Events.EventType.WS_REQ);\n        CC_DEBUG && cc.log(\"CommonSocket: h5 new =\" + this._wsHost);\n        if (cc.sys.isNative) {\n            var info = cc.resources.getInfoWithPath(\"cacert\");\n            if (info) {\n                // 根据uuid 返回资源路径\n                let pemUrl = cc.assetManager.utils.getUrlWithUuid(info.uuid, {\n                    isNative: true,\n                    nativeExt: \".pem\",\n                });\n                // let pemUrl = \"assets/resources/native/5c/5c8ebf99-2e64-4ef3-83d4-f1381868530c.pem\";\n                CC_DEBUG && cc.log(\"CommonSocket: pemUrl\", pemUrl);\n                this._webSocket = new WebSocket(this._wsHost, null, pemUrl);\n            }\n        } else {\n            this._webSocket = new WebSocket(this._wsHost);\n        }\n\n        this._webSocket.onopen = (event) => {\n            CC_DEBUG &&\n                cc.log(\n                    \"CommonSocket: onopen = \" + this._wsHost + \", event = \" + JSON.stringify(event)\n                );\n            Lighter.getInstance().trackEnd(this._wsHost, EVENT_CODE.RequestSuccess, this._wsHost);\n            this._onOpen();\n        };\n        this._webSocket.onerror = (event) => {\n            CC_DEBUG &&\n                cc.log(\n                    \"CommonSocket: onerror = \" + this._wsHost + \", event = \" + JSON.stringify(event)\n                );\n            Lighter.getInstance().trackEnd(this._wsHost, EVENT_CODE.RequestFailure, this._wsHost);\n            this._onError();\n        };\n        this._webSocket.onclose = (event) => {\n            CC_DEBUG &&\n                cc.log(\n                    \"CommonSocket: onclose = \" + this._wsHost + \", event = \" + JSON.stringify(event)\n                );\n            this._onClose();\n        };\n        this._webSocket.onmessage = (event) => {\n            CC_DEBUG &&\n                cc.log(\n                    \"CommonSocket: onmessage = \" +\n                        this._wsHost +\n                        \", event = \" +\n                        JSON.stringify(event)\n                );\n            this._onMessage(event);\n        };\n    }\n\n    _onOpen() {\n        // to do\n        //CommonPackageDepend.CommonPrefabMgr.removeCommonLoading();\n\n        clearTimeout(this._connectTimeoutID);\n        this._webSocket.binaryType = \"arraybuffer\";\n        this._initCallBack();\n    }\n\n    _onError() {}\n\n    _onClose() {\n        if (this._onCloseCallback) {\n            this._onCloseCallback();\n        }\n    }\n\n    _onMessage(event) {\n        this._msgCallback(event.data);\n    }\n\n    public forceInitWs() {\n        this._webSocket.close();\n        this._initWs();\n    }\n\n    public send(msg: string | ArrayBuffer | SharedArrayBuffer | Blob | ArrayBufferView) {\n        if (this._webSocket && this._webSocket.readyState === WebSocket.OPEN) {\n            this._webSocket.send(msg);\n        }\n    }\n\n    public isConnected() {\n        let self = this;\n        return self._webSocket != null && self._webSocket.readyState === WebSocket.OPEN;\n    }\n\n    public close() {\n        if (this._webSocket) {\n            this._webSocket.close();\n        }\n    }\n\n    public state() {\n        return this._webSocket?.readyState;\n    }\n}\n\nexport default CommonSocket;\n","let CoreEventName = {\n    MAKE_HIDE_GAME: \"MAKE_HIDE_GAME\",\n    MAKE_SHOW_GAME: \"MAKE_SHOW_GAME\",\n    NETWORK_STATE_CHANGED: \"NETWORK_STATE_CHANGED\",\n    PAYFAILURE: \"PAYFAILURE\",\n    REFRESH_USER_INFO: \"REFRESH_USER_INFO\",\n    IMAGEUPLOADEDSUCCESS: \"IMAGEUPLOADEDSUCCESS\",\n    RECEIVE_NOTIFICATION_RESPONSE: \"RECEIVE_NOTIFICATION_RESPONSE\",\n    PUSH_NOTIFICATION_SUCCEED: \"PUSH_NOTIFICATION_SUCCEED\",\n    EVENT_NATIVE_SPLASH_FINISH: \"EVENT_NATIVE_SPLASH_FINISH\",\n    EVENT_NATIVE_CACHE_PROMOTION_IMAGE: \"EVENT_NATIVE_CACHE_PROMOTION_IMAGE\",\n    EVENT_FACEBOOK_LOGIN_RESULT: \"EVENT_FACEBOOK_LOGIN_RESULT\",\n};\n\nexport default CoreEventName;\n","export enum CoreEvents {\n    SWITCH_HOST = \"SWITCH_HOST\",\n}\n","export enum CountryCodeEnum {\n    IN = \"in\", //印度\n    BR = \"br\", //巴西\n    ID = \"id\", //印尼\n    VN = \"vn\", //越南\n    PK = \"pk\", //巴基斯坦\n    BG = \"bg\", //孟加拉\n}\n","import { Buffer } from \"buffer\";\nimport crypto = require(\"crypto\");\n\nexport class CryptMgr {\n    private static _instance: CryptMgr = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new CryptMgr();\n        }\n\n        return this._instance;\n    }\n\n    private static readonly UNIVERSAL = {\n        aes_key: \"SEWkGIc2RiqcASstuR4kuw==\",\n        sign_key: \"ZTY5NDMxZDNkMDY5NGU0Mjg2ODVmZQ==\",\n        key: \"vn\",\n    };\n\n    public decodeBase64(base64) {\n        return Buffer.from(base64, \"base64\");\n    }\n\n    public encodeHex(buffers) {\n        const result = [];\n        for (let i of buffers) {\n            result.push(i.toString(16).padStart(2, \"0\"));\n        }\n        return result.join(\"\");\n    }\n\n    /**\n     * 加密\n     * Http 和 WebSocket 都用到了\n     */\n    public aes_encrypt(plain, aesKey: string = this.getHttpAesKey()) {\n        let aes_key = this.decodeBase64(aesKey);\n        let ci = crypto.createCipheriv(\"aes-128-ecb\", aes_key, \"\");\n        let crypted = ci.update(Buffer.from(plain));\n        return Buffer.concat([Buffer.from(crypted), Buffer.from(ci.final())]);\n    }\n\n    /**\n     * 解密\n     * Http 和 WebSocket 都用到了\n     */\n    public aes_decrypt(encrypted) {\n        let aes_key = this.decodeBase64(this.getHttpAesKey());\n        let deci = crypto.createDecipheriv(\"aes-128-ecb\", aes_key, \"\");\n        let decrypted = deci.update(Buffer.from(encrypted));\n        return Buffer.concat([Buffer.from(decrypted), Buffer.from(deci.final())]);\n    }\n\n    /**\n     * 签名\n     * Http需要校验签名，WebSocket不校验签名\n     */\n    public md5_digest(plain: Uint8Array, ts: number) {\n        let sign_key = this.decodeBase64(this.getHttpSignKey());\n        const input = Buffer.concat([Buffer.from(plain), Buffer.from(ts.toString()), sign_key]);\n        const md5 = crypto.createHash(\"md5\");\n        const val = md5.update(input).digest(\"hex\");\n        return val;\n    }\n\n    /**\n     * 计算md5\n     * @return md5 string\n     */\n    public md5(str: string) {\n        const md5 = crypto.createHash(\"md5\");\n        return md5.update(str).digest(\"hex\");\n    }\n\n    private getHttpAesKey() {\n        return CryptMgr.UNIVERSAL.aes_key;\n    }\n\n    private getHttpSignKey() {\n        return CryptMgr.UNIVERSAL.sign_key;\n    }\n\n    public getHttpKey() {\n        return CryptMgr.UNIVERSAL.key;\n    }\n}\n\nexport default CryptMgr;\n","export enum CurrencyEnum {\n    BR_COIN = \"R$\", //巴西币\n    IN_LUBI = \"₹\", //印度卢比\n    IDD = \"Rp\", //印尼盾\n    VND = \"₫\", //越南盾\n    PK_LUBI = \"Rs\", //巴基斯坦卢比\n    TAKA = \"৳\", //塔卡\n}\n","export class DateUtils {\n    private static _instance: DateUtils = null;\n\n    /**\n     * TIME_DIFF: 服务端与客户端之间对时，将差值保存\n     * 防伪造逻辑: Http请求通用Header里面，不应该传当前客户端时间戳，应该进行校准后回传给服务端\n     * 对时逻辑:\n     * 1、目前在所有的websocket连接成功后，通过客户端ping-服务端pong来进行对时。\n     * 1、通过http请求的response来进行对时。\n     */\n    private time_diff: number = 0;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new DateUtils();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public checkTimestampDiff(serverTimestamp: number) {\n        if (serverTimestamp) {\n            let clientTimestamp = this.getTimestamp();\n            this.time_diff = serverTimestamp - clientTimestamp;\n        } else {\n            this.time_diff = 0;\n        }\n    }\n\n    public getTimeDiff() {\n        return this.time_diff;\n    }\n\n    /** 获取当前时间时间戳 */\n    public getTimestamp(): number {\n        return new Date().getTime();\n    }\n\n    /** 获取今天开始的时间戳 今天0点的时间戳*/\n    public getTodayStartTimestamp(): number {\n        return new Date(new Date().toLocaleDateString()).getTime();\n    }\n\n    /** 获取n天前开始的时间戳  n天前0点的时间戳*/\n    public getPreviousStartTimestamp(n: number): number {\n        return new Date(new Date().toLocaleDateString()).getTime() - n * 3600 * 24 * 1000;\n    }\n\n    /**\n     * 获取当前时间秒\n     */\n    public getNowSec(): number {\n        return Math.round(this.getTimestamp() / 1000);\n    }\n\n    /**\n     * 获取一天的秒数\n     * @returns\n     */\n    public getDaySec(): number {\n        return 60 * 60 * 24;\n    }\n\n    /**\n     * 转化日期\n     * @param ms 毫秒\n     */\n    public transformDate(ms: number, format: string = \"D-M-Y h:m:s\"): string {\n        ms += CommonDepend.ProjectInfo.TIME_ZONE_DIFF;\n        let rFormat = format;\n        let date = ms ? new Date(ms) : new Date();\n        let dateObject = {\n            Y: date.getUTCFullYear(),\n            M: this.fillZero(date.getUTCMonth() + 1, 2),\n            D: this.fillZero(date.getUTCDate(), 2),\n            h: this.fillZero(date.getUTCHours(), 2),\n            m: this.fillZero(date.getUTCMinutes(), 2),\n            s: this.fillZero(date.getUTCSeconds(), 2),\n            ms: this.fillZero(date.getUTCMilliseconds(), 3),\n        };\n        for (const key in dateObject) {\n            if (rFormat.indexOf(key) != -1) {\n                rFormat = rFormat.replace(key, dateObject[key]);\n            }\n        }\n        return rFormat;\n    }\n\n     /**\n     * 转化日期 不计算时区\n     * @param ms 毫秒\n     */\n    public transformDateNoZone(ms: number, format: string = \"D-M-Y h:m:s\") {\n        let rFormat = format;\n        let date = ms ? new Date(ms) : new Date();\n        let dateObject = {\n            Y: date.getFullYear(),\n            M: this.fillZero(date.getMonth() + 1, 2),\n            D: this.fillZero(date.getDate(), 2),\n            h: this.fillZero(date.getHours(), 2),\n            m: this.fillZero(date.getMinutes(), 2),\n            s: this.fillZero(date.getSeconds(), 2),\n            ms: this.fillZero(date.getMilliseconds(), 3),\n        };\n        for (const key in dateObject) {\n            if (rFormat.indexOf(key) != -1) {\n                rFormat = rFormat.replace(key, dateObject[key]);\n            }\n        }\n        return rFormat;\n    }\n\n    /**\n     * 左补零\n     * @param value 值\n     * @param zeroCount 零位\n     */\n    public fillZero(value: number, zeroCount: number): string {\n        let fillCount = zeroCount - String(value).length;\n        let fillStr = \"\";\n        for (let i = 0; i < fillCount; i++) {\n            fillStr += \"0\";\n        }\n        return fillStr + String(value);\n    }\n\n    /**\n     * 把时间戳格式化为时分秒 xx:XX:XX\n     * @param timeStamp 秒\n     * @returns\n     */\n    public formatTime(timeStamp: number): string {\n        let h = Math.floor(timeStamp / 60 / 60);\n        let m = Math.floor((timeStamp - h * 3600) / 60);\n        let s = timeStamp - h * 3600 - m * 60;\n        return (h < 10 ? \"0\" + h : h) + \":\" + (m < 10 ? \"0\" + m : m) + \":\" + (s < 10 ? \"0\" + s : s);\n    }\n\n    /**\n     * 格式化最新时间\n     */\n    public formatLastTime(time) {\n        let h = Math.floor(time / 60 / 60);\n        let m = Math.floor((time - h * 3600) / 60);\n        return (h < 10 ? \"0\" + h : h) + \":\" + (m < 10 ? \"0\" + m : m);\n    }\n\n    /**\n     * 格式化最新时间2\n     */\n    public formatLastTime2(time) {\n        let h = Math.floor(time / 60 / 60);\n        let m = Math.floor((time - h * 3600) / 60);\n        let s = time - h * 3600 - m * 60;\n        return (h < 10 ? \"0\" + h : h) + \":\" + (m < 10 ? \"0\" + m : m) + \":\" + (s < 10 ? \"0\" + s : s);\n    }\n\n    public timestampFormatWithYearDetailed(timeStamp: number) {\n        let date = new Date();\n        date.setTime(timeStamp);\n        let y = date.getFullYear();\n        let m: any = date.getMonth() + 1;\n        m = m < 10 ? \"0\" + m : m;\n        let d: any = date.getDate();\n        d = d < 10 ? \"0\" + d : d;\n        let h: any = date.getHours();\n        h = h < 10 ? \"0\" + h : h;\n        let minute: any = date.getMinutes();\n        let second: any = date.getSeconds();\n        minute = minute < 10 ? \"0\" + minute : minute;\n        second = second < 10 ? \"0\" + second : second;\n        return y + \"-\" + m + \"-\" + d + \" \" + h + \":\" + minute + \":\" + second;\n    }\n}\n","import lazyInitialize from \"./LazyInitialize\";\n\nconst { defineProperty, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols } =\n    Object;\n\nexport function isDescriptor(desc: Object) {\n    if (!desc || !desc.hasOwnProperty) {\n        return false;\n    }\n\n    const keys = [\"value\", \"initializer\", \"get\", \"set\"];\n\n    for (let i = 0, l = keys.length; i < l; i++) {\n        if (desc.hasOwnProperty.call(desc, keys[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function decorate(handleDescriptor, entryArgs) {\n    if (isDescriptor(entryArgs[entryArgs.length - 1])) {\n        return handleDescriptor(...entryArgs, []);\n    } else {\n        return function (...args: any[]) {\n            return handleDescriptor(...Array.prototype.slice.call(args), entryArgs);\n        };\n    }\n}\n\nclass Meta {\n    @lazyInitialize\n    debounceTimeoutIds = {};\n\n    @lazyInitialize\n    throttleTimeoutIds = {};\n\n    @lazyInitialize\n    throttlePreviousTimestamps = {};\n\n    @lazyInitialize\n    throttleTrailingArgs = null;\n\n    @lazyInitialize\n    profileLastRan = null;\n}\n\nconst META_KEY =\n    typeof Symbol === \"function\" ? Symbol(\"__core_decorators__\") : \"__core_decorators__\";\n\nexport function metaFor(obj) {\n    if (obj.hasOwnProperty.call(obj, META_KEY) === false) {\n        defineProperty(obj, META_KEY, {\n            // Defaults: NOT enumerable, configurable, or writable\n            value: new Meta(),\n        });\n    }\n\n    return obj[META_KEY];\n}\n\nexport const getOwnKeys = getOwnPropertySymbols\n    ? function (object: any) {\n          return getOwnPropertyNames(object).concat(\n              getOwnPropertySymbols(object) as unknown as string[]\n          );\n      }\n    : getOwnPropertyNames;\n\nexport function getOwnPropertyDescriptors(obj) {\n    const descs = {};\n\n    getOwnKeys(obj).forEach((key) => (descs[key] = getOwnPropertyDescriptor(obj, key)));\n\n    return descs;\n}\n\nexport function createDefaultSetter(key) {\n    return function set(newValue) {\n        Object.defineProperty(this, key, {\n            configurable: true,\n            writable: true,\n            // IS enumerable when reassigned by the outside word\n            enumerable: true,\n            value: newValue,\n        });\n\n        return newValue;\n    };\n}\n\nexport function bind(fn, context) {\n    if (fn.bind) {\n        return fn.bind(context);\n    } else {\n        return function __autobind__(...args: any[]) {\n            return fn.apply(context, args);\n        };\n    }\n}\n\nexport const warn = (() => {\n    if (typeof cc !== \"object\" || !cc || typeof cc.warn !== \"function\") {\n        return () => {};\n    } else {\n        return bind(cc.warn, cc);\n    }\n})();\n\nconst seenDeprecations = {};\nexport function internalDeprecation(msg) {\n    if (seenDeprecations[msg] !== true) {\n        seenDeprecations[msg] = true;\n        warn(\"DEPRECATION: \" + msg);\n    }\n}\n","export let Domain = {\n    Dev: [\"easycodedev.com\"],\n    IN_TEST: [\"zenam.net\"],\n    IN_ONLINE: [\"iosxt.com\", \"smt000.com\", \"tfzmb.com\"],\n    BR_TEST: [\"brazil-zenam.com\"],\n};\n","import BaseEnumComp from \"../BaseEnumComp\";\nimport EnumController from \"../EnumController\";\nconst { ccclass, property, playOnFocus, executeInEditMode, menu } = cc._decorator;\n\ninterface IData {\n    title: string;\n}\n\ninterface IOptions {\n    data: IData[];\n\n    onSelect?: (index: number, data: IData) => void;\n    onDelete?: (index: number, data: IData, list: IData[]) => void;\n}\n\n@ccclass\n@menu(\"core/ui/DropDownListEx\")\nexport default class DropDownListEx extends cc.Component {\n    protected item: cc.Node = null;\n\n    @property(cc.Node)\n    protected content: cc.Node = null;\n\n    protected options: IOptions = null;\n\n    protected onLoad(): void {\n        this.content.active = false;\n        this.node.on(\n            cc.Node.EventType.TOUCH_END,\n            () => {\n                if (!this.options.data.length) {\n                    return;\n                }\n                this.content.active = !this.content.active;\n                this.node.scaleY = this.content.active ? -1 : 1;\n            },\n            this,\n            false\n        );\n    }\n\n    public initItems(options: IOptions): void {\n        let childs = this.node.children.concat();\n        this.item = childs.shift();\n        childs.forEach((node) => node.destroy());\n        this.options = options;\n        options.data.forEach((option, index) => {\n            this.setItem(index, option);\n        });\n        this.node.opacity = this.options.data.length <= 0 ? 0 : 255;\n    }\n\n    public setItem(index: number, data: IData) {\n        let item = this.content.children?.[index] ?? cc.instantiate(this.content.children[0]);\n        if (!item.parent) {\n            item.parent = this.content;\n        }\n\n        item.getChildByName(\"title\").getComponent(cc.Label).string = data.title;\n\n        item.targetOff(this);\n        item.on(\n            \"click\",\n            () => {\n                this.onItemClick(index, data);\n            },\n            this\n        );\n\n        item.getChildByName(\"del\").on(\n            \"click\",\n            () => {\n                this.options?.onDelete?.(index, data, this.options.data);\n                if (this.content.children.length == 1) {\n                    this.content.active = false;\n                } else {\n                    this.options.data.splice(index, 1);\n                    item.destroy();\n                }\n            },\n            this\n        );\n    }\n\n    public onDelectItem(index: number, data: IData) {}\n\n    public onItemClick(index: number, data: IData) {\n        this.content.active = false;\n        this.options?.onSelect?.(index, data);\n    }\n}\n","const { ccclass, property, playOnFocus, executeInEditMode, menu } = cc._decorator;\n\n@ccclass\n@playOnFocus\n@executeInEditMode\n@menu(\"core/ui/DropDownList\")\nexport default class DropDownList extends cc.Component {\n    @property(cc.SpriteFrame)\n    mainBtnSpriteFrames: [cc.SpriteFrame, cc.SpriteFrame] = [null, null];\n\n    @property()\n    private spacing: number = 0;\n\n    @property()\n    private _isChecked: boolean = false;\n    @property()\n    public get isChecked(): boolean {\n        return this._isChecked;\n    }\n    public set isChecked(v: boolean) {\n        this._isChecked = v;\n        this.onUpdateUi();\n    }\n\n    start() {\n        this.node.on(\n            cc.Node.EventType.TOUCH_END,\n            () => {\n                this.isChecked = !this.isChecked;\n            },\n            this\n        );\n    }\n\n    private getChilds() {\n        return this.node.children;\n    }\n\n    private onUpdateUi() {\n        if (this.isChecked) {\n            this.showBtns();\n        } else {\n            this.hideBtns();\n        }\n    }\n\n    private showBtns() {\n        this.stopAllAnim();\n\n        this.node.getComponent(cc.Sprite).spriteFrame = this.mainBtnSpriteFrames[0];\n        let beginPosY = -this.node.height / 2;\n        this.getChilds().forEach((node, index) => {\n            beginPosY -= this.spacing;\n            node.active = true;\n            cc.tween(node)\n                .to(0.1 * (index + 1), {\n                    y: beginPosY - node.height / 2,\n                })\n                .start();\n            beginPosY -= node.height;\n        });\n    }\n\n    private hideBtns() {\n        this.stopAllAnim();\n        this.node.getComponent(cc.Sprite).spriteFrame = this.mainBtnSpriteFrames[1];\n        this.getChilds().forEach((node, index) => {\n            cc.tween(node)\n                .to(0.1 * (index + 1), {\n                    y: 0,\n                })\n                .call(() => {\n                    node.active = false;\n                })\n                .start();\n        });\n    }\n\n    private stopAllAnim() {\n        this.getChilds().forEach((node) => {\n            cc.Tween.stopAllByTarget(node);\n        });\n    }\n\n    // update (dt) {}\n}\n","export class EditBoxManager {\n\n    private static _instance: EditBoxManager = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new EditBoxManager();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public setPlaceHolderLabelString(editBoxNode, labelTxt) {\n        if (cc.isValid(editBoxNode)) {\n            if (editBoxNode instanceof cc.EditBox) {\n            } else if (editBoxNode instanceof cc.Node) {\n                editBoxNode = editBoxNode.getComponent(cc.EditBox);\n            }\n            if (cc.isValid(editBoxNode)) {\n                editBoxNode.placeholder = labelTxt;\n            }\n        }\n    }\n\n    public setLabelString(editBoxNode, labelTxt) {\n        if (cc.isValid(editBoxNode)) {\n            if (editBoxNode instanceof cc.EditBox) {\n            } else if (editBoxNode instanceof cc.Node) {\n                editBoxNode = editBoxNode.getComponent(cc.EditBox);\n            }\n            if (cc.isValid(editBoxNode)) {\n                editBoxNode.string = labelTxt;\n            }\n        }\n    }\n\n    public addOutlineWithNode(targetNode) {\n        \n    }\n}","import BaseEnumComp from \"./BaseEnumComp\";\n\nconst { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\nexport enum EnumActiveType {\n    HideAll,\n    ShowFirstChild,\n}\n\n@ccclass\n@executeInEditMode\n@menu(\"core/controller/EnumActive\")\nexport default class EnumActive extends BaseEnumComp {\n    @property(cc.Node)\n    private childs: cc.Node[] = [];\n\n    public get curentNode() {\n        return this.childs[this.activeIndex - 1];\n    }\n\n    protected onFocusInEditor(): void {\n        let enumMap: { [key: string]: number } = {\n            \"<None>\": 0,\n        };\n        this.getChilds().forEach((v, i) => {\n            enumMap[v?.name ?? \"<Unknown>\"] = i + 1;\n        });\n        cc.Class[\"Attr\"].setClassAttr(this, \"activeIndex\", \"enumList\", cc.Enum[\"getList\"](enumMap));\n    }\n\n    public getChilds() {\n        if (!this.childs.length) {\n            return this.node.children;\n        }\n        return this.childs;\n    }\n\n    protected updateActive(): void {\n        const value = this.activeIndex;\n        this.getChilds().forEach((node, index) => {\n            node.active = index + 1 == value;\n        });\n    }\n    // update (dt) {}\n}\n","import BaseEnumComp from \"./BaseEnumComp\";\nimport { _ColorItem } from \"./item/_ColorItem\";\n\nconst { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\n@ccclass\n@executeInEditMode\n@menu(\"core/controller/EnumColor\")\nexport default class EnumColor extends BaseEnumComp {\n    @property(_ColorItem)\n    private childs: _ColorItem[] = [];\n\n    protected onFocusInEditor(): void {\n        let enumMap: { [key: string]: number } = {\n            \"<None>\": 0,\n        };\n        this.getChilds().forEach((v, i) => {\n            enumMap[v?.name ?? \"<Unknown>\"] = i + 1;\n        });\n        cc.Class[\"Attr\"].setClassAttr(this, \"activeIndex\", \"enumList\", cc.Enum[\"getList\"](enumMap));\n    }\n\n    public getChilds(): { name: string; value: cc.Color }[] {\n        return this.childs.map((v) => {\n            return {\n                name: v.key,\n                value: v.value,\n            };\n        });\n    }\n\n    protected updateActive(): void {\n        const value = this.activeIndex - 1;\n        this.node.color = this.getChilds()?.[value]?.value ?? cc.color();\n    }\n    // update (dt) {}\n}\n","import { lodash } from \"../../utils/NpmExport\";\nimport { Tools } from \"../../utils/Tools\";\nimport BaseEnumComp from \"./BaseEnumComp\";\n\nconst { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\nexport enum EnumActiveType {\n    HideAll,\n    ShowFirstChild,\n}\n\n@ccclass\n@executeInEditMode\n@menu(\"core/controller/EnumController\")\nexport default class EnumController extends BaseEnumComp {\n    private _allChildNames: string[] = [];\n\n    @property(BaseEnumComp)\n    private childs: BaseEnumComp[] = [];\n\n    public setChilds(childs: BaseEnumComp[]): void {\n        this.childs = childs;\n        this.resetChilds();\n    }\n\n    public show4Name(nodeName: string) {\n        this.activeIndex = this._allChildNames.indexOf(nodeName);\n    }\n\n    protected onFocusInEditor(): void {\n        let enumMap: { [key: string]: number } = {\n            \"<None>\": 0,\n        };\n\n        this._allChildNames.forEach((childName, i) => {\n            enumMap[childName ?? \"<Unknown>\"] = i;\n        });\n        cc.Class[\"Attr\"].setClassAttr(this, \"activeIndex\", \"enumList\", cc.Enum[\"getList\"](enumMap));\n    }\n\n    protected onLoad(): void {\n        this.resetChilds();\n    }\n\n    public resetChilds() {\n        let allChildsNames = new Set<string>();\n        this.getAllChilds().forEach((v) => {\n            v.getChilds().forEach((item) => {\n                allChildsNames.add(item.name);\n            });\n        });\n        this._allChildNames = [...allChildsNames];\n    }\n\n    public getChilds(): { [index: string]: any; name: string }[] {\n        return this._allChildNames.map((v) => {\n            return {\n                name: v,\n            };\n        });\n    }\n\n    public getAllChilds(): BaseEnumComp[] {\n        if (!this.childs.length) {\n            return this.getComponentsInChildren(BaseEnumComp);\n        }\n\n        return lodash\n            .chain(this.childs)\n            .map((v) => {\n                if (v instanceof EnumController) {\n                    return this.getComponentsInChildren(BaseEnumComp).filter((v) => {\n                        return v.node == this.node;\n                    });\n                }\n                return v;\n            })\n            .reduce((pre, cur) => {\n                return pre.concat(...Tools.toArray(cur));\n            }, [] as BaseEnumComp[])\n            .filter((v) => !(v instanceof EnumController))\n            .value();\n    }\n\n    protected updateActive(): void {\n        const value = this.activeIndex;\n        const actieName = this.getChilds()?.[value]?.name ?? \"\";\n        this.getAllChilds().forEach((comp, index) => {\n            comp.show4Name(actieName);\n        });\n    }\n\n    // update (dt) {}\n}\n","import BaseEnumComp from \"./BaseEnumComp\";\nimport { _LabelItem } from \"./item/_LabelItem\";\nimport { _PositionItem } from \"./item/_PositionItem\";\n\nconst { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\n@ccclass\n@executeInEditMode\n@menu(\"core/controller/EnumLabel\")\nexport default class EnumLabel extends BaseEnumComp {\n    @property(_LabelItem)\n    private childs: _LabelItem[] = [];\n\n    protected onFocusInEditor(): void {\n        let enumMap: { [key: string]: number } = {\n            \"<None>\": 0,\n        };\n        this.getChilds().forEach((v, i) => {\n            enumMap[v?.name ?? \"<Unknown>\"] = i + 1;\n        });\n        cc.Class[\"Attr\"].setClassAttr(this, \"activeIndex\", \"enumList\", cc.Enum[\"getList\"](enumMap));\n    }\n\n    public getChilds(): { name: string; value: string }[] {\n        return this.childs.map((v) => {\n            return {\n                name: v.key,\n                value: v.value,\n            };\n        });\n    }\n\n    protected updateActive(): void {\n        const value = this.activeIndex - 1;\n        const label = this.node.getComponent(cc.Label);\n        if (label) {\n            label.string = this.getChilds()?.[value]?.value ?? \"\";\n        }\n    }\n    // update (dt) {}\n}\n","import BaseEnumComp from \"./BaseEnumComp\";\nimport {\n    _MixItem,\n    MixType,\n    _MixItemProperty,\n    __MixItemPropertySkeletionAnimation,\n    __MixItemPropertyLayout,\n} from \"./item/_MixItem\";\nimport { _PositionItem } from \"./item/_PositionItem\";\nimport SkeletonHelper from \"../../utils/class/SkeletonHelper\";\nimport { Tools } from \"../../utils/Tools\";\nimport { __MixItemPropertyNodeActive } from \"./item/_MixItem\";\n\nconst { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\n@ccclass\n@executeInEditMode\n@menu(\"core/controller/EnumMix\")\nexport default class EnumMix extends BaseEnumComp {\n    @property(_MixItem)\n    protected childs: _MixItem[] = [];\n\n    protected onFocusInEditor(): void {\n        this.childs.forEach((v, i) => {\n            if (v.key === \"\") {\n                v.key = i.toString();\n            }\n        });\n        let enumMap: { [key: string]: number } = {\n            \"<None>\": 0,\n        };\n        this.getChilds().forEach((v, i) => {\n            enumMap[v?.name ?? \"<Unknown>\"] = i + 1;\n        });\n        cc.Class[\"Attr\"].setClassAttr(this, \"activeIndex\", \"enumList\", cc.Enum[\"getList\"](enumMap));\n    }\n\n    public getChilds(): { name: string; values: _MixItemProperty[] }[] {\n        return this.childs.map((v) => {\n            return {\n                name: v.key,\n                values: v.values,\n            };\n        });\n    }\n\n    protected updateActive(): void {\n        const value = this.activeIndex - 1;\n        let values = this.getChilds()?.[value]?.values ?? [];\n        values.forEach((v) => {\n            if (v.value === undefined) {\n                return;\n            }\n            switch (v.type) {\n                case MixType.NodeColor: {\n                    this.node.color = v.value as cc.Color;\n                    break;\n                }\n                case MixType.Text: {\n                    (this.getComponent(cc.Label) || this.getComponent(cc.RichText)).string =\n                        v.value as string;\n                    break;\n                }\n                case MixType.SpriteFrame: {\n                    this.getComponent(cc.Sprite).spriteFrame = v.value as cc.SpriteFrame;\n                    break;\n                }\n                case MixType.OutLineColor: {\n                    this.getComponent(cc.LabelOutline).color = v.value as cc.Color;\n                    break;\n                }\n                case MixType.Size: {\n                    this.node.setContentSize(v.value as cc.Size);\n                    break;\n                }\n                case MixType.SkeletionAnimation: {\n                    const value = v.value as __MixItemPropertySkeletionAnimation;\n                    let helper = new SkeletonHelper(this.getComponent(sp.Skeleton));\n                    let animation = value.animationName || helper.getAnimationNames()[0];\n                    helper.pause(animation);\n                    this.scheduleOnce(() => {\n                        helper.play(value.animationName || helper.getAnimationNames()[0], {\n                            loop: value.loop,\n                        });\n                    }, value.delayTime);\n                    break;\n                }\n                case MixType.Layout: {\n                    const value = v.value as __MixItemPropertyLayout;\n                    let layout = this.getComponent(cc.Layout) || this.addComponent(cc.Layout);\n                    for (let key in value) {\n                        layout[key] = value[key];\n                    }\n                    break;\n                }\n                case MixType.NodeActive: {\n                    const value = v.value as __MixItemPropertyNodeActive;\n                    value.nodes.forEach((item) => {\n                        if (item.target) {\n                            item.target.active = item.active;\n                        }\n                    });\n                    break;\n                }\n            }\n        });\n    }\n    // update (dt) {}\n}\n","import BaseEnumComp from \"./BaseEnumComp\";\nimport { _PositionItem } from \"./item/_PositionItem\";\n\nconst { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\n@ccclass\n@executeInEditMode\n@menu(\"core/controller/EnumPosition\")\nexport default class EnumPosition extends BaseEnumComp {\n    @property(_PositionItem)\n    private childs: _PositionItem[] = [];\n\n    protected onFocusInEditor(): void {\n        let enumMap: { [key: string]: number } = {\n            \"<None>\": 0,\n        };\n        this.getChilds().forEach((v, i) => {\n            enumMap[v?.name ?? \"<Unknown>\"] = i + 1;\n        });\n        cc.Class[\"Attr\"].setClassAttr(this, \"activeIndex\", \"enumList\", cc.Enum[\"getList\"](enumMap));\n    }\n\n    public getChilds(): { name: string; value: cc.Vec3 }[] {\n        return this.childs.map((v) => {\n            return {\n                name: v.key,\n                value: v.value,\n            };\n        });\n    }\n\n    protected updateActive(): void {\n        const value = this.activeIndex - 1;\n        this.node.position = this.getChilds()?.[value]?.value ?? cc.v3();\n    }\n    // update (dt) {}\n}\n","import BaseEnumComp from \"./BaseEnumComp\";\nimport { _SpriteFrameItem } from \"./item/_SpriteFrameItem\";\n\nconst { ccclass, property, executeInEditMode, menu, requireComponent } = cc._decorator;\n\n@ccclass\n@executeInEditMode\n@menu(\"core/controller/EnumSpriteFrame\")\nexport default class EnumSpriteFrame extends BaseEnumComp {\n    @property(_SpriteFrameItem)\n    private childs: _SpriteFrameItem[] = [];\n\n    protected onFocusInEditor(): void {\n        let enumMap: { [key: string]: number } = {\n            \"<None>\": 0,\n        };\n        this.getChilds().forEach((v, i) => {\n            enumMap[v?.name ?? \"<Unknown>\"] = i + 1;\n        });\n\n        cc.Class[\"Attr\"].setClassAttr(this, \"activeIndex\", \"enumList\", cc.Enum[\"getList\"](enumMap));\n    }\n\n    public getChilds(): { name: string; value: cc.SpriteFrame }[] {\n        return this.childs.map((v) => {\n            return {\n                name: v.key,\n                value: v.value,\n            };\n        });\n    }\n\n    protected updateActive(): void {\n        const value = this.activeIndex - 1;\n        const sprite = this.node.getComponent(cc.Sprite);\n        if (sprite) {\n            sprite.spriteFrame = this.getChilds()?.[value]?.value ?? null;\n        }\n    }\n    // update (dt) {}\n}\n","export const EVENT_CODE = {\n    RequestSuccess: 1,\n    RequestTimeout: 2,\n    RequestFailure: 3,\n};\n","import { PlayButtonSoundUtils } from \"../../utils/playButtonSoundUtils/PlayButtonSoundUtils\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class FindButtonPlayClickSound extends cc.Component {\n    onLoad() {\n        PlayButtonSoundUtils.getInstance().buttonPlaySoundHandle(this.node);\n    }\n}\n","import ProjectConf from \"./ProjectConf\";\nimport { SkinType } from \"./SkinType\";\nimport { LanguageType } from \"./LanguageType\";\nimport { IntConf } from \"./int/IntConf\";\nimport { CountryCodeEnum } from \"./int/CountryCodeEnum\";\n\nclass Skin {\n    public static curVersionType = ProjectConf.version_type;\n\n    public static curMainSkin = IntConf[Skin.curVersionType].skin;\n\n    public static isBall() {\n        return this.curMainSkin == SkinType.BALL;\n    }\n\n    public static isWorldCup() {\n        return this.curMainSkin == SkinType.WORLD_CUP;\n    }\n\n    public static isLight() {\n        return this.curMainSkin == SkinType.LIGHT;\n    }\n}\n\nclass Language {\n    public static curLanguage = IntConf[Skin.curVersionType].lan;\n\n    public static lan_en() {\n        return this.curLanguage == LanguageType.EN;\n    }\n\n    public static lan_br() {\n        return this.curLanguage == LanguageType.PT;\n    }\n}\n\nclass Country {\n    public static code = IntConf[Skin.curVersionType].country;\n\n    public static code_in() {\n        return this.code == CountryCodeEnum.IN;\n    }\n\n    public static code_br() {\n        return this.code == CountryCodeEnum.BR;\n    }\n}\n\nexport default { Skin, Language, Country };\n","import GameStatusModel from \"./GameStatusModel\";\n\nclass GameCategoryModel {\n    title: string;\n    sort: number;\n    gameList: Array<GameStatusModel>;\n    gameNavNo: number;\n    gameNavType: number;\n    layout: string;\n\n    constructor(categoryInfo) {\n        this.title = categoryInfo.title || \"\";\n        this.sort = categoryInfo.sort;\n        this.gameNavNo = categoryInfo.gameNavNo;\n        this.gameNavType = categoryInfo.gameNavType;\n        this.layout = categoryInfo.layout;\n        this.gameList = [];\n        let list = categoryInfo.list || [];\n        for (let i = 0; i < list.length; i++) {\n            let gameModel = new GameStatusModel(list[i], i);\n            this.gameList.push(gameModel);\n        }\n    }\n}\n\nexport default GameCategoryModel;\n","import { BundleNames } from \"../BundleNames\";\nimport { CountryCodeEnum } from \"./CountryCodeEnum\";\n\nlet commonGame: string[] = [\n    BundleNames.FIRE_JOKER,\n    BundleNames.BUFFALO,\n    BundleNames.WOLFGOLD,\n    BundleNames.CLASSIC_FIVE_DRAGONS,\n    BundleNames.GOD_OF_FORTUNE,\n    BundleNames.BIGBATTLE,\n    BundleNames.RED_BLACK,\n    BundleNames.BIG_SMALL,\n    BundleNames.SEVEN_UP_DOWN,\n    BundleNames.CRASH,\n    BundleNames.ANDAR_BAHAR,\n    BundleNames.ROULETTE,\n    BundleNames.LUDO,\n    BundleNames.BINGO,\n    BundleNames.BLACK_JACK,\n    BundleNames.DOMINO_GAPLE,\n    BundleNames.FISHING,\n];\n\nlet mergeCommonGame = (arr: string[]): string[] => {\n    return Array.from(new Set(commonGame.concat(arr)));\n};\n\nexport let GameConf = {\n    [CountryCodeEnum.IN]: mergeCommonGame([\n        BundleNames.BEST_OFFIVE,\n        BundleNames.CRICKET_BATTLE,\n        BundleNames.THREE_DICE,\n        BundleNames.JHANDI_MUNDA,\n        BundleNames.RUMMY_POINT,\n        BundleNames.TEENPATTI,\n        BundleNames.CALL_BREAK,\n    ]),\n    [CountryCodeEnum.BR]: mergeCommonGame([\n        BundleNames.BEST_CLUB,\n        BundleNames.TRUCO,\n        BundleNames.CACHETA,\n    ]),\n    [CountryCodeEnum.ID]: mergeCommonGame([BundleNames.RUMMY_POINT]),\n};\n","import { BundleNames } from \"./BundleNames\";\nimport { GameType } from \"./GameType\";\n\n/**\n * 所有GameType常量的配置数据统一管理\n * 只要新增GameType常量，就需要新增配置数据。比如新增游戏，或者新增一个websocket命名\n */\nexport class GameDatabase {\n    private static _instance: GameDatabase = null;\n\n    public database: { [index: number]: databaseObject } = {};\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new GameDatabase();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {\n        this.initalize();\n    }\n\n    public getBundleNameWithGameId(gameId: GameType) {\n        let gameCfg = this.database[gameId];\n        return gameCfg.bundleName;\n    }\n\n    public initalize() {\n        this.database = {\n            /*****************非游戏类型*********************/\n            [GameType.GAME_HALL]: <databaseObject>{\n                bundleName: BundleNames.HALL,\n            },\n            [GameType.LOGIN]: <databaseObject>{\n                bundleName: BundleNames.LOADING,\n            },\n            [GameType.LAUNCHER]: <databaseObject>{\n                bundleName: BundleNames.LOADING,\n            },\n\n            [GameType.UNIVERSE]: <databaseObject>{\n                bundleName: BundleNames.HALL,\n            },\n\n            /*****************Cocos 游戏*********************/\n            [GameType.BIGBATTLE]: <databaseObject>{\n                bundleName: BundleNames.BIGBATTLE,\n            },\n            [GameType.REDBLACK]: <databaseObject>{\n                bundleName: BundleNames.RED_BLACK,\n            },\n            [GameType.SHARK]: <databaseObject>{\n                bundleName: BundleNames.SHARK,\n            },\n            [GameType.SEVEN_UP_DOWN]: <databaseObject>{\n                bundleName: BundleNames.SEVEN_UP_DOWN,\n            },\n            [GameType.BEST_OFFIVE]: <databaseObject>{\n                bundleName: BundleNames.BEST_OFFIVE,\n            },\n            [GameType.CRICKET_BATTLE]: <databaseObject>{\n                bundleName: BundleNames.CRICKET_BATTLE,\n            },\n            [GameType.BEST_CLUB]: <databaseObject>{\n                bundleName: BundleNames.BEST_CLUB,\n            },\n            [GameType.ANDAR_BAHAR]: <databaseObject>{\n                bundleName: BundleNames.ANDAR_BAHAR,\n            },\n            [GameType.JHANDI_MUNDA]: <databaseObject>{\n                bundleName: BundleNames.JHANDI_MUNDA,\n            },\n            [GameType.FISHING]: <databaseObject>{\n                bundleName: BundleNames.FISHING,\n            },\n            [GameType.FIRE_JOKER]: <databaseObject>{\n                bundleName: BundleNames.FIRE_JOKER,\n            },\n            [GameType.CLASSIC_FIVE_DRAGONS]: <databaseObject>{\n                bundleName: BundleNames.CLASSIC_FIVE_DRAGONS,\n            },\n            [GameType.BUFFALO]: <databaseObject>{\n                bundleName: BundleNames.BUFFALO,\n            },\n            [GameType.WOLF_GOLD]: <databaseObject>{\n                bundleName: BundleNames.WOLFGOLD,\n            },\n            [GameType.DOMINO]: <databaseObject>{\n                bundleName: BundleNames.DOMINO,\n            },\n            [GameType.TRUCO]: <databaseObject>{\n                bundleName: BundleNames.TRUCO,\n            },\n            [GameType.RUMMY_POINT]: <databaseObject>{\n                bundleName: BundleNames.RUMMY_POINT,\n            },\n            [GameType.TEENPATTI]: <databaseObject>{\n                bundleName: BundleNames.TEENPATTI,\n            },\n            [GameType.CRASH]: <databaseObject>{\n                bundleName: BundleNames.CRASH,\n            },\n            [GameType.LUDO]: <databaseObject>{\n                bundleName: BundleNames.LUDO,\n            },\n            [GameType.GOD_OF_FORTUNE]: <databaseObject>{\n                bundleName: BundleNames.GOD_OF_FORTUNE,\n            },\n            [GameType.THREE_DICE]: <databaseObject>{\n                bundleName: BundleNames.THREE_DICE,\n            },\n            [GameType.ROULETTE]: <databaseObject>{\n                bundleName: BundleNames.ROULETTE,\n            },\n            [GameType.CACHETA]: <databaseObject>{\n                bundleName: BundleNames.CACHETA,\n            },\n            [GameType.CALL_BREAK]: <databaseObject>{\n                bundleName: BundleNames.CALL_BREAK,\n            },\n            [GameType.BINGO]: <databaseObject>{\n                bundleName: BundleNames.BINGO,\n            },\n            [GameType.BLACK_JACK]: <databaseObject>{\n                bundleName: BundleNames.BLACK_JACK,\n            },\n            [GameType.DOMINO_GAPLE]: <databaseObject>{\n                bundleName: BundleNames.DOMINO_GAPLE,\n            },\n            [GameType.BTI]: <databaseObject>{},\n\n            /***************** Mini Game *********************/\n            [GameType.BIG_SMALL]: <databaseObject>{\n                bundleName: BundleNames.BIG_SMALL,\n            },\n\n            /*****************H5 游戏*********************/\n        };\n    }\n}\n","enum HallFunctionEntrance {\n    RECHARGE = 0,\n    WITHDRAW = 1,\n    REGISTER = 2,\n    NOTICE = 3,\n    CUSTOMER = 4,\n    MAIL = 5,\n    SAFEBOX = 6,\n    MESSAGE = 7,\n    WELFARE = 8,\n    TASK = 9,\n    VIP_GIFT = 10,\n    PROMOTER = 11,\n    FIRST_CHARGE = 12,\n    PIGGY_BANK = 13,\n    NEW_TRIPLE_GIFT = 15,\n    PROXY_SYSTEM = 16,\n}\n\nenum GameKind {\n    NON_GAME = 100,\n    COCOS_GAME = 1,\n    H5_GAME = 2,\n    NATIVE_SDK_GAME = 3,\n    MINI_GAME = 4,\n}\n\nenum H5ScreenDirection {\n    LANDSCAPE = 0,\n    PORTRAIT = 1,\n    NONE = 2,\n}\n\nenum ConnectType {\n    SOCKET = 0,\n    HTTP = 1,\n}\n\nlet GameChannel = {\n    NON_GAME: {\n        kind: GameKind.NON_GAME,\n    },\n    SELF_DEV: {\n        kind: GameKind.COCOS_GAME,\n    },\n    MINI_GAME_SOCKET: {\n        kind: GameKind.MINI_GAME,\n        connectType: ConnectType.SOCKET,\n    },\n    MINI_GAME_HTTP: {\n        kind: GameKind.MINI_GAME,\n        connectType: ConnectType.HTTP,\n    },\n    IM: {\n        kind: GameKind.H5_GAME,\n        h5ScreenDirection: H5ScreenDirection.PORTRAIT,\n    },\n};\n\nenum GameNavNo {\n    NAV_NO_HOT = 0, // 热门\n    NAV_NO_CARD = 1, // 棋牌\n    NAV_NO_SLOT = 2, // 老虎机\n    NAV_NO_LIVE = 3, // (真人)视讯\n    NAV_NO_SPORTS = 4, // 体育\n    NAV_NO_LOTTERY = 5, // 彩票\n    NAV_NO_GAMING = 6, // (电竞)竞技\n    NAV_NO_CUBE = 7, // 百人\n    NAV_NO_OTHER = 8, // 其它\n}\n\nenum GameNavType {\n    NAV_TYPE_DEFAULT = 0,\n    NAV_TYPE_HOT = 1,\n    NAV_TYPE_SLOT = 2,\n    NAV_TYPE_SPORTS = 3,\n    NAV_TYPE_OTHER = 4,\n    NAV_TYPE_LOTTERY = 5,\n    NAV_TYPE_CARD = 6,\n    NAV_TYPE_LIVE = 7,\n    NAV_NO_CASINO = 8,\n}\n\nenum MFAgentType {\n    PAY_TYPE_ALIPAY = \"alipay\",\n    PAY_TYPE_WECHAT = \"wechat\",\n    PAY_TYPE_BANK = \"bank\",\n\n    RECOMMEND_TYPE_HUABEI = \"huabei_credit\",\n    RECOMMEND_TYPE_AUTO = \"auto_credit\",\n    RECOMMEND_TYPE_LEVEL_JPDL = \"level_1\",\n    RECOMMEND_TYPE_LEVEL_GFRZ = \"level_2\",\n    RECOMMEND_TYPE_LEVEL_KBTJ = \"level_3\",\n}\n\nenum FacebookLoginState {\n    LOGIN_SUCCESS = 0,\n    LOGIN_FAIL = 1,\n    GET_USER_INFO_FAIL = 2,\n    LOGIN_CANCEL = 3,\n    STATE_SDK_NOT_INITIALIZED = 4,\n    STATE_APP_ID_NOT_SET = 5,\n}\n\nenum AccountType {\n    TYPE_GUEST = 0,\n    TYPE_PHONE = 1,\n    TYPE_FACEBOOK = 2,\n    TYPE_ACCOUNT = 3,\n    TYPE_OPENID = 4,\n}\n\nenum PromoterCommissionRecordType {\n    SETTLEMENT = 0,\n    RECEIVE = 1,\n}\n\nenum PromoterStatType {\n    CHILD = 0,\n    SUB = 1,\n}\n\nenum PromoterDataType {\n    PROFIT = 0,\n    CONTRIBUTION_AMOUNT = 1,\n}\n\nenum PromoterUsersOrderBy {\n    DEFAULT = 0,\n    CHILD_USER_COUNT = 1,\n    SUB_USER_COUNT = 2,\n    TODAY_COMMISSION = 3,\n    TOTAL_COMMISSION = 4,\n}\n\nenum PromoterUsersOrderType {\n    ASC = 0,\n    DESC = 1,\n}\n\nenum PopupWindowGravity {\n    UP = \"up\",\n    DOWN = \"down\",\n}\n\nenum CustomerType {\n    RECHARGE_APPEAL = 0,\n    WITHDRAW_APPEAL = 1,\n    CUSTOMER_SERVICE = 2,\n}\n\nenum IdentityType {\n    AT_PHONE_NO = 0,\n    AT_FB_ID = 1,\n    AT_ACCOUNT_NO = 2,\n    AT_AID = 3,\n    AT_FB_EMAIL = 4,\n    AT_OPENID = 5,\n}\n\nenum ResetPwdType {\n    MODIFY_PWD = 0,\n    RETRIEVE_PWD = 1,\n}\n\nenum NewbieType {\n    NB_DEFAULT = 0,\n    NB_ANONYMOUS = 1,\n    NB_UPGRADE = 2,\n    NB_REGISTER = 3,\n}\n\nenum NoticeType {\n    HOT_ACTIVITY = 1,\n    GAME_NOTICE = 2,\n    HALL_BANNER = 3,\n}\n\nenum NoticeShowFrequency {\n    ONCE_A_DAY = 1,\n    EVENRY_TIME_WHEN_START = 2,\n}\n\nenum BonusCenterType {\n    RECHARGE_BONUS = \"RECHARGE_BONUS\",\n    ONLINE_BONUS = \"ONLINE_BONUS\",\n    LOGIN_BONUS = \"LOGIN_BONUS\",\n}\n\n\nenum DialogActionType {\n    Confirm,\n    Close,\n    Cancel\n}\n\nexport {\n    GameKind,\n    GameChannel,\n    HallFunctionEntrance,\n    GameNavNo,\n    GameNavType,\n    MFAgentType,\n    H5ScreenDirection,\n    ConnectType,\n    FacebookLoginState,\n    AccountType,\n    PromoterCommissionRecordType,\n    PromoterStatType,\n    PromoterDataType,\n    PromoterUsersOrderBy,\n    PromoterUsersOrderType,\n    PopupWindowGravity,\n    CustomerType,\n    IdentityType,\n    ResetPwdType,\n    NewbieType,\n    BonusCenterType,\n    NoticeType,\n    NoticeShowFrequency,\n    DialogActionType\n};\n","class GameMounted {\n  private static _instance: GameMounted = null;\n\n  public static getInstance() {\n    if (!this._instance) {\n      this._instance = new GameMounted();\n    }\n\n    return this._instance;\n  }\n\n  private constructor() {}\n\n  public hasMountedGameList = [];\n\n  public initCanMountedGame() {\n    this.hasMountedGameList = [];\n  }\n\n  public pushCanMountedGame(gameId) {\n    if (this.hasMountedGameList.indexOf(gameId) >= 0) {\n      return;\n    }\n    this.hasMountedGameList.push(gameId);\n  }\n}\n\nexport { GameMounted };\n","export default class GameRoomId {\n    static RoomID = 1;\n\n}","class GameStatusModel {\n    tag: number;\n    tag_hot: number;\n    tag_event: number;\n    tag_new: number;\n    icon: string;\n    layout: number;\n    gameId: number;\n    tag_earth: number;\n    kind: number;\n\n    constructor(gameInfo, index) {\n        this.tag = gameInfo.tag || 0;\n        this.tag_hot = gameInfo.tagHot || 0;\n        this.tag_event = gameInfo.tagEvent || 0;\n        this.tag_new = gameInfo.tagNew || 0;\n        this.tag_earth = gameInfo.tagEarth || 0;\n        this.icon = gameInfo.icon || \"\";\n        this.kind = gameInfo.kind || \"\";\n        this.layout = index || 0;\n        this.gameId = gameInfo.gameId;\n    }\n}\n\nexport default GameStatusModel;\n","export enum GameType {\n    GAME_HALL = 0,\n\n    FIRE_JOKER = 1000,\n    BUFFALO = 1001,\n    WOLF_GOLD = 1002,\n    CLASSIC_FIVE_DRAGONS = 1003,\n    GOD_OF_FORTUNE = 1004,\n\n    BIGBATTLE = 2000,\n    REDBLACK = 2001,\n    BIG_SMALL = 2002,\n    SEVEN_UP_DOWN = 2003,\n    CRASH = 2004,\n    BEST_OFFIVE = 2005, //万人金花\n    CRICKET_BATTLE = 2006, // 板球大战\n    THREE_DICE = 2007, //judidadu\n    ANDAR_BAHAR = 2008, //Andar Bahar\n    JHANDI_MUNDA = 2009, //Jhandi Munda\n    BEST_CLUB = 2010, //Best Club\n    ROULETTE = 2011, //轮盘\n\n    RUMMY_POINT = 3000,\n    TEENPATTI = 3001,\n    TRUCO = 3002,\n    LUDO = 3003, //LUDO\n    CACHETA = 3004, //Cacheta\n    CALL_BREAK = 3005, //Call Break\n    BINGO = 3006, //bingo\n    BLACK_JACK = 3007, //blackjack\n    DOMINO_GAPLE = 3008, //Domino-Gaple\n\n    FISHING = 4000,\n\n    BTI = 5000, //BTI Sports\n\n    //Shark和domino暂时保留id\n    SHARK = 23,\n    DOMINO = 56,\n\n    LOGIN = 98,\n    LAUNCHER = 99,\n    UNIVERSE = 10000,\n\n    WALLET = 20000,\n}\n","import { IntConf } from \"../conf/int/IntConf\";\nimport ProjectConf from \"../conf/ProjectConf\";\nimport { CocosUtils } from \"../utils/CocosUtils\";\nimport { lodash, urlParser } from \"../utils/NpmExport\";\nimport { PlatformType } from \"./PlatformType\";\nimport { PlatformUtil } from \"./PlatformUtil\";\nconst fpPromise = import(\"@fingerprintjs/fingerprintjs\").then((FingerprintJS) =>\n    FingerprintJS.load()\n);\n\nexport class H5Util {\n    private static _instance: H5Util = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new H5Util();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    private channel: string = \"\";\n    private brand: string = \"\";\n    private copiedText: string = \"\";\n    private fingerId: string = \"\";\n\n    get platform() {\n        if (lodash.has(window, \"jsBridge\")) {\n            return PlatformType.H5Native;\n        }\n        return PlatformType.H5;\n    }\n\n    /**\n     * 使用channel、brand参数优先于native返回的channel、brand\n     */\n    public init() {\n        let url = window.location.href;\n        let queryParams: object = urlParser(url, true).query;\n        this.channel = queryParams[\"chn\"] || window.jsBridge?.getChannel?.() || \"website\";\n        this.brand =\n            queryParams[\"brd\"] ||\n            window.jsBridge?.getBrand?.() ||\n            IntConf[ProjectConf.version_type].brand ||\n            \"\";\n\n        fpPromise\n            .then((fp) => fp.get())\n            .then((result) => {\n                const visitorId = result.visitorId;\n                this.fingerId = visitorId;\n            });\n    }\n\n    public openUrlByWebView(url: string) {\n        if (typeof window.jsBridge?.openUrlByWebView == \"function\") {\n            window.jsBridge.openUrlByWebView(url);\n            return;\n        }\n\n        window.open(url, \"_blank\");\n    }\n\n    public openUrlByBrowser(param: string | Promise<string>) {\n        if (param instanceof Promise) {\n            if (cc.sys.browserType == cc.sys.BROWSER_TYPE_SAFARI) {\n                this.openUrlPromise(param);\n            } else {\n                param.then((url) => {\n                    this.openUrlString(url);\n                });\n            }\n        } else {\n            this.openUrlString(param);\n        }\n    }\n\n    private openUrlString(url: string) {\n        if (typeof window.jsBridge?.openUrlByBrowser == \"function\") {\n            window.jsBridge.openUrlByBrowser(url);\n            return;\n        }\n        window.open(url, \"_blank\");\n    }\n\n    private openUrlPromise(promise: Promise<string>) {\n        let newWindow;\n        if (this.platform === PlatformType.H5) {\n            newWindow = window.open();\n        }\n        promise.then((url) => {\n            if (typeof window.jsBridge?.openUrlByBrowser == \"function\") {\n                window.jsBridge.openUrlByBrowser(url);\n                return;\n            }\n            newWindow.location.href = url;\n        });\n    }\n\n    public openApp(packageName: string, fallbackUrl: string) {\n        window.jsBridge?.openApp?.(packageName, fallbackUrl);\n    }\n\n    public copyText(text: string) {\n        if (typeof navigator.clipboard?.writeText == \"function\") {\n            // for pc browser\n            navigator.clipboard.writeText(text).then(\n                () => {\n                    // write succeed\n                    this.copiedText = text;\n                },\n                () => {\n                    // write failed\n                    window.jsBridge?.copyText?.(text);\n                }\n            );\n        } else {\n            // for webview\n            this.copiedText = text;\n            window.jsBridge?.copyText?.(text);\n        }\n    }\n\n    public getCopiedText(): string {\n        let text = this.copiedText;\n        if (!lodash.isEmpty(text)) {\n            return text;\n        }\n\n        return window.jsBridge?.getCopiedText?.();\n    }\n\n    public saveImage(url: string) {\n        window.jsBridge?.saveImage?.(url);\n    }\n\n    public showNativeToast(toast: string) {\n        window.jsBridge?.showNativeToast?.(toast);\n    }\n\n    public initAdjustID(adjustID: string) {\n        window.jsBridge?.initAdjustID?.(adjustID);\n    }\n\n    public trackAdjustEvent(eventToken: string, data: object) {\n        window.jsBridge?.trackAdjustEvent?.(eventToken, JSON.stringify(data));\n    }\n\n    public getDeviceID(): string {\n        let deviceID = window.jsBridge?.getDeviceID?.();\n        if (!lodash.isEmpty(deviceID)) {\n            return deviceID;\n        }\n        return this.fingerId;\n    }\n\n    public getDeviceInfoForLighthouse(): string {\n        return window.jsBridge?.getDeviceInfoForLighthouse?.() ?? navigator.userAgent;\n    }\n\n    public getSystemVersionCode(): number {\n        return window.jsBridge?.getSystemVersionCode?.() ?? 0;\n    }\n\n    public getClientVersionCode(): number {\n        return window.jsBridge?.getClientVersionCode?.() ?? 0;\n    }\n\n    public getPackageName(): string {\n        let packageName = window.jsBridge?.getPackageName?.();\n        if (!lodash.isEmpty(packageName)) {\n            return packageName;\n        }\n        return \"x.x.x\";\n    }\n\n    public getAppName(): string {\n        let appName = window.jsBridge?.getAppName?.();\n        if (!lodash.isEmpty(appName)) {\n            return appName;\n        }\n        return \"x\";\n    }\n\n    public getChannel(): string {\n        return this.channel;\n    }\n\n    public getBrand(): string {\n        return this.brand;\n    }\n\n    public saveGameUrl(gameUrl: string) {\n        window.jsBridge?.saveGameUrl?.(gameUrl);\n    }\n\n    public saveAccountInfo(accountInfo: string) {\n        window.jsBridge?.saveAccountInfo?.(accountInfo);\n    }\n\n    public getAccountInfo(): string {\n        let accountInfo = window.jsBridge?.getAccountInfo?.();\n        if (!lodash.isEmpty(accountInfo)) {\n            return accountInfo;\n        }\n        return \"\";\n    }\n\n    public getAdjustDeviceID(): string {\n        let adjustDeviceID = window.jsBridge?.getAdjustDeviceID?.();\n        if (!lodash.isEmpty(adjustDeviceID)) {\n            return adjustDeviceID;\n        }\n        return \"\";\n    }\n\n    public getGoogleADID(): string {\n        let googleADID = window.jsBridge?.getGoogleADID?.();\n        if (!lodash.isEmpty(googleADID)) {\n            return googleADID;\n        }\n        return \"\";\n    }\n\n    public getIDFA(): string {\n        let idfa = window.jsBridge?.getIDFA?.();\n        if (!lodash.isEmpty(idfa)) {\n            return idfa;\n        }\n        return \"\";\n    }\n\n    public getReferID(): string {\n        let referID = window.jsBridge?.getReferID?.();\n        if (!lodash.isEmpty(referID)) {\n            return referID;\n        }\n        return \"\";\n    }\n\n    public getAgentID(): string {\n        let agentID = window.jsBridge?.getAgentID?.();\n        if (!lodash.isEmpty(agentID)) {\n            return agentID;\n        }\n        return \"\";\n    }\n\n    public setCocosData(key: string, value: string) {\n        window.jsBridge?.setCocosData?.(key, value);\n    }\n\n    public getCocosData(key: string): string {\n        return window.jsBridge?.getCocosData?.(key);\n    }\n\n    public loadUrl(url: string) {\n        window.jsBridge?.loadUrl?.(url);\n    }\n\n    public goBack() {\n        window.jsBridge?.goBack?.();\n    }\n\n    public close() {\n        window.jsBridge?.close?.();\n    }\n\n    public refresh() {\n        window.jsBridge?.refresh?.();\n    }\n\n    public clearCache() {\n        window.jsBridge?.clearCache?.();\n    }\n\n    public savePromotionMaterial(materialUrl: string) {\n        window.jsBridge?.savePromotionMaterial?.(materialUrl);\n    }\n\n    public synthesizePromotionImage(qrCodeUrl: string, size: number, x: number, y: number) {\n        window.jsBridge?.synthesizePromotionImage?.(qrCodeUrl, size, x, y);\n    }\n\n    public shareUrl(url: string) {\n        window.jsBridge?.shareUrl?.(url);\n    }\n\n    public isOnline() {\n        return lodash.get(window, \"navigator.onLine\", true);\n    }\n\n    public get isSafari() {\n        return (\n            navigator.userAgent.search(\"Safari\") >= 0 && navigator.userAgent.search(\"Chrome\") < 0\n        );\n    }\n}\n","import ValueObserver from \"./ValueObserver\";\n\nexport default abstract class HttpObserver<T, Q extends Array<any> = any[]> extends ValueObserver<\n    Partial<T>\n> {\n    protected onInit(): Partial<T> {\n        return {};\n    }\n\n    public query(...args: Q) {\n        return this.onQuery(...args).then((res) => {\n            this.set(res);\n        });\n    }\n\n    protected abstract onQuery(...args: Q): Promise<T>;\n}\n","import { ApiErrorCode } from \"../conf/ApiErrorCode\";\nimport { PlatformUtil } from \"../platform/PlatformUtil\";\nimport HttpRequestUtil from \"./HttpRequestUtil\";\n\nconst REQUEST_TYPE = {\n    POST: \"POST\",\n    GET: \"get\",\n};\n\nclass HttpRequestJson {\n    private static readonly timeout: number = 5000;\n    private static readonly businessTimeout: number = 10000;\n\n    private xhr: XMLHttpRequest;\n    private timer: NodeJS.Timeout;\n\n    private host: string;\n    private host_backup: string[];\n    private api: string;\n    private data: any;\n    private request_type: string;\n    private callFunc: IHttpCallback;\n\n    constructor() { }\n\n    private retryWithHostBackup(type: string) {\n        clearTimeout(this.timer);\n        let canRetry: boolean = HttpRequestUtil.getInstance().canRetryWithHostBackup(\n            this.host_backup\n        );\n        if (canRetry) {\n            if (this.host_backup.length > 0) {\n                this.host = this.host_backup.shift();\n            }\n            this.xhr = null;\n            this.request(this.host, this.api, this.data);\n        } else {\n            this.onError(type);\n        }\n    }\n\n    private onError(type: string) {\n        switch (type) {\n            case \"ontimeout\":\n                this.callFunc?.error?.({ code: ApiErrorCode.TIMEOUT });\n                break;\n            case \"onerror\":\n            case \"error\":\n                this.callFunc?.error?.({ code: ApiErrorCode.HTTP_ERROR });\n                break;\n            case \"offline\": {\n                this.callFunc?.error?.({ code: ApiErrorCode.OFFLINE });\n                break;\n            }\n        }\n    }\n\n    private request(host: string, api: string, data: any) {\n        let self = this;\n        if (host) {\n            let prefixIndex = host.indexOf(\"https\");\n            if (prefixIndex < 0) {\n                host = \"https://\" + host;\n            }\n            if (host.charAt(host.length - 1) == \"/\") {\n                host = host.substring(0, host.length - 1);\n            }\n        }\n        if (api.charAt(0) != \"/\") {\n            api = \"/\" + api;\n        }\n        let url = host + api;\n\n        if (this.request_type == REQUEST_TYPE.GET) {\n            url += \"?\" + data;\n        }\n\n        self.xhr = new XMLHttpRequest();\n        self.xhr.open(this.request_type, url, true);\n\n        self.xhr.onreadystatechange = () => {\n            if (self.xhr.readyState == 4) {\n                let httpStatus = self.xhr.status;\n                let responseText = self.xhr.responseText;\n                if (httpStatus == 200) {\n                    try {\n                        let responseJson = JSON.parse(responseText);\n                        let jsonData = responseJson.data;\n                        let jsonStatus = responseJson.status;\n                        if (jsonData && jsonStatus == 0) {\n                            self.callFunc &&\n                                self.callFunc.success &&\n                                self.callFunc.success(jsonData);\n                        } else {\n                            self.callFunc &&\n                                self.callFunc.error &&\n                                self.callFunc.error(responseJson);\n                        }\n                    } catch (error) {\n                        self.callFunc &&\n                            self.callFunc.error &&\n                            self.callFunc.error({ code: ApiErrorCode.HTTP_ERROR });\n                    }\n                } else {\n                    try {\n                        let responseJson = JSON.parse(responseText);\n                        self.callFunc && self.callFunc.error && self.callFunc.error(responseJson);\n                    } catch (error) {\n                        if (self.xhr.status) {\n                            self.callFunc &&\n                                self.callFunc.error &&\n                                self.callFunc.error({ code: ApiErrorCode.HTTP_ERROR });\n                        }\n                    }\n                }\n            }\n        };\n\n        self.xhr.ontimeout = (event) => {\n            CC_DEBUG && cc.log(\"HttpRequest: ontimeout\", url);\n            self.retryWithHostBackup(\"ontimeout\");\n        };\n        self.xhr.onerror = (event) => {\n            CC_DEBUG && cc.log(\"HttpRequest: onerror\", url);\n            self.retryWithHostBackup(\"onerror\");\n        };\n        self.timer = setTimeout(() => {\n            self.xhr.abort();\n            clearTimeout(self.timer);\n        }, HttpRequestJson.businessTimeout);\n\n        self.xhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\n        let uid = CommonDepend.UserManager.uid.toString();\n        let token = CommonDepend.UserManager.token;\n\n        self.xhr.setRequestHeader(\"X-AUTH-USER\", uid.toString());\n        self.xhr.setRequestHeader(\"X-AUTH-TOKEN\", token.toString());\n\n        self.xhr.timeout = HttpRequestJson.timeout;\n\n        if (self.request_type == REQUEST_TYPE.POST) {\n            self.xhr.send(data);\n        } else {\n            self.xhr.send();\n        }\n    }\n\n    public post(\n        host: string,\n        host_backup: string[],\n        api: string,\n        data: any,\n        callFunc: IHttpCallback\n    ) {\n        this.host = host;\n        this.host_backup = host_backup;\n        this.api = api;\n        this.data = data;\n        this.request_type = REQUEST_TYPE.POST;\n        this.callFunc = callFunc;\n\n        this.request(host, api, data);\n    }\n\n    public get(\n        host: string,\n        host_backup: string[],\n        api: string,\n        data: any,\n        callFunc: IHttpCallback\n    ) {\n        this.host = host;\n        this.host_backup = host_backup;\n        this.api = api;\n        this.data = data;\n        this.request_type = REQUEST_TYPE.GET;\n        this.callFunc = callFunc;\n\n        if (!PlatformUtil.getInstance().isOnline()) {\n            this.onError(\"offline\");\n            return;\n        }\n        this.request(host, api, data);\n    }\n}\n\nexport { HttpRequestJson };\n","import Flavor from \"../conf/Flavor\";\nimport CryptMgr from \"../crypt/CryptMgr\";\nimport Lighter from \"../services/Lighthouse/Lighter\";\nimport { LighthouseProto } from \"../services/Lighthouse/proto/LighthouseProto\";\nimport { lodash } from \"../utils/NpmExport\";\nimport { PlatformUtil } from \"../platform/PlatformUtil\";\nimport { ProjectInfo } from \"../conf/ProjectInfo\";\n\nexport default class HttpRequestUtil {\n    private static _instance: HttpRequestUtil = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new HttpRequestUtil();\n        }\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    private buildSign(req_plain: any, ts: number) {\n        const sign = CryptMgr.getInstance().md5_digest(req_plain, ts);\n        return sign;\n    }\n\n    public encrypt_data(req_plain) {\n        let req_encrypted = CryptMgr.getInstance().aes_encrypt(req_plain);\n        return req_encrypted;\n    }\n\n    public decrypt_response(response) {\n        return CryptMgr.getInstance().aes_decrypt(response);\n    }\n\n    public buildFullUrl(host: string, api: string, req_plain: any) {\n        if (host) {\n            let prefixIndex = host.indexOf(\"https\");\n            if (prefixIndex < 0) {\n                host = \"https://\" + host;\n            }\n            if (host.charAt(host.length - 1) == \"/\") {\n                host = host.substring(0, host.length - 1);\n            }\n        }\n        if (api.charAt(0) != \"/\") {\n            api = \"/\" + api;\n        }\n\n        let ts = new Date().getTime();\n        let sign = this.buildSign(req_plain, ts);\n        let gameVersion = ProjectInfo.getInstance().GAME_VERSION;\n\n        const queryParams = lodash\n            .chain(\n                lodash.toPairs({\n                    aid: CommonDepend.AppParamManager.getDeviceID(),\n                    code: Flavor.Country.code,\n                    lan: Flavor.Language.curLanguage,\n                    svn: PlatformUtil.getInstance().getSvn(),\n                    svc: PlatformUtil.getInstance().getSystemVersionCode() || 1,\n                    cvc: PlatformUtil.getInstance().getClientVersionCode() || 1, // client(native) version code\n                    cvn: gameVersion, // cocos version name\n                    chn: CommonDepend.AppParamManager.getChn() || \"unknown\",\n                    pkg: CommonDepend.AppParamManager.getPackageName(),\n                    app: CommonDepend.AppParamManager.getAppName(),\n                    ts,\n                    sign,\n                })\n            )\n            .filter(([key, value]) => value !== undefined)\n            .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n            .reduce((pre, cur) => `${pre}&${cur}`)\n            .value();\n\n        let fullUrl = host + api;\n        fullUrl += fullUrl.includes(\"?\") ? \"&\" : \"?\" + queryParams;\n\n        return fullUrl;\n    }\n\n    public canRetryWithHostBackup(host_backup: string[]) {\n        return host_backup.length > 0 ? true : false;\n    }\n\n    public buildHeader(reqHeader: ReqHeader) {\n        let now = new Date().getTime();\n        let curr_time = now + CommonDepend.DateUtils.getTimeDiff();\n        reqHeader.timestamp = parseInt(curr_time.toString());\n        let user_id = CommonDepend.UserManager.uid;\n        let token = CommonDepend.UserManager.token;\n\n        reqHeader.user_id = user_id;\n        reqHeader.auth_token = token.toString();\n        reqHeader.brand_code = CommonDepend.AppParamManager.getBrandCode();\n        return reqHeader;\n    }\n\n    public reBuildReq(req_header, req_prototype, req_plain) {\n        let req = req_prototype.deserializeBinary(req_plain);\n        let newHeader = this.buildHeader(req_header);\n        req.header = newHeader;\n        let new_req_plain = req.serializeBinary();\n        return new_req_plain;\n    }\n}\n","import { ApiErrorCode } from \"../conf/ApiErrorCode\";\nimport Lighter from \"../services/Lighthouse/Lighter\";\nimport { LighthouseProto } from \"../services/Lighthouse/proto/LighthouseProto\";\nimport HttpRequestUtil from \"./HttpRequestUtil\";\nimport { EVENT_CODE } from \"../services/Lighthouse/proto/EventCode\";\nimport Listener from \"../utils/Listener\";\nimport { CoreEvents } from \"../event/CoreEvents\";\nimport { PlatformUtil } from \"../platform/PlatformUtil\";\n\nclass HttpRequest {\n    private static readonly timeout: number = 5000;\n    private static readonly businessTimeout: number = 10000;\n\n    private xhr: XMLHttpRequest;\n    private timer: NodeJS.Timeout;\n\n    private host: string;\n    private host_backup: string[];\n    private api: string;\n    private protoInfo: IProtoInfo;\n    private callFunc: IHttpCallback;\n\n    constructor() { }\n\n    private retryWithHostBackup(type: string) {\n        clearTimeout(this.timer);\n        let canRetry: boolean = HttpRequestUtil.getInstance().canRetryWithHostBackup(\n            this.host_backup\n        );\n        if (canRetry) {\n            this.protoInfo.req_plain = HttpRequestUtil.getInstance().reBuildReq(\n                this.protoInfo.req_header,\n                this.protoInfo.req_prototype,\n                this.protoInfo.req_plain\n            );\n            if (this.host_backup.length > 0) {\n                this.host && Listener.send(CoreEvents.SWITCH_HOST, this.host);\n                this.host = this.host_backup.shift();\n            }\n            this.xhr = null;\n            this.post_protobuf(this.host, this.api, this.protoInfo.req_plain);\n        } else {\n            this.onError(type);\n        }\n    }\n\n    private onError(type: \"ontimeout\" | \"onerror\" | \"offline\" | string) {\n        switch (type) {\n            case \"ontimeout\":\n                this.callFunc?.error?.({ code: ApiErrorCode.TIMEOUT });\n                break;\n            case \"onerror\":\n                this.callFunc?.error?.({ code: ApiErrorCode.HTTP_ERROR });\n                break;\n            case \"offline\": {\n                this.callFunc?.error?.({ code: ApiErrorCode.OFFLINE });\n                break;\n            }\n        }\n    }\n\n    private post_protobuf(host: string, api: string, req_plain: any) {\n        let self = this;\n        let url = HttpRequestUtil.getInstance().buildFullUrl(host, api, req_plain);\n\n        let data = HttpRequestUtil.getInstance().encrypt_data(req_plain);\n\n        if (self.xhr == null) {\n            self.xhr = new XMLHttpRequest();\n        }\n        self.xhr.open(\n            \"POST\",\n            url +\n            `&eid=${Lighter.getInstance().trackStart(\n                url,\n                LighthouseProto.Events.EventType.HTTP_REQ\n            )}`,\n            true\n        );\n\n        self.xhr.onreadystatechange = () => {\n            if (self.xhr.readyState == 4) {\n                if (self.xhr.status == 200) {\n                    Lighter.getInstance().trackEnd(\n                        url,\n                        EVENT_CODE.RequestSuccess,\n                        url.split(\"?\")[0]\n                    );\n                    let server_req_plain = null;\n                    try {\n                        server_req_plain = HttpRequestUtil.getInstance().decrypt_response(\n                            self.xhr.response\n                        );\n                    } catch (err) {\n                        CC_DEBUG && cc.log(\"HttpRequest: aes_decrypt fail: \" + self.api);\n                        return;\n                    }\n                    let resp = null;\n                    try {\n                        resp = self.protoInfo.resp_prototype.deserializeBinary(server_req_plain);\n                    } catch (err) {\n                        CC_DEBUG && cc.log(\"HttpRequest: deserializeBinary fail: \", self.api);\n                        return;\n                    }\n\n                    let respHeader = resp.header;\n                    let code = respHeader.code || 0;\n                    // to do 对时\n                    // let timestamp = respHeader.getTimestamp();\n                    // CommonDepend.DateUtils.checkTimestampDiff(timestamp);\n\n                    // http response log\n                    // let maxLoglen = 600;\n                    let respJson = resp.toObject();\n                    // let responseLog = JSON.stringify(respJson);\n                    // let responseLogLength = responseLog.length;\n                    // let responseLogUnit = Math.ceil(responseLogLength / maxLoglen);\n                    if (CC_DEBUG) {\n                        CC_DEBUG && cc.log(\"HttpRequest: \", self.api);\n                        CC_DEBUG && cc.log(respJson);\n                    }\n                    // for (let i = 0; i < responseLogUnit; i++) {\n                    //     cc.log(responseLog.slice(i * maxLoglen, i * maxLoglen + maxLoglen));\n                    // }\n\n                    if (self.callFunc) {\n                        if (code == 0) {\n                            self.callFunc.success && self.callFunc.success(resp.data);\n                        } else {\n                            self.callFunc.error && self.callFunc.error(respHeader);\n                        }\n                    }\n                } else {\n                    Lighter.getInstance().trackEnd(\n                        url,\n                        EVENT_CODE.RequestFailure,\n                        url.split(\"?\")[0]\n                    );\n                    if (self.xhr.status) {\n                        this.callFunc.error &&\n                            this.callFunc.error({ code: ApiErrorCode.HTTP_ERROR });\n                        CC_DEBUG && cc.log(\"HttpRequest: httpStatus=\", self.xhr.status, self.api);\n                    }\n                }\n            }\n        };\n        self.xhr.ontimeout = (event) => {\n            Lighter.getInstance().trackEnd(url, EVENT_CODE.RequestTimeout, url.split(\"?\")[0]);\n\n            CC_DEBUG && cc.log(\"HttpRequest: ontimeout\", url);\n            self.retryWithHostBackup(\"ontimeout\");\n        };\n        self.xhr.onerror = (event) => {\n            Lighter.getInstance().trackEnd(url, EVENT_CODE.RequestFailure, url.split(\"?\")[0]);\n            CC_DEBUG && cc.log(\"HttpRequest: onerror\", url);\n            self.retryWithHostBackup(\"onerror\");\n        };\n        self.timer = setTimeout(() => {\n            self.xhr.abort();\n            clearTimeout(self.timer);\n        }, HttpRequest.businessTimeout);\n\n        self.xhr.setRequestHeader(\"content-type\", \"application/x-protobuf\");\n        self.xhr.responseType = \"arraybuffer\";\n        self.xhr.timeout = HttpRequest.timeout;\n\n        self.xhr.send(data);\n    }\n\n    public post(\n        host: string,\n        host_backup: string[],\n        api: string,\n        protoInfo: IProtoInfo,\n        callFunc: IHttpCallback\n    ) {\n        this.host = host;\n        this.host_backup = host_backup;\n        this.api = api;\n        this.protoInfo = protoInfo;\n        this.callFunc = callFunc;\n\n        if (!PlatformUtil.getInstance().isOnline()) {\n            this.onError(\"offline\");\n            return;\n        }\n\n        this.post_protobuf(host, api, protoInfo.req_plain);\n    }\n}\n\nexport { HttpRequest };\n","export namespace Injector {\n    class Injector {\n        private readonly providerMap: Map<any, any> = new Map();\n        private readonly instanceMap: Map<any, any> = new Map();\n        public setProvider(key: any, value: any): void {\n            if (!this.providerMap.has(key)) this.providerMap.set(key, value);\n        }\n        public getProvider(key: any): any {\n            return this.providerMap.get(key);\n        }\n        public setInstance(key: any, value: any): void {\n            if (!this.instanceMap.has(key)) this.instanceMap.set(key, value);\n        }\n        public getInstance(key: any): any {\n            if (this.instanceMap.has(key)) return this.instanceMap.get(key);\n            return null;\n        }\n        public setValue(key: any, value: any): void {\n            if (!this.instanceMap.has(key)) this.instanceMap.set(key, value);\n        }\n    }\n\n    const rootInjector = new Injector();\n\n    const createListKey = Symbol(\"createList\");\n\n    export function Injectable(): (_constructor: any) => any {\n        return function (_constructor: any): any {\n            class newClass extends _constructor {\n                static [createListKey]: Function[];\n                constructor(...args) {\n                    super(...args);\n                    rootInjector.setInstance(newClass, this);\n                    newClass[createListKey]?.forEach((call) => {\n                        call();\n                    });\n                }\n            }\n\n            rootInjector.setProvider(newClass, newClass);\n            return newClass;\n        };\n    }\n\n    type IInjectOptions = { onCreate?: () => void; create?: boolean };\n\n    export function Inject(propertyType: any);\n    export function Inject(propertyType: any, options?: IInjectOptions);\n\n    export function Inject(\n        propertyType: any,\n        options?: IInjectOptions\n    ): (_constructor: any, propertyName: string) => any {\n        return function (target: any, propertyName: string): any {\n            let create = (options as IInjectOptions)?.create ?? true;\n            let onCreate = (options as IInjectOptions)?.onCreate ?? undefined;\n\n            if (onCreate) {\n                let list = propertyType[createListKey] || [];\n                list.push(onCreate);\n                propertyType[createListKey] = list;\n            }\n\n            return Object.defineProperty(target, propertyName, {\n                get: () => {\n                    const injector: Injector = rootInjector;\n                    let providerInsntance = injector.getInstance(propertyType);\n                    if (!providerInsntance && create) {\n                        const providerClass = injector.getProvider(propertyType);\n                        providerInsntance = new providerClass();\n                    }\n                    return providerInsntance;\n                },\n                set: () => {},\n            });\n        };\n    }\n\n    export function get<T>(propertyType: new () => T): T {\n        const injector: Injector = rootInjector;\n        let providerInsntance = injector.getInstance(propertyType);\n        if (!providerInsntance) {\n            const providerClass = injector.getProvider(propertyType);\n            providerInsntance = new providerClass();\n        }\n        return providerInsntance;\n    }\n}\n","export function setInstance(ctor) {\n    return class newCtor extends ctor {\n        private static _instance = null;\n        private static getInstance() {\n            if (!this._instance) {\n                this._instance = new newCtor();\n            }\n            if (CC_DEBUG) {\n                window[`obs_${ctor.name}_instance`] = this._instance;\n            }\n            return this._instance;\n        }\n    };\n}\n\nexport function Instance<T>(ctor: { new (): T }): T {\n    return ctor[\"getInstance\"]();\n}\n","import { LanguageType } from \"../LanguageType\";\nimport { SkinType } from \"../SkinType\";\nimport { VersionType } from \"../VersionType\";\nimport { CountryCodeEnum } from \"./CountryCodeEnum\";\nimport { CurrencyEnum } from \"./CurrencyEnum\";\nimport { Domain } from \"./Domain\";\nimport { LighterEnum } from \"./LighterEnum\";\n\ninterface IntConfInter {\n    skin: SkinType;\n    country: CountryCodeEnum;\n    currency: CurrencyEnum;\n    lan: LanguageType;\n    version: string;\n    brand: string;\n    domin: string[];\n    time_zone_diff: number;\n    lighter: LighterEnum;\n    countryCode?: number;\n}\n\nexport let IntConf: { [index: string]: IntConfInter } = {\n    [VersionType.LIGHT]: {\n        skin: SkinType.LIGHT, //印度\n        country: CountryCodeEnum.IN, //印度\n        currency: CurrencyEnum.IN_LUBI, //印度卢比\n        lan: LanguageType.EN, //英语\n        version: \"1.0.0\",\n        brand: \"light\",\n        domin: Domain.IN_TEST,\n        time_zone_diff: 5.5 * 3600 * 1000,\n        lighter: LighterEnum.TEST,\n        countryCode: 91,\n    },\n\n    [VersionType.LIGHT_ONLINE]: {\n        skin: SkinType.LIGHT, //印度\n        country: CountryCodeEnum.IN, //印度\n        currency: CurrencyEnum.IN_LUBI, //印度卢比\n        lan: LanguageType.EN, //英语\n        version: \"1.0.0\",\n        brand: \"mega\",\n        domin: Domain.IN_ONLINE,\n        time_zone_diff: 5.5 * 3600 * 1000,\n        lighter: LighterEnum.ONLINE,\n        countryCode: 91,\n    },\n\n    [VersionType.WORLD_CUP]: {\n        skin: SkinType.WORLD_CUP, //印度\n        country: CountryCodeEnum.BR, //巴西\n        currency: CurrencyEnum.BR_COIN, //巴西币\n        lan: LanguageType.PT, //葡萄牙语\n        version: \"1.0.0\",\n        brand: \"tk\",\n        domin: Domain.BR_TEST,\n        time_zone_diff: -3 * 3600 * 1000,\n        lighter: LighterEnum.ONLINE,\n        countryCode: 55,\n    },\n};\n","export function IntervalsDecorator(\n    target: Object,\n    propertyKey: string,\n    descriptor: TypedPropertyDescriptor<any>\n): TypedPropertyDescriptor<any> {\n    const { constructor } = target;\n    let oldValue = descriptor.value;\n    const timeKey = Symbol(propertyKey);\n\n    descriptor.value = function (...args) {\n        const startTime = this?.[timeKey] ?? 0;\n        if (Date.now() - startTime < 1000) {\n            return;\n        }\n        this[timeKey] = Date.now();\n        return oldValue.call(this, ...args);\n    };\n    return descriptor;\n}\n","import { BundleMgr } from \"../../bd/BundleMgr\";\n\nexport class LabelManager {\n    private static _instance: LabelManager = null;\n\n    // private sansProRegularFont: IBundleNameDesc = {\n    //     bundleName: \"common\",\n    //     resDesc: BundleResConfig.common.loadOnDemand.ssp_regular,\n    // };\n\n    // private sansProBoldFont: IBundleNameDesc = {\n    //     bundleName: \"common\",\n    //     resDesc: BundleResConfig.common.loadOnDemand.ssp_bold,\n    // };\n\n    // private SansProSemiBoldFont: IBundleNameDesc = {\n    //     bundleName: \"common\",\n    //     resDesc: BundleResConfig.common.loadOnDemand.ssp_semibold,\n    // };\n\n    private sourceSansProRegularFont: cc.Font;\n    private sourceSansProBoldFont: cc.Font;\n    private sourceSansProSemiBoldFont: cc.Font;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new LabelManager();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public initLabelManager() {\n        let self = this;\n        self.initFont();\n    }\n\n    public createLabelNode(name?) {\n        let node = new cc.Node(\"label_\" + name || \"label\");\n        node.addComponent(cc.Label);\n        node.name = name || \"label\";\n        return node;\n    }\n\n    public setLabelOutline(node, color, width = 1) {\n        let self = this;\n        let labelOutline = self.getLabelOutline(node);\n        if (cc.isValid(labelOutline)) {\n            labelOutline.color = cc.color().fromHEX(color);\n            labelOutline.width = width;\n        }\n    }\n\n    public getLabelOutline(node) {\n        if (cc.isValid(node)) {\n            let destNode = node;\n            if (node instanceof cc.Label) {\n                destNode = node.node;\n            } else {\n                destNode = node;\n            }\n\n            let result = destNode.getComponent(cc.LabelOutline);\n            if (!result) {\n                result = destNode.addComponent(cc.LabelOutline);\n            }\n            return result;\n        }\n        return node;\n    }\n\n    public setLabelColor(label, hexColor) {\n        if (cc.isValid(label)) {\n            if (label instanceof cc.Node) {\n            } else if (label instanceof cc.Label) {\n                label = label.node;\n            }\n            if (cc.isValid(label)) {\n                label.color = cc.color().fromHEX(hexColor);\n            }\n        }\n    }\n\n    public setLabelString(label, labelTxt) {\n        if (cc.isValid(label)) {\n            if (label instanceof cc.Label) {\n            } else if (label instanceof cc.Node) {\n                label = label.getComponent(cc.Label);\n            }\n            if (cc.isValid(label)) {\n                label.string = labelTxt;\n            }\n        }\n    }\n\n    public getLabelString(label) {\n        if (cc.isValid(label)) {\n            if (label instanceof cc.Label) {\n                return label.string;\n            } else if (label instanceof cc.Node) {\n                return label.getComponent(cc.Label).string;\n            }\n        }\n        return \"\";\n    }\n\n    private initFont() {\n        // this.getSourceSansProRegularFontBundle();\n        // this.getSourceSansProBoldFontBundle();\n        // this.getSourceSansProSemiBoldFontBundle();\n    }\n\n    // private getSourceSansProRegularFontBundle() {\n    //     this.getFontBundle(this.sansProRegularFont.resDesc, (fontAsset) => {\n    //         this.sourceSansProRegularFont = fontAsset;\n    //     });\n    // }\n\n    // private getSourceSansProBoldFontBundle() {\n    //     this.getFontBundle(this.sansProBoldFont.resDesc, (fontAsset) => {\n    //         this.sourceSansProBoldFont = fontAsset;\n    //     });\n    // }\n\n    // private getSourceSansProSemiBoldFontBundle() {\n    //     this.getFontBundle(this.SansProSemiBoldFont.resDesc, (fontAsset) => {\n    //         this.sourceSansProSemiBoldFont = fontAsset;\n    //     });\n    // }\n\n    public setFont(label, font, spacingX?) {\n        if (cc.isValid(label)) {\n            if (label instanceof cc.Label) {\n            } else if (label instanceof cc.Node) {\n                label = label.getComponent(cc.Label);\n            }\n            if (cc.isValid(label)) {\n                label.font = font;\n                if (spacingX || spacingX == 0) {\n                    label.spacingX = spacingX;\n                }\n            }\n        }\n    }\n\n    public getFontBundle(resDesc: IResDescribe, callback?) {\n        BundleMgr.getInstance().loadResFromBundle(resDesc, (res: any) => {\n            if (res) {\n                if (typeof callback === \"function\") {\n                    callback(res);\n                }\n            }\n        });\n    }\n\n    public loadFontBundle(label, resDesc: IResDescribe, spacingX?, callback?) {\n        BundleMgr.getInstance().loadResFromBundle(resDesc, (res: any) => {\n            if (res && cc.isValid(label)) {\n                if (label instanceof cc.Label) {\n                } else if (label instanceof cc.Node) {\n                    label = label.getComponent(cc.Label);\n                }\n                if (cc.isValid(label)) {\n                    label.font = res;\n                    if (spacingX || spacingX == 0) {\n                        label.spacingX = spacingX;\n                    }\n                    if (typeof callback === \"function\") {\n                        callback();\n                    }\n                }\n            }\n        });\n    }\n}\n","import Flavor from \"../conf/Flavor\";\nimport { ProjectInfo } from \"../conf/ProjectInfo\";\nimport { Instance, setInstance } from \"../utils/decorators/InstanceClassDecorator\";\nimport { lodash } from \"../utils/NpmExport\";\nimport { Tools } from \"../utils/Tools\";\nimport LanguageObserver from \"./LanguageObserver\";\n\n@setInstance\nexport default class LanguageCenter {\n    private map: Map<string, LG.ILanguageConfigs> = new Map();\n\n    public applyLanguage(bundleName: string, language: LG.ILanguageConfigs) {\n        let bundle = this.toBundleName(bundleName);\n        if (bundle) {\n            this.map.set(bundle, lodash.merge({}, this.map.get(bundle), language));\n        }\n    }\n\n    public getLanguage4Bundle(bundle: string) {\n        bundle = this.toBundleName(/<?(?<bundle>[^>]*)>?/.exec(bundle)?.groups?.bundle);\n        return this.applyPorxy(this.map.get(bundle)?.[Instance(LanguageObserver).get()] ?? {});\n    }\n\n    applyPorxy(object: LG.ILanguageConfig, begin: boolean = false) {\n        if (!object) {\n            return;\n        }\n        const proxy = new Proxy(object, {\n            get: (target: LG.ILanguageConfig, p: string, receiver: any): any => {\n                let result: any = target[p];\n                if (typeof result === \"string\") {\n                    result = Tools.formatStringInArgs(result, {\n                        CUR: ProjectInfo.getInstance().CurrentIntConf.currency,\n                        _skin_: Flavor.Skin.curMainSkin.split(\"-\")[1],\n                    });\n                    return result;\n                } else if (typeof result === \"number\") {\n                    return result;\n                } else if (typeof result === \"object\") {\n                    return this.applyPorxy(result);\n                } else {\n                    return result;\n                }\n            },\n        });\n        return proxy;\n    }\n\n    public toBundleName(bundle: string) {\n        return lodash.toLower(bundle.split(\"_\").join(\"\"));\n    }\n}\n","import Flavor from \"../conf/Flavor\";\nimport { LanguageType } from \"../conf/LanguageType\";\nimport { LocalStorageMgr } from \"../storage/LocalStorageMgr\";\nimport LocalStorageObserver from \"../utils/class/LocalStorageObserver\";\nimport { setInstance } from \"../utils/decorators/InstanceClassDecorator\";\n\n@setInstance\nexport default class LanguageObserver extends LocalStorageObserver<LanguageType> {\n    protected read(): LanguageType {\n        return LocalStorageMgr.getInstance().readLanguage() || Flavor.Language.curLanguage;\n    }\n    protected save(data: LanguageType) {\n        LocalStorageMgr.getInstance().saveLanguage(data);\n    }\n}\n","export enum LanguageType {\n    VI = \"vi\",\n    EN = \"en\",\n    PT = \"pt\",\n    ZH = \"zh\",\n    ID = \"id\",\n    HI = \"hi\",\n}\n","/**\n * 此类专门处理启动初始化, 在程序入口 Launcher启动场景onload时调用\n * 1. 初始化一些全局变量(CocosSkin, Cocos20)\n * 2. 初始化一些CommonDepend\n * ...\n */\nimport { CommonDependManager } from \"../../core/depend/CommonDependManager\";\nimport { UIDependManager } from \"../../core/depend/UIDependManager\";\n\nclass LauncherInit {\n    public static __init() {\n        this.initDepend();\n        if (cc.sys.isNative) {\n            this.initNativeUtil();\n        } else {\n            this.initH5Util();\n        }\n        this.initLocalStorage();\n        this.initAppParamManager();\n        this.initCommonSocketModel();\n        this.initAudio();\n        this.initDebugUtil();\n        this.initTrackConfig();\n        this.startNetworkWatch();\n\n        CC_DEBUG && cc.log(\"Game Version：\" + CommonDepend.ProjectInfo.GAME_VERSION_V);\n    }\n\n    private static initDepend() {\n        CommonDependManager.getInstance().initCommon(); // 初始化CommonDepend\n        UIDependManager.getInstance().initUIDepend(); // 初始化UIDepend\n    }\n\n    private static initNativeUtil() {\n        // TODO kerry\n    }\n\n    private static initH5Util() {\n       // CommonDepend.H5Util.init();\n    }\n\n    private static initCommonSocketModel() {\n        //CommonDepend.CommonSocketModel.init();\n    }\n\n    private static initTrackConfig() {\n        //CommonDepend.AdjustTrack.initAdjustConf();\n    }\n\n    private static initAudio() {\n       // CommonDepend.AudioManager.init();\n    }\n\n    private static initLocalStorage() {\n        CommonDepend.LocalStorageMgr.init();\n    }\n\n    private static initAppParamManager() {\n        //CommonDepend.AppParamManager.initParam();\n    }\n\n    private static initDebugUtil() {}\n\n    private static startNetworkWatch() {}\n}\n\nexport default LauncherInit;\n","import Time2Value from \"../../core/utils/class/Time2Value\";\nimport Listener from \"../../core/utils/Listener\";\nimport { lodash } from \"../../core/utils/NpmExport\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LauncherLoading extends cc.Component {\n    private readonly MAX_LAUNCH_PROGRESS = 20;\n    private readonly MAX_COMMON_PROGRESS = 80;\n    private readonly MAX_WALLET_PROGRESS = 0;\n\n    _launch: number = 0;\n    _common: number = 0;\n    _wallet: number = 0;\n    private time2Value: Time2Value = null;\n\n    public onSuccess: Promise<void> = null;\n\n    onLoad() {\n        this.time2Value = new Time2Value(1, 1);\n        this.onSuccess = new Promise((resolve) => {\n            this.time2Value.success = () => {\n                resolve();\n            };\n        });\n    }\n\n    public updateProgress() {\n        let progress = lodash.sum([this._launch, this._common, this._wallet]) / 100;\n        this.time2Value.setValue(progress, (value) => {\n            if (cc.isValid(this)) this.getComponent(cc.ProgressBar).progress = value;\n        });\n        return Math.min(progress, 1);\n    }\n\n    public launchProgress(value: number) {\n        this._launch = value * this.MAX_LAUNCH_PROGRESS;\n        return this.updateProgress();\n    }\n\n    public commomProgress(value: number) {\n        this._common = value * this.MAX_COMMON_PROGRESS;\n        return this.updateProgress();\n    }\n\n    public walletProgress(value: number) {\n        this._wallet = value * this.MAX_WALLET_PROGRESS;\n        return this.updateProgress();\n    }\n}\n","import LauncherInit from \"./LauncherInit\";\nimport BundleCenter from \"../../core/bd/BundleCenter\";\nimport { BundleNames } from \"../../core/conf/BundleNames\";\nimport LauncherLoading from \"./LauncherLoading\";\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Launcher extends cc.Component {\n    @property(cc.Label)\n    versionLb: cc.Label = null;\n    @property(cc.Node)\n    load: cc.Node = null;\n    @property(cc.Node)\n    loadbar: cc.Node = null;\n    onLoad() {\n        !CC_PREVIEW && LauncherInit.__init();\n        BundleCenter.getInstance().load(BundleNames.LOADING, (cur, total) => {\n            this.getComponentInChildren(LauncherLoading)?.launchProgress(cur / total);\n        });\n    }\n\n    protected update(dt: number): void {\n        this.loadbar.x = this.load.x + this.load.width - 50;\n    }\n}\nif (CC_PREVIEW) {\n    LauncherInit.__init();\n}\n","import { createDefaultSetter, decorate } from \"./DecoratorsUtils\";\n\nconst { defineProperty } = Object;\n\nfunction handleDescriptor(target, key, descriptor) {\n    const { configurable, enumerable, initializer, value } = descriptor;\n    return {\n        configurable,\n        enumerable,\n\n        get() {\n            // This happens if someone accesses the\n            // property directly on the prototype\n            if (this === target) {\n                return;\n            }\n\n            const ret = initializer ? initializer.call(this) : value;\n\n            defineProperty(this, key, {\n                configurable,\n                enumerable,\n                writable: true,\n                value: ret,\n            });\n\n            return ret;\n        },\n\n        set: createDefaultSetter(key),\n    };\n}\n\nexport default function lazyInitialize(...args) {\n    return decorate(handleDescriptor, args);\n}\n","export enum LighterEnum {\n    DEV = \"https://lh.easycodedev.com\",\n    TEST = \"https://lh.zenam.net\",\n    ONLINE = \"https://lh.cqzhdz.com\",\n}\n","import CryptMgr from \"../../crypt/CryptMgr\";\nimport { PlatformUtil } from \"../../platform/PlatformUtil\";\nimport { LighthouseProto } from \"./proto/LighthouseProto\";\nimport { UserManager } from \"../../user/UserManager\";\nimport ProjectConf from \"../../conf/ProjectConf\";\nimport { ProjectInfo } from \"../../conf/ProjectInfo\";\nimport { H5Util } from \"../../platform/H5Util\";\nimport { PlatformType } from \"../../platform/PlatformType\";\n\n/**\n * lh.easycodedev.com\n * lh.zenam.net\n * https://lh.cqzhdz.com/\n */\n\nconst INTERVAL_CHECK_EVENT_QUEUE = 60000; // check event queue every 60s\nconst MAX_LENGTH_EVENT_QUEUE = 32;\nconst TIMEOUT = 10000;\n\n/**\n * lighthouse tracker\n * 1, put undone event into map\n * 2, transfer event to queue if done\n * 3, check queue periodically and fire once over max length\n */\nexport default class Lighter {\n    private static sInstance: Lighter = null;\n\n    private _undoneEventMap: Map<string, ProtoObject<LighthouseProto.Events.Event>> = new Map();\n    private _eventQueue: Array<object> = [];\n\n    /* static */\n    public static getInstance() {\n        if (this.sInstance == null) {\n            this.sInstance = new Lighter();\n        }\n        return this.sInstance;\n    }\n\n    private constructor() {\n        setInterval(this._checkEventQueue.bind(this), INTERVAL_CHECK_EVENT_QUEUE);\n    }\n\n    /* public */\n    /**\n     * @param key use full url for http request (POST only) / use ws host for websocket\n     * @param type\n     */\n    public trackStart(key: string, type: LighthouseProto.Events.EventType) {\n        if (this._undoneEventMap.has(key)) {\n            //console.log(\"[Lighthouse] track start, missing key = \" + key);\n            return;\n        }\n\n        let eid = CryptMgr.getInstance().md5(key);\n        //console.log(\"[Lighthouse] track start, key = \" + key + \", eid = \" + eid);\n        this._undoneEventMap.set(key, {\n            eid: eid,\n            ts: new Date().getTime(),\n            type\n        });\n\n        return eid;\n    }\n\n    /**\n     *\n     * @param key use full url for http request (POST only) / use ws host for websocket\n     * @param code see EventCode.ts\n     * @param desc url without query part\n     */\n    public trackEnd(key: string, code: number, desc: string) {\n        if (!this._undoneEventMap.has(key)) {\n            //console.log(\"[Lighthouse] track end, missing key = \" + key);\n            return;\n        }\n\n        //console.log(\"[Lighthouse] track end, key = \" + key + \", code = \" + code);\n        let event: ProtoObject<LighthouseProto.Events.Event> = this._undoneEventMap.get(key);\n        event.code = code;\n        let finishTs = new Date().getTime();\n        event.duration = finishTs - event.ts;\n        event.desc = desc;\n        this._undoneEventMap.delete(key);\n        this._eventQueue.push(event);\n    }\n\n    public fire() {\n        //console.log(\"[Lighthouse] fire event queue = \" + JSON.stringify(this._eventQueue));\n        let events = LighthouseProto.Events.fromObject({\n            ua: PlatformUtil.getInstance().getUserAgent(),\n            user_id: UserManager.getInstance().user_id,\n            events: this._eventQueue\n        });\n\n        this._send(events.serializeBinary());\n\n        // clear event queue\n        this._eventQueue = [];\n    }\n\n    /* private */\n    private _checkEventQueue() {\n        //console.log(\"[Lighthouse] event queue length = \" + this._eventQueue.length);\n        if (this._eventQueue.length >= MAX_LENGTH_EVENT_QUEUE) {\n            this.fire();\n        }\n    }\n\n    private _send(data) {\n        let httpRequest = new XMLHttpRequest();\n        let lighterHost = PlatformUtil.getInstance().getLighterHost();\n        if (!lighterHost) {\n            this.log(\"[Lighthouse] host is empty, will not upload data\");\n            return;\n        }\n        //配置只有scheme://host，因此要自行加上path\n        let lighterAddr = lighterHost + \"/v1/\";\n\n        this.log(\"[Lighthouse] upload to address: \" + lighterAddr);\n        httpRequest.open(\"POST\", lighterAddr, true);\n        // httpRequest.setRequestHeader('content-type', 'application/x-protobuf');\n        httpRequest.timeout = TIMEOUT;\n        httpRequest.onload = (event) => {\n            this.log(\n                \"[Lighthouse] events uploaded successfully, status = \" + httpRequest.status\n            );\n            if (httpRequest.status == 200) {\n                CommonDepend.LocalStorageMgr.saveEverUploadLighthouse(\"true\");\n            }\n        };\n        httpRequest.ontimeout = (event) => {\n            this.log(\"[Lighthouse] events uploading timeout, status = \" + httpRequest.status);\n        };\n        httpRequest.onerror = (event) => {\n            this.log(\"[Lighthouse] events uploading error, status = \" + httpRequest.status);\n        };\n        httpRequest.send(data);\n        this.log(\"[Lighthouse] fired\");\n    }\n\n\n    public trackDeviceInfoForLighthouse() {\n        let everUpload = CommonDepend.LocalStorageMgr.getEverUploadLighthouse();\n        if (everUpload && everUpload == \"true\") {\n            this.log(\n                \"[Lighthouse] we have uploaded track before, will not upload again \"\n            );\n            return;\n        }\n        let deviceInfo = PlatformUtil.getInstance().getDeviceInfoForLighthouse();\n        this.log(\"[Lighthouse] track DeviceInfoForLighthouse: \" + deviceInfo);\n        let event = new LighthouseProto.Events.Event();\n        event.code = 0;\n        let finishTs = new Date().getTime();\n        event.ts = finishTs;\n        event.type = LighthouseProto.Events.EventType.DEVICE_INFO;\n        event.desc = deviceInfo;\n\n        let events = LighthouseProto.Events.fromObject({\n            ua: PlatformUtil.getInstance().getUserAgent(),\n            user_id: UserManager.getInstance().user_id,\n            events: [event]\n        });\n\n        this._send(events.serializeBinary());\n    }\n\n    private log(msg) {\n        PlatformUtil.getInstance().nativeLog(null, msg);\n    }\n}\n","/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.19.4\n * source: int/lighthouse/api.proto\n * git: https://github.com/thesayyn/protoc-gen-ts */\n\nimport { pb_1 } from \"../../../utils/NpmExport\";\n\n/*\n此处请修改为Creator NpmExport路径\n请注意路径的层级\n */\nexport namespace LighthouseProto {\n    export class Events extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(data?: any[] | {\n            ua?: string;\n            user_id?: number;\n            events?: Events.Event[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"ua\" in data && data.ua != undefined) {\n                    this.ua = data.ua;\n                }\n                if (\"user_id\" in data && data.user_id != undefined) {\n                    this.user_id = data.user_id;\n                }\n                if (\"events\" in data && data.events != undefined) {\n                    this.events = data.events;\n                }\n            }\n        }\n        get ua() {\n            return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n        }\n        set ua(value: string) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get user_id() {\n            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;\n        }\n        set user_id(value: number) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get events() {\n            return pb_1.Message.getRepeatedWrapperField(this, Events.Event, 3) as Events.Event[];\n        }\n        set events(value: Events.Event[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 3, value);\n        }\n        static fromObject(data: {\n            ua?: string;\n            user_id?: number;\n            events?: ReturnType<typeof Events.Event.prototype.toObject>[];\n        }): Events {\n            const message = new Events({});\n            if (data.ua != null) {\n                message.ua = data.ua;\n            }\n            if (data.user_id != null) {\n                message.user_id = data.user_id;\n            }\n            if (data.events != null) {\n                message.events = data.events.map(item => Events.Event.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                ua?: string;\n                user_id?: number;\n                events?: ReturnType<typeof Events.Event.prototype.toObject>[];\n            } = {};\n            if (this.ua != null) {\n                data.ua = this.ua;\n            }\n            if (this.user_id != null) {\n                data.user_id = this.user_id;\n            }\n            if (this.events != null) {\n                data.events = this.events.map((item: Events.Event) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.ua.length)\n                writer.writeString(1, this.ua);\n            if (this.user_id != 0)\n                writer.writeInt64(2, this.user_id);\n            if (this.events.length)\n                writer.writeRepeatedMessage(3, this.events, (item: Events.Event) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Events {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Events();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.ua = reader.readString();\n                        break;\n                    case 2:\n                        message.user_id = reader.readInt64();\n                        break;\n                    case 3:\n                        reader.readMessage(message.events, () => pb_1.Message.addToRepeatedWrapperField(message, 3, Events.Event.deserialize(reader), Events.Event));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Events {\n            return Events.deserialize(bytes);\n        }\n    }\n    export namespace Events {\n\n        /**\n         事件类型\n         **/\n        export enum EventType {\n\n            /**\n             http api 请求\n             **/\n            HTTP_REQ = 0,\n\n            /**\n             ws 请求\n             **/\n            WS_REQ = 1,\n\n            /**\n             app 启动收集设备信息\n             **/\n            DEVICE_INFO = 2\n        }\n        export class Event extends pb_1.Message {\n            #one_of_decls: number[][] = [];\n            constructor(data?: any[] | {\n                eid?: string;\n                ts?: number;\n                type?: Events.EventType;\n                code?: number;\n                duration?: number;\n                desc?: string;\n            }) {\n                super();\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"eid\" in data && data.eid != undefined) {\n                        this.eid = data.eid;\n                    }\n                    if (\"ts\" in data && data.ts != undefined) {\n                        this.ts = data.ts;\n                    }\n                    if (\"type\" in data && data.type != undefined) {\n                        this.type = data.type;\n                    }\n                    if (\"code\" in data && data.code != undefined) {\n                        this.code = data.code;\n                    }\n                    if (\"duration\" in data && data.duration != undefined) {\n                        this.duration = data.duration;\n                    }\n                    if (\"desc\" in data && data.desc != undefined) {\n                        this.desc = data.desc;\n                    }\n                }\n            }\n\n            /**\n             事件唯一id，可以用 uuid\n             **/\n            get eid() {\n                return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n            }\n\n            /**\n             事件唯一id，可以用 uuid\n             **/\n            set eid(value: string) {\n                pb_1.Message.setField(this, 1, value);\n            }\n\n            /**\n             Unix Timestamp , ms\n             **/\n            get ts() {\n                return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;\n            }\n\n            /**\n             Unix Timestamp , ms\n             **/\n            set ts(value: number) {\n                pb_1.Message.setField(this, 2, value);\n            }\n            get type() {\n                return pb_1.Message.getFieldWithDefault(this, 3, Events.EventType.HTTP_REQ) as Events.EventType;\n            }\n            set type(value: Events.EventType) {\n                pb_1.Message.setField(this, 3, value);\n            }\n\n            /**\n             事件自定义编码，根据 type 扩展\n             **/\n            get code() {\n                return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;\n            }\n\n            /**\n             事件自定义编码，根据 type 扩展\n             **/\n            set code(value: number) {\n                pb_1.Message.setField(this, 4, value);\n            }\n\n            /**\n             事件经历的时间, ms\n             **/\n            get duration() {\n                return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;\n            }\n\n            /**\n             事件经历的时间, ms\n             **/\n            set duration(value: number) {\n                pb_1.Message.setField(this, 5, value);\n            }\n\n            /**\n             描述\n             **/\n            get desc() {\n                return pb_1.Message.getFieldWithDefault(this, 6, \"\") as string;\n            }\n\n            /**\n             描述\n             **/\n            set desc(value: string) {\n                pb_1.Message.setField(this, 6, value);\n            }\n            static fromObject(data: {\n                eid?: string;\n                ts?: number;\n                type?: Events.EventType;\n                code?: number;\n                duration?: number;\n                desc?: string;\n            }): Event {\n                const message = new Event({});\n                if (data.eid != null) {\n                    message.eid = data.eid;\n                }\n                if (data.ts != null) {\n                    message.ts = data.ts;\n                }\n                if (data.type != null) {\n                    message.type = data.type;\n                }\n                if (data.code != null) {\n                    message.code = data.code;\n                }\n                if (data.duration != null) {\n                    message.duration = data.duration;\n                }\n                if (data.desc != null) {\n                    message.desc = data.desc;\n                }\n                return message;\n            }\n            toObject() {\n                const data: {\n                    eid?: string;\n                    ts?: number;\n                    type?: Events.EventType;\n                    code?: number;\n                    duration?: number;\n                    desc?: string;\n                } = {};\n                if (this.eid != null) {\n                    data.eid = this.eid;\n                }\n                if (this.ts != null) {\n                    data.ts = this.ts;\n                }\n                if (this.type != null) {\n                    data.type = this.type;\n                }\n                if (this.code != null) {\n                    data.code = this.code;\n                }\n                if (this.duration != null) {\n                    data.duration = this.duration;\n                }\n                if (this.desc != null) {\n                    data.desc = this.desc;\n                }\n                return data;\n            }\n            serialize(): Uint8Array;\n            serialize(w: pb_1.BinaryWriter): void;\n            serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.eid.length)\n                    writer.writeString(1, this.eid);\n                if (this.ts != 0)\n                    writer.writeInt64(2, this.ts);\n                if (this.type != Events.EventType.HTTP_REQ)\n                    writer.writeEnum(3, this.type);\n                if (this.code != 0)\n                    writer.writeInt32(4, this.code);\n                if (this.duration != 0)\n                    writer.writeInt32(5, this.duration);\n                if (this.desc.length)\n                    writer.writeString(6, this.desc);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Event {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Event();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.eid = reader.readString();\n                            break;\n                        case 2:\n                            message.ts = reader.readInt64();\n                            break;\n                        case 3:\n                            message.type = reader.readEnum();\n                            break;\n                        case 4:\n                            message.code = reader.readInt32();\n                            break;\n                        case 5:\n                            message.duration = reader.readInt32();\n                            break;\n                        case 6:\n                            message.desc = reader.readString();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary(): Uint8Array {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes: Uint8Array): Event {\n                return Event.deserialize(bytes);\n            }\n        }\n    }\n\n}\n","class Listener extends cc.EventTarget {\n    constructor() {\n        super();\n        window[\"Listener\"] = this;\n    }\n    public send(key: string, arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any): void {\n        return this.emit(key, arg1, arg2, arg3, arg4, arg5);\n    }\n\n    public listen<T extends Function>(\n        type: string,\n        callback: T,\n        target?: any,\n        useCapture?: boolean\n    ): T {\n        return this.on(type, callback, target, useCapture);\n    }\n\n    public listens<T extends Function>(\n        types: string[],\n        callback: T,\n        target?: any,\n        useCapture?: boolean\n    ): T[] {\n        return types.map((type) => this.on(type, callback, target, useCapture));\n    }\n\n    public listenOnce(\n        type: string,\n        callback: (arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) => void,\n        target?: any\n    ): void {\n        return this.once(type, callback, target);\n    }\n\n    public listenOff(type: string, callback?: Function, target?: any): void {\n        return this.off(type, callback, target);\n    }\n\n    public listenOffTarget(target: any) {\n        return this.targetOff(target);\n    }\n}\nexport default new Listener();\n","import { DateUtils } from \"../utils/DateUtils\";\n\nexport type DailyStorage<T extends {}> = {\n    key: string;\n    data: T;\n    time?: number; // 存储/更新 时间\n};\n\nexport class LocalStorageMgr {\n    private static _instance: LocalStorageMgr = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new LocalStorageMgr();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {\n    }\n\n    public init() {\n        this._clearExpiredStorage();\n    }\n\n    public readData(name: string) {\n        let data = cc.sys.localStorage.getItem(\"_int\" + name);\n        return data;\n    }\n\n    public saveData(name: string, value: string) {\n        cc.sys.localStorage.setItem(\"_int\" + name, value);\n    }\n\n    public clearData(name: string) {\n        cc.sys.localStorage.removeItem(\"_int\" + name);\n    }\n\n    /**\n     * 存储用户 id\n     */\n    public readSwitchDevice() {\n        return this.readData(\"_switch_device\");\n    }\n\n    /**\n     * 存储用户 id\n     */\n    public saveUserID(user_id) {\n        if (!user_id) {\n            user_id = 0;\n        }\n        this.saveData(\"_user_id\", \"\" + user_id);\n    }\n\n    public readUserID() {\n        let uid = this.readData(\"_user_id\");\n        if (uid == null || uid == \"null\") {\n            uid = 0;\n        }\n        return \"\" + uid;\n    }\n\n    public clearUserID() {\n        this.clearData(\"_user_id\");\n    }\n\n    /**\n     * 存储用户 token\n     */\n    public saveUserToken(user_token) {\n        this.saveData(\"_token\", user_token);\n    }\n\n    public readUserToken() {\n        return this.readData(\"_token\");\n    }\n\n    public clearUserToken() {\n        this.clearData(\"_token\");\n    }\n\n    /**\n     * 存储用户 UserData\n     */\n    public saveUserDataEvent(data) {\n        for (let k in data) {\n            if (\"userId\" == k) {\n                this.saveData(\"_\" + \"user_id\", \"\" + data[k]);\n            } else {\n                this.saveData(\"_\" + k, \"\" + data[k]);\n            }\n        }\n    }\n\n    /**\n     * 清除登录数据\n     */\n    public clearUserLoginData() {\n        this.clearUserID();\n        this.clearUserToken();\n    }\n\n    /**\n     * app启动参数：包名\n     */\n    public savePackageName(packageName) {\n        this.saveData(\"_app_package_name\", packageName);\n    }\n\n    public readPackageName() {\n        return this.readData(\"_app_package_name\");\n    }\n\n    /**\n     * app启动参数：商户号\n     */\n    public saveMerCode(merCode) {\n        this.saveData(\"_merchant_code\", merCode);\n    }\n\n    public readMerCode() {\n        return this.readData(\"_merchant_code\");\n    }\n\n    /**\n     * app启动参数：品牌\n     */\n    public saveBrandCode(brandCode) {\n        this.saveData(\"_brand_code\", brandCode);\n    }\n\n    public readBrandCode() {\n        return this.readData(\"_brand_code\");\n    }\n\n    /**\n     * app启动参数：渠道\n     */\n    public saveChn(chn) {\n        this.saveData(\"_chn\", chn);\n    }\n\n    public readChn() {\n        return this.readData(\"_chn\");\n    }\n\n    /**\n     * app启动参数：AppVersionCode\n     */\n    public saveAppVersionCode(vc) {\n        this.saveData(\"_app_version_code\", vc);\n    }\n\n    public readAppVersionCode() {\n        return this.readData(\"_app_version_code\");\n    }\n\n    /**\n     * app启动参数：deviceId\n     */\n    public saveDeviceID(deviceId) {\n        this.saveData(\"_deviceId\", deviceId);\n    }\n\n    public readDeviceID() {\n        return this.readData(\"_deviceId\");\n    }\n\n    /**\n     * app启动参数：deviceInfo\n     */\n    private buildDeviceInfoItemKey() {\n        let itemKey = \"_deviceInfo_\";\n        let versionCode = this.readAppVersionCode();\n        return itemKey + versionCode;\n    }\n\n    public saveDeviceInfo(deviceInfo) {\n        let itemKey = this.buildDeviceInfoItemKey();\n        this.saveData(itemKey, deviceInfo);\n    }\n\n    public readDeviceInfo() {\n        let itemKey = this.buildDeviceInfoItemKey();\n        return this.readData(itemKey);\n    }\n\n    /**\n     * 启动-缓存不需登录的配置数据\n     */\n    public saveLauncherConfig(launcherConf) {\n        if (launcherConf) {\n            this.saveData(\"_LauncherConfig\", JSON.stringify(launcherConf));\n        }\n    }\n\n    public readLauncherConfig() {\n        let launcherConf = this.readData(\"_LauncherConfig\");\n        if (launcherConf) {\n            return JSON.parse(launcherConf);\n        }\n        return null;\n    }\n\n    public getNativeClassName() {\n        return this.readData(\"_cocos_bridge_class_name\");\n    }\n\n    /**\n     * universe-HostList\n     */\n    public saveHostList(list) {\n        this.saveData(\"_naming_host_list\", JSON.stringify(list));\n    }\n\n    public readHostList() {\n        let list = [];\n        let data = this.readData(\"_naming_host_list\");\n        try {\n            list = JSON.parse(data);\n        } catch (e) {\n            CC_DEBUG && cc.log(\"localstorage host parse error = \" + e.message);\n        }\n        return list;\n    }\n\n    /**\n     * Master -Master 引导\n     */\n    public saveExchangeGuide() {\n        let saveStr = \"true\";\n        this.saveData(\"_ExchangeGuide\", saveStr);\n    }\n\n    public readExchangeGuide() {\n        let exchangeGuide = this.readData(\"_ExchangeGuide\");\n        return exchangeGuide;\n    }\n\n    /**\n     * AdjustAppId\n     */\n    public saveAdjustAppId(adjustAppId) {\n        this.saveData(\"_adjust_appid\", adjustAppId);\n    }\n\n    public readAdjustAppId() {\n        return this.readData(\"_adjust_appid\");\n    }\n\n    /**\n     * 账号-保存游客账号\n     */\n    public saveFormalUserAccount(account) {\n        this.saveData(\"_formalUser_input_account_\", account);\n    }\n\n    public getFormalUserAccount() {\n        return this.readData(\"_formalUser_input_account_\");\n    }\n\n    /**\n     * 账号-KeyChain Save Account\n     */\n    public loadKeyChainAccount() {\n        let accountsJSON = null;\n        let accounts = this.readData(\"_keychain_account_infos\");\n        if (accounts && accounts.length > 10) {\n            accountsJSON = JSON.parse(accounts);\n        }\n        return accountsJSON;\n    }\n\n    public saveKeyChainAccount(accounts) {\n        this.saveData(\"_keychain_account_infos\", JSON.stringify(accounts));\n    }\n\n    /**\n     * 账号-保存升级游客账号标识\n     */\n    public saveUpgradeFormalUserTag(uid) {\n        this.saveData(\"_login_user_tag_famour\", uid);\n    }\n\n    public getUpgradeFormalUserTag() {\n        return this.readData(\"_login_user_tag_famour\");\n    }\n\n    /**\n     * 龙虎斗\n     */\n    public saveBigBattleBetSucceedChipIndex(room, betSucceedChipIndex) {\n        this.saveData(\"_bigBattle_current_chip_index_\" + room, betSucceedChipIndex);\n    }\n\n    public readBigBattleBetSucceedChipIndex(room) {\n        return this.readData(\"_bigBattle_current_chip_index_\" + room);\n    }\n\n    /**\n     * 7 Up Down\n     */\n    public saveSevenUpDownBetSucceedChipIndex(room, betSucceedChipIndex) {\n        this.saveData(\"_7updown_current_chip_index_\" + room, betSucceedChipIndex);\n    }\n\n    public readSevenUpDownBetSucceedChipIndex(room) {\n        return this.readData(\"_7updown_current_chip_index_\" + room);\n    }\n\n    public saveSevenUpDownOdds(odds: string) {\n        this.saveData(\"_7updown_odds_\", odds);\n    }\n\n    public readSevenUpDownOdds() {\n        return this.readData(\"_7updown_odds_\");\n    }\n\n    /**\n     * BEST OF FIVE\n     */\n    public saveBestOfFiveBetSucceedChipIndex(room, betSucceedChipIndex) {\n        this.saveData(\"_bestoffive_current_chip_index_\" + room, betSucceedChipIndex);\n    }\n\n    public readBestOfFiveBetSucceedChipIndex(room) {\n        return this.readData(\"_bestoffive_current_chip_index_\" + room);\n    }\n\n    /**\n     * Jhandi Munda\n     */\n    public saveJhandiMundaBetSucceedChipIndex(room, betSucceedChipIndex) {\n        this.saveData(\"_jhandimunda_current_chip_index_\" + room, betSucceedChipIndex);\n    }\n\n    public readJhandiMundaBetSucceedChipIndex(room) {\n        return this.readData(\"_jhandimunda_current_chip_index_\" + room);\n    }\n\n    /**\n     * Cricket Battle\n     */\n    public saveCricketBattleBetSucceedChipIndex(room, betSucceedChipIndex) {\n        this.saveData(\"_cricketbattle_current_chip_index_\" + room, betSucceedChipIndex);\n    }\n\n    public readCricketBattleBetSucceedChipIndex(room) {\n        return this.readData(\"_cricketbattle_current_chip_index_\" + room);\n    }\n\n    /**\n     * Best Club\n     */\n    public saveBestClubBetSucceedChipIndex(room, betSucceedChipIndex) {\n        this.saveData(\"_bestclub_current_chip_index_\" + room, betSucceedChipIndex);\n    }\n\n    public readBestClubBetSucceedChipIndex(room) {\n        return this.readData(\"_bestclub_current_chip_index_\" + room);\n    }\n\n    /**\n     * Three Dice\n     */\n    public saveThreeDiceBetSucceedChipIndex(room, betSucceedChipIndex) {\n        this.saveData(\"_threedice_current_chip_index_\" + room, betSucceedChipIndex);\n    }\n\n    public readThreeDiceBetSucceedChipIndex(room) {\n        return this.readData(\"_threedice_current_chip_index_\" + room);\n    }\n\n    /**\n     * Roulette\n     */\n    public saveRouletteSucceedChipIndex(room, betSucceedChipIndex) {\n        this.saveData(\"_roulette_current_chip_index_\" + room, betSucceedChipIndex);\n    }\n\n    public readRouletteSucceedChipIndex(room) {\n        return this.readData(\"_roulette_current_chip_index_\" + room);\n    }\n\n    /*\n     * 头像-新获得的头像ID\n     */\n    public saveNewAvatarId(avatarId) {\n        if (avatarId) {\n            this.saveData(\"_new_avatar_id\", JSON.stringify(avatarId));\n        }\n    }\n\n    public getNewAvatarId() {\n        let newAvatarData = this.readData(\"_new_avatar_id\");\n        let result = null;\n        if (newAvatarData) {\n            result = JSON.parse(newAvatarData);\n        }\n        return result;\n    }\n\n    public clearNewAvatarId() {\n        this.clearData(\"_new_avatar_id\");\n    }\n\n    public saveEverUploadLighthouse(isUpload) {\n        this.saveData(\"_ever_upload_lighthouse\", isUpload);\n    }\n    \n    public getEverUploadLighthouse() {\n        let everUpload = this.readData(\"_ever_upload_lighthouse\");\n        return everUpload;\n    }\n\n    /**\n     * 游戏-是否在游戏中\n     */\n    public setPlayingGame() {\n        this.saveData(\"_last_game_info_id_01\", \"1\");\n    }\n\n    public clearPlayingGame() {\n        this.clearData(\"_last_game_info_id_01\");\n    }\n\n    /**\n     * 金鲨银鲨-选中筹码\n     */\n    public saveSharkCurrentCoin(sharkCurrentCoin) {\n        this.saveData(\"_shark_current_coin\", sharkCurrentCoin);\n    }\n\n    public readSharkCurrentCoin() {\n        return this.readData(\"_shark_current_coin\");\n    }\n\n    public readEffectSwitch() {\n    }\n\n    public saveEffectSwitch(b) {\n    }\n\n    public readMusicSwitch() {\n    }\n\n    public saveMusicSwitch(b) {\n    }\n\n    /**\n     * 每日数据存储 , 仅当日有效，下次登录时如果超过0点则自动清除。\n     * @param key\n     * @param data\n     */\n    public saveDaily<T>(dailyStorage: DailyStorage<T>) {\n        let todayDataMap = this.readDaily() || {};\n        let checkOne: DailyStorage<T> = todayDataMap[dailyStorage.key];\n        if (checkOne) {\n            checkOne.data = dailyStorage.data;\n        } else {\n            todayDataMap[dailyStorage.key] = dailyStorage;\n            checkOne = dailyStorage;\n        }\n        let saveTimestamp = DateUtils.getInstance().getTimestamp();\n        checkOne.time = saveTimestamp;\n        let json = JSON.stringify(todayDataMap);\n        this.saveData(\"_daily_\", json);\n    }\n\n    /**\n     * 读取当日数据， 仅限当日有效\n     * @param key\n     * @returns\n     */\n    public readDaily(key?: string) {\n        let daillyDataJson = this.readData(\"_daily_\");\n        if (!daillyDataJson) return null;\n        let daillyData = JSON.parse(daillyDataJson);\n        return key ? daillyData[key] : daillyData;\n    }\n\n    /**\n     * 清除过期数据\n     */\n    private _clearExpiredStorage() {\n        //处理每日数据\n        let allDailyDataMap = this.readDaily();\n        if (!allDailyDataMap) return;\n        let values: any = Object.values(allDailyDataMap);\n        const getMonthAndDay = (ms) => {\n            let tempList = DateUtils.getInstance().transformDate(ms, \"M-D\").split(\"-\");\n            return { month: ~~tempList[0], day: ~~tempList[1] };\n        };\n        let now = DateUtils.getInstance().getTimestamp();\n        let todayDate = getMonthAndDay(now);\n        let nowMonth = todayDate.month;\n        let nowDay = todayDate.day;\n        //过滤过期的数据\n        let saveObj = {};\n        values\n            .filter((it) => {\n                let chcekTime = it.time;\n                let chceckDate = getMonthAndDay(chcekTime);\n                let chcekMonth = chceckDate.month;\n                let chcekDay = chceckDate.day;\n                let isValidity = chcekMonth >= nowMonth && chcekDay >= nowDay;\n                return isValidity;\n            })\n            .forEach((it) => (saveObj[it.key] = it));\n\n        this.saveData(\"_daily_\", JSON.stringify(saveObj));\n    }\n\n    /**\n     * 设置今日第一次登录过的状态\n     */\n    setTodayFirstLogin() {\n        this.saveDaily({\n            key: \"is_logged_today\",\n            data: 1\n        });\n    }\n\n    /**\n     * 检测今日登录过的状态\n     */\n    chcekIsLoggedToday() {\n        return !!this.readDaily(\"is_logged_today\");\n    }\n}\n","import ValueObserver from \"./ValueObserver\";\n\nexport default abstract class LocalStorageObserver<T> extends ValueObserver<T> {\n    public init() {\n        super.init(this.initCache());\n    }\n\n    protected onInit(data?: T): T {\n        return data || ({} as any);\n    }\n\n    protected abstract read(): T;\n    protected abstract save(data: T);\n    public initCache(): T {\n        try {\n            let data = this.read();\n            return data;\n        } catch {}\n        return;\n    }\n\n    protected onNotice(newValue: T, oldValue: T) {\n        this.save(newValue);\n    }\n\n    public reset() {\n        this.set(this.read());\n    }\n}\n","export function deprecated(tips: string): MethodDecorator {\n    return function (\n        target: any,\n        propertyKey: string,\n        descriptor: TypedPropertyDescriptor<any>\n    ): void | TypedPropertyDescriptor<any> {\n        let oldMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            if (CC_DEBUG) {\n                CC_DEBUG && cc.error(`${target.constructor.name}.${propertyKey}  is deprecated, ${tips}.`);\n            }\n            return oldMethod.call(this, ...args);\n        };\n    };\n}\n\nexport function methodTime(\n    target: Object,\n    propertyKey: string,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<any>>\n) {\n    let oldMethod = descriptor.value;\n    descriptor.value = function (...args: any[]): Promise<any> {\n        let startTime = Date.now();\n        return new Promise<any>((resolve, reject) => {\n            oldMethod\n                .apply(this, args)\n                .then((res) => {\n                    resolve(res);\n                })\n                .catch((res) => {\n                    reject(res);\n                })\n                .then(() => {\n                    CC_DEBUG && cc.log(\n                        `${target.constructor.name}->${propertyKey} time:${Date.now() - startTime}`\n                    );\n                });\n        });\n    };\n    return descriptor;\n}\n","import { TouchOneByOne } from \"../../utils/class/TouchOneByOne\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LongPressButton extends cc.Component {\n    @property\n    time: number = 0;\n\n    @property({ type: cc.Component.EventHandler })\n    touchEvents: cc.Component.EventHandler[] = [];\n\n    @property({ type: cc.Component.EventHandler })\n    touchCancalEvents: cc.Component.EventHandler[] = [];\n\n    protected onLoad(): void {\n        this.initTouch();\n    }\n\n    initTouch() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchBegin, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTocuhEnd, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTocuhEnd, this);\n    }\n\n    private onTouchBegin() {\n        this.scheduleOnce(() => {\n            this.touchEvents.forEach((v) => {\n                let comp = v.target.getComponent(v[\"_componentName\"]);\n                comp?.[v.handler].apply(comp, [v.customEventData]);\n            });\n        }, this.time);\n    }\n\n    private onTocuhEnd() {\n        this.unscheduleAllCallbacks();\n        this.touchCancalEvents.forEach((v) => {\n            let comp = v.target.getComponent(v[\"_componentName\"]);\n            comp?.[v.handler].apply(comp, [v.customEventData]);\n        });\n    }\n}\n","class MathUtils {\n    /**\n     * 获取随机数\n     * @param min 最小值\n     * @param max 最大值\n     * @returns\n     */\n    Random(min, max) {\n        return Math.round(Math.random() * (max - min)) + min;\n    }\n\n    /**\n     * 获取浮点数 小数部分\n     * @param num  浮点数\n     * @returns\n     */\n    getDecimalValue(num) {\n        let int = this.getInteger(num);\n        let decimal = num - int;\n        decimal = Math.floor(decimal * 100) / 100;\n        return decimal;\n    }\n\n    /**\n     * 获取浮点数 整数部分\n     * @param num\n     * @returns\n     */\n    getInteger(num) {\n        return Math.trunc(num);\n    }\n\n    saveTowDecimal = (decimal) => (decimal = Math.floor(decimal * 100) / 100);\n}\n\nexport default new MathUtils();\n","let numeral = require(\"numeral\");\n\nexport class MoneyUtil {\n    private static _instance: MoneyUtil = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new MoneyUtil();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    /**\n     * \"厘\"转换为\"元\"\n     * 服务器返回的金额单位：厘，从服务器返回需要除以1000\n     * @param amount\n     * @returns {number}\n     */\n    public liToYuan(amount) {\n        if (!amount || isNaN(amount)) {\n            return 0;\n        }\n        let amountValue;\n        if (typeof amount == \"number\") {\n            amountValue = amount;\n        } else {\n            amountValue = parseInt(amount);\n        }\n        return amountValue / 1000;\n    }\n\n    /**\n     * \"元\"转换为\"厘\"\n     * 客户端计算的金额单位：元，传给服务器需要乘以1000\n     * @param amount\n     * @returns {number}\n     */\n    public yuanToLi(amount) {\n        if (!amount || isNaN(amount)) {\n            return 0;\n        }\n        return amount * 1000;\n    }\n\n    public keepDigitPrecision(moeny: number, digit: number = 2): string {\n        let rate = digit == 3 ? 1000 : 100;\n        if (parseInt(moeny.toString()) === parseFloat(moeny.toString())) {\n            return moeny.toString();\n        } else {\n            let intMoney = parseInt(moeny.toString());\n            let len = intMoney.toString().length;\n            let floatLen = moeny.toString().split(\".\")[1].length;\n            let precisionDigit = len + (floatLen >= 2 ? 2 : floatLen);\n            let value = parseFloat(\n                (Math.floor(moeny * rate) / rate).toPrecision(precisionDigit)\n            ).toString();\n\n            var pos_decimal = value.indexOf(\".\"); //小数点的索引值\n            if (pos_decimal != -1) {\n                if (value.length <= pos_decimal + 2) {\n                    value += \"0\";\n                }\n            }\n\n            return value;\n        }\n    }\n\n    // ***********************************\n    // 废弃不同的货币转换，服务端统一用厘转换\n    // ***********************************\n    // /**\n    //  * \"分\"转换为\"元\"\n    //  * 服务器返回的金额单位：分，从服务器返回需要除以100\n    //  * @param amount\n    //  * @returns {number}\n    //  */\n    // public fenToYuan(amount: number): number {\n    //     if (!amount || isNaN(amount)) {\n    //         return 0;\n    //     }\n    //     let amountValue: number;\n    //     if (typeof amount == \"number\") {\n    //         amountValue = amount;\n    //     } else {\n    //         amountValue = parseInt(amount);\n    //     }\n    //     return amountValue / 100;\n    // }\n\n    // /**\n    //  * \"元\"转换为\"分\"\n    //  * 客户端计算的金额单位：元，传给服务器需要乘以100\n    //  * @param amount\n    //  * @returns {number}\n    //  */\n    // public yuanToFen(amount: number): number {\n    //     if (!amount || isNaN(amount)) {\n    //         return 0;\n    //     }\n    //     return amount * 100;\n    // }\n\n    /**\n     * 金额转成千分位, 不带小数\n     */\n    public toThousandths(money) {\n        let myNumeral = numeral(money);\n        return myNumeral.format(\"0,0\");\n    }\n\n    /**\n     * 千分位转成原始金额\n     */\n    public toMoney(thousandths) {\n        if (thousandths.endsWith(\"K\")) {\n            let myNumeral = numeral(thousandths.slice(0, -1));\n            return myNumeral.value() * 1000;\n        } else {\n            let myNumeral = numeral(thousandths);\n            return myNumeral.value();\n        }\n    }\n\n    /**\n     * 去掉前置0\n     */\n    public removeZero(money) {\n        return money.replace(/\\b(0+)/gi, \"\");\n    }\n\n    /**\n     * 向下取整\n     */\n    public roundDown(money) {\n        return Math.floor(money);\n    }\n\n    /**\n     * 向上取整\n     */\n    public roundUp(money) {\n        return Math.ceil(money);\n    }\n\n    /**\n     * 超过99,999,999使用B为单位，并输出千分位格式, 带小数\n     */\n    public toThousandthsPass999999999WithB(money) {\n        if (money > 999999999) {\n            let newMoney = this.roundDown(money / 10000) * 10000;\n            let _money = newMoney / 1000000000;\n            _money = Math.floor(_money * 100) / 100;\n            let myNumeral = numeral(_money);\n            if (~~_money == _money) {\n                return myNumeral.format(\"0,0\") + \"B\";\n            } else {\n                return myNumeral.format(\"0,0.00\") + \"B\";\n            }\n        } else {\n            return this.toThousandths(money);\n        }\n    }\n\n    /**\n     * 超过999,999使用M为单位，并输出千分位格式, 带小数\n     */\n    public toThousandthsPass999999WithMWithD(money) {\n        if (money > 999999) {\n            let newMoney = this.roundDown(money / 10000) * 10000;\n            let _money = newMoney / 1000000;\n            _money = Math.floor(_money * 100) / 100;\n            let myNumeral = numeral(_money);\n            if (~~_money == _money) {\n                return myNumeral.format(\"0,0\") + \"M\";\n            } else {\n                return myNumeral.format(\"0,0.00\") + \"M\";\n            }\n        } else {\n            return this.toThousandths(money);\n        }\n    }\n\n    /**\n     * 超过999,999,999使用M为单位，并输出千分位格式, 带小数\n     */\n    public toThousandthsPass999999999WithM(money) {\n        if (money > 999999999) {\n            let newMoney = this.roundDown(money / 10000) * 10000;\n            let _money = newMoney / 1000000000;\n            _money = Math.floor(_money * 100) / 100;\n            let myNumeral = numeral(_money);\n            if (~~_money == _money) {\n                return myNumeral.format(\"0,0\") + \"M\";\n            } else {\n                return myNumeral.format(\"0,0.00\") + \"M\";\n            }\n        } else {\n            return this.toThousandths(money);\n        }\n    }\n\n    /**\n     * 超过999,999使用K为单位，并输出千分位格式, 不带小数\n     */\n    public toThousandthsPass999999WithK(money): string {\n        if (money > 999999) {\n            let _money = this.roundDown(money / 1000);\n            return this.toThousandths(_money) + \"K\";\n        } else {\n            return this.toThousandths(money);\n        }\n    }\n\n    /**\n     * 超过999使用K为单位，并输出千分位格式, 不带小数\n     */\n    public toThousandthsPass999WithK(money) {\n        if (money > 999) {\n            let _money = this.roundDown(money / 1000);\n            return this.toThousandths(_money) + \"K\";\n        } else {\n            return this.toThousandths(money);\n        }\n    }\n\n    /**\n     * 超过999使用K为单位，并输出千分位格式, 带小数\n     */\n    public toThousandthsPass999WithKWithD(money) {\n        if (money > 999) {\n            let _money = this.roundDown(money / 1000);\n            _money = Math.floor(_money * 100) / 100;\n            let myNumeral = numeral(_money);\n            if (~~_money == _money) {\n                return myNumeral.format(\"0,0\") + \"K\";\n            } else {\n                return myNumeral.format(\"0,0.00\") + \"K\";\n            }\n        } else {\n            return this.toThousandths(money);\n        }\n    }\n\n    /**\n     * 超过999使用K为单位,筹码不要输出千分位格式\n     */\n    public to999WithK(money) {\n        if (money > 999) {\n            let _money = this.roundDown(money / 1000);\n            return _money + \"K\";\n        } else {\n            return this.toThousandths(money);\n        }\n    }\n\n    /**\n     * 超过999使用K为单位，并输出千分位格式, 不带小数 向上取整\n     */\n    public toRoundUpThousandthsPass999WithK(money) {\n        if (money > 999) {\n            let _money = this.roundUp(money / 1000);\n            return this.toThousandths(_money) + \"K\";\n        } else {\n            return this.toThousandths(money);\n        }\n    }\n\n    /**\n     * 超过999输出千分位格式, 不带小数\n     */\n    public toThousandthsPass999(money) {\n        return this.toThousandths(money);\n    }\n}\n","import LanguageCenter from \"../../../language/LanguageCenter\";\nimport { Instance } from \"../../../utils/decorators/InstanceClassDecorator\";\nimport { lodash } from \"../../../utils/NpmExport\";\nimport { Tools } from \"../../../utils/Tools\";\nimport { CocosBundleEnum } from \"../define/CocosBundleEnum\";\nimport { CocosUiUtil } from \"../utils/CocosUiUtil\";\n\nconst { ccclass, property, executeInEditMode, menu, inspector } = cc._decorator;\n\n@ccclass\n@menu(\"core/label/MultLangLabelBase\")\nexport default class MultLangLabelBase extends cc.Label {\n    @property\n    protected _bundleName: string = \"\";\n\n    @property({ type: CocosBundleEnum })\n    protected get bundleName(): number {\n        return CocosBundleEnum?.[this._bundleName] ?? 0;\n    }\n\n    protected set bundleName(value: number) {\n        this._bundleName = CocosBundleEnum?.[value] ?? 0;\n    }\n\n    @property\n    protected _mainLangKey: string = \"\";\n\n    @property\n    protected _subLangKey: string = \"\";\n\n    private _object: { [index: string]: string | number } = {};\n    public set object(value: { [index: string]: string | number }) {\n        this._object = value;\n        this.updateString();\n    }\n    public get object(): { [index: string]: string | number } {\n        return this._object;\n    }\n\n    public getLangString() {\n        return (\n            Instance(LanguageCenter).getLanguage4Bundle(this._bundleName)?.[this._mainLangKey]?.[\n                this._subLangKey\n            ] ?? \"\"\n        );\n    }\n\n    protected updateString() {\n        let str = this.getLangString();\n        if (str) {\n            if (!lodash.isEmpty(this.object)) {\n                str = Tools.formatString(str, this.object);\n            }\n            this.string = str;\n        }\n    }\n\n    protected onLoad(): void {\n        super.onLoad?.();\n        this.updateString();\n    }\n}\n","import { CocosBundleEnum } from \"../define/CocosBundleEnum\";\nimport { CocosUiUtil } from \"../utils/CocosUiUtil\";\nimport MultLangLabelBase from \"./MultLangLabelBase\";\n\nconst { ccclass, property, executeInEditMode, menu, inspector } = cc._decorator;\n\n@ccclass\n@menu(\"core/label/MultLangLabelCustom\")\n@inspector(\"packages://int-inspector/build/components/mult-lang-label.js\")\nexport default class MultLangLabelCustom extends MultLangLabelBase {\n    @property\n    protected get mainLangKey() {\n        return this._mainLangKey;\n    }\n    protected set mainLangKey(value: string) {\n        this._mainLangKey = value;\n        this.updateString();\n    }\n\n    @property\n    public get subLangKey() {\n        return this._subLangKey;\n    }\n    public set subLangKey(value: string) {\n        this._subLangKey = value;\n        this.updateString();\n    }\n}\n","import { CocosBundleEnum } from \"../define/CocosBundleEnum\";\nimport { CocosUiUtil } from \"../utils/CocosUiUtil\";\nimport MultLangLabelCustom from \"./MultLangLabelCustom\";\nimport LanguageCenter from \"../../../language/LanguageCenter\";\nimport { Instance } from \"../../../utils/decorators/InstanceClassDecorator\";\nimport MultLangLabelBase from \"./MultLangLabelBase\";\n\nconst { ccclass, property, executeInEditMode, menu, inspector } = cc._decorator;\n\n@ccclass\n@menu(\"core/label/MultLangLabel\")\n@inspector(\"packages://int-inspector/build/components/mult-lang-label.js\")\nexport default class MultLangLabel extends MultLangLabelBase {\n    private MainLangEnum = null;\n    private SubLangEnum = null;\n\n    private tempSub: number = 0;\n    private tempMain: number = 0;\n\n    @property({ type: CocosBundleEnum, override: true })\n    protected get bundleName(): number {\n        return CocosBundleEnum?.[this._bundleName] ?? 0;\n    }\n\n    protected set bundleName(value: number) {\n        this._bundleName = CocosBundleEnum?.[value] ?? 0;\n        this.updateMainLangEnum();\n        this.mainLangKey = -Math.random();\n    }\n\n    @property({ type: cc.Enum({}) })\n    protected get mainLangKey() {\n        return this.MainLangEnum?.[`<${this._mainLangKey}>`] ?? this.tempMain;\n    }\n    protected set mainLangKey(value: number) {\n        this._mainLangKey =\n            (this.MainLangEnum?.[value] as string)?.replace?.(/<?(?<key>[^>]*)>?/, \"$<key>\") ?? ``;\n        if (!this._mainLangKey) {\n            this.tempMain = value;\n        }\n        this.updateSubLangEnum();\n        this.subLangKey = -Math.random();\n    }\n\n    @property({ type: cc.Enum({}) })\n    protected get subLangKey() {\n        return this.SubLangEnum?.[`<${this._subLangKey}>`] ?? this.tempSub;\n    }\n    protected set subLangKey(value: number) {\n        this._subLangKey =\n            (this.SubLangEnum?.[value] as string)?.replace?.(/<?(?<key>[^>]*)>?/, \"$<key>\") ?? ``;\n        if (!this._subLangKey) {\n            this.tempSub = value;\n        }\n        this.updateString();\n    }\n\n    protected onLoad(): void {\n        super.onLoad();\n        if (CC_EDITOR) {\n            this.updateMainLangEnum();\n            this.updateSubLangEnum();\n        }\n    }\n\n    protected updateMainLangEnum() {\n        let object = Instance(LanguageCenter).getLanguage4Bundle(this._bundleName);\n        let keys = [`None`, ...Object.keys(object)];\n        let ccEnum = CocosUiUtil.createEnum(keys);\n        this.MainLangEnum = ccEnum;\n        cc.Class[\"Attr\"].setClassAttr(this, \"mainLangKey\", \"enumList\", cc.Enum[\"getList\"](ccEnum));\n    }\n    protected updateSubLangEnum() {\n        let object =\n            Instance(LanguageCenter).getLanguage4Bundle(this._bundleName)?.[this._mainLangKey] ??\n            {};\n        let keys = [`None`, ...Object.keys(object)];\n        let ccEnum = CocosUiUtil.createEnum(keys);\n        this.SubLangEnum = ccEnum;\n        cc.Class[\"Attr\"].setClassAttr(this, \"subLangKey\", \"enumList\", cc.Enum[\"getList\"](ccEnum));\n    }\n}\n","import LanguageCenter from \"../../../language/LanguageCenter\";\nimport { Instance } from \"../../../utils/decorators/InstanceClassDecorator\";\nimport { lodash } from \"../../../utils/NpmExport\";\nimport { Tools } from \"../../../utils/Tools\";\nimport { CocosBundleEnum } from \"../define/CocosBundleEnum\";\nimport { CocosUiUtil } from \"../utils/CocosUiUtil\";\n\nconst { ccclass, property, executeInEditMode, menu, inspector } = cc._decorator;\n\n@ccclass\n@menu(\"core/label/MultLangRichTextBase\")\nexport default class MultLangRichTextBase extends cc.RichText {\n    @property\n    protected _bundleName: string = \"\";\n\n    @property({ type: CocosBundleEnum })\n    protected get bundleName(): number {\n        return CocosBundleEnum?.[this._bundleName] ?? 0;\n    }\n\n    protected set bundleName(value: number) {\n        this._bundleName = CocosBundleEnum?.[value] ?? 0;\n    }\n\n    @property\n    protected _mainLangKey: string = \"\";\n\n    @property\n    protected _subLangKey: string = \"\";\n\n    private _object: { [index: string]: string | number } = {};\n    public set object(value: { [index: string]: string | number }) {\n        this._object = value;\n        this.updateString();\n    }\n    public get object(): { [index: string]: string | number } {\n        return this._object;\n    }\n\n    public getLangString() {\n        return (\n            Instance(LanguageCenter).getLanguage4Bundle(this._bundleName)?.[this._mainLangKey]?.[\n                this._subLangKey\n            ] ?? \"\"\n        );\n    }\n\n    protected updateString() {\n        let str = this.getLangString();\n        if (str) {\n            if (!lodash.isEmpty(this.object)) {\n                str = Tools.formatString(str, this.object);\n            }\n            this.string = str;\n        }\n    }\n\n    protected onLoad(): void {\n        super.onLoad?.();\n        this.updateString();\n    }\n}\n","import LanguageCenter from \"../../../language/LanguageCenter\";\nimport { Instance } from \"../../../utils/decorators/InstanceClassDecorator\";\nimport { CocosBundleEnum } from \"../define/CocosBundleEnum\";\nimport { CocosUiUtil } from \"../utils/CocosUiUtil\";\nimport MultLangRichTextBase from \"./MultLangRichTextBase\";\n\nconst { ccclass, property, executeInEditMode, menu, inspector } = cc._decorator;\n\n@ccclass\n@menu(\"core/label/MultLangRichText\")\n@inspector(\"packages://int-inspector/build/components/mult-lang-rich-text.js\")\nexport default class MultLangRichText extends MultLangRichTextBase {\n    private MainLangEnum = null;\n    private SubLangEnum = null;\n\n    private tempSub: number = 0;\n    private tempMain: number = 0;\n\n    @property({ type: CocosBundleEnum, override: true })\n    protected get bundleName(): number {\n        return CocosBundleEnum?.[this._bundleName] ?? 0;\n    }\n\n    protected set bundleName(value: number) {\n        this._bundleName = CocosBundleEnum?.[value] ?? 0;\n        this.updateMainLangEnum();\n        this.mainLangKey = -Math.random();\n    }\n\n    @property({ type: cc.Enum({}) })\n    protected get mainLangKey() {\n        return this.MainLangEnum?.[`<${this._mainLangKey}>`] ?? this.tempMain;\n    }\n    protected set mainLangKey(value: number) {\n        this._mainLangKey =\n            (this.MainLangEnum?.[value] as string)?.replace?.(/<?(?<key>[^>]*)>?/, \"$<key>\") ?? ``;\n        if (!this._mainLangKey) {\n            this.tempMain = value;\n        }\n        this.updateSubLangEnum();\n        this.subLangKey = -Math.random();\n    }\n\n    @property({ type: cc.Enum({}) })\n    protected get subLangKey() {\n        return this.SubLangEnum?.[`<${this._subLangKey}>`] ?? this.tempSub;\n    }\n    protected set subLangKey(value: number) {\n        this._subLangKey =\n            (this.SubLangEnum?.[value] as string)?.replace?.(/<?(?<key>[^>]*)>?/, \"$<key>\") ?? ``;\n        if (!this._subLangKey) {\n            this.tempSub = value;\n        }\n        this.updateString();\n    }\n\n    protected onLoad(): void {\n        super.onLoad();\n        if (CC_EDITOR) {\n            this.updateMainLangEnum();\n            this.updateSubLangEnum();\n        }\n    }\n\n    protected updateMainLangEnum() {\n        let object = Instance(LanguageCenter).getLanguage4Bundle(this._bundleName);\n        let keys = [`None`, ...Object.keys(object)];\n        let ccEnum = CocosUiUtil.createEnum(keys);\n        this.MainLangEnum = ccEnum;\n        cc.Class[\"Attr\"].setClassAttr(this, \"mainLangKey\", \"enumList\", cc.Enum[\"getList\"](ccEnum));\n    }\n    protected updateSubLangEnum() {\n        let object =\n            Instance(LanguageCenter).getLanguage4Bundle(this._bundleName)?.[this._mainLangKey] ??\n            {};\n        let keys = [`None`, ...Object.keys(object)];\n        let ccEnum = CocosUiUtil.createEnum(keys);\n        this.SubLangEnum = ccEnum;\n        cc.Class[\"Attr\"].setClassAttr(this, \"subLangKey\", \"enumList\", cc.Enum[\"getList\"](ccEnum));\n    }\n}\n","import { Instance } from \"../utils/decorators/InstanceClassDecorator\";\nimport LanguageObserver from \"./LanguageObserver\";\n\nexport namespace MultLangUtils {\n    export function assetPath(bundle: string, path: string) {\n        let curLanguage = `lan-${Instance(LanguageObserver).get()}`;\n        let language = /\\/(?<language>lan\\-([a-z]{2}))\\//.exec(path)?.groups?.language;\n        if (curLanguage == language) {\n            return null;\n        }\n        let newPath = path.replace(`${language}`, `${curLanguage}`);\n        if (!newPath) {\n            return null;\n        }\n\n        if (cc.assetManager.getBundle(bundle).getInfoWithPath(newPath)) {\n            return newPath;\n        }\n\n        newPath = newPath.replace(/\\-[\\w]+$/, \"\"); //SourceSansPro-Regular -> SourceSansPro\n\n        if (cc.assetManager.getBundle(bundle).getInfoWithPath(newPath)) {\n            return newPath;\n        }\n        return null;\n    }\n\n    export function assetDesc(desc: IResDescribe): IResDescribe {\n        let path = assetPath(desc.bundleName, desc.resPath);\n        if (!path) {\n            return desc;\n        }\n        return {\n            ...desc,\n            resPath: path,\n        };\n    }\n}\n","import { LocalStorageMgr } from \"../storage/LocalStorageMgr\";\nimport { lodash } from \"../utils/NpmExport\";\n\nexport class NativeUtil {\n    private static _instance: NativeUtil = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new NativeUtil();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    private nativeClassName: string;\n\n    public nativeAndroidClassName() {\n        let className = \"\";\n        if (!lodash.isEmpty(LocalStorageMgr.getInstance().getNativeClassName())) {\n            className = LocalStorageMgr.getInstance().getNativeClassName();\n        } else {\n            className = \"code/keep/CocosBridge\";\n        }\n        return className;\n    }\n\n    public openUrlByBrowser(url: string | Promise<string>) {}\n\n    public openUrlByWebView(url: string) {}\n\n    public openApp(packageName: string, fallbackUrl: string) {}\n\n    public copyText(text: string) {}\n\n    public getCopiedText(): string {\n        return \"\";\n    }\n\n    public saveImage(url: string) {}\n\n    public showNativeToast(toast: string) {}\n\n    public initAdjustID(adjustID: string) {}\n\n    public trackAdjustEvent(eventToken: string, data: object) {}\n\n    public getDeviceID(): string {\n        return \"\";\n    }\n\n    public getDeviceInfoForLighthouse(): string {\n        let deviceInfo = \"\";\n        if (cc.sys.os == cc.sys.OS_ANDROID) {\n            let className = this.nativeAndroidClassName();\n            let methodName = \"getDeviceInfoForLighthouse\";\n            let methodSignature = \"()Ljava/lang/String;\";\n            deviceInfo = jsb.reflection.callStaticMethod(className, methodName, methodSignature);\n        }\n        return deviceInfo;\n    }\n\n    public getSystemVersionCode(): number {\n        return 1; // Android返回int，iOS返回float\n    }\n\n    public getClientVersionCode(): number {\n        return 1;\n    }\n\n    public getPackageName(): string {\n        return \"\";\n    }\n\n    public getAppName(): string {\n        return \"\";\n    }\n\n    public getChannel(): string {\n        return \"\";\n    }\n\n    public getBrand(): string {\n        return \"\";\n    }\n\n    public saveGameUrl(gameUrl: string) {}\n\n    public saveAccountInfo(accountInfo: string) {}\n\n    public getAccountInfo(): string {\n        //TODO\n        return null;\n    }\n\n    public getAdjustDeviceID(): string {\n        return \"\";\n    }\n\n    public getGoogleADID(): string {\n        return \"\";\n    }\n\n    public getIDFA(): string {\n        return \"\";\n    }\n\n    public getReferID(): string {\n        return \"\";\n    }\n\n    public getAgentID(): string {\n        return \"\";\n    }\n\n    public setCocosData(key: string, value: string) {}\n\n    public getCocosData(key: string): string {\n        return \"\";\n    }\n\n    public savePromotionMaterial(materialUrl: string) {}\n\n    public synthesizePromotionImage(qrCodeUrl: string, size: number, x: number, y: number) {}\n\n    public shareUrl(url: string) {\n        if (cc.sys.os == cc.sys.OS_ANDROID) {\n            let className = this.nativeAndroidClassName();\n            let methodName = \"shareUrl\";\n            let methodSignature = \"(Ljava/lang/String;)V\";\n            jsb.reflection.callStaticMethod(className, methodName, methodSignature,url);\n        }\n    }\n}\n","import { LabelManager } from \"./LabelManager\";\nimport { SpriteManager } from \"./SpriteManager\";\n\nexport class NodeManager {\n    private static _instance: NodeManager = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new NodeManager();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public setVisiable(node, visiable = false) {\n        if (cc.isValid(node)) {\n            if (node instanceof cc.Node) {\n                node.active = visiable;\n            } else {\n                node.node.active = visiable;\n            }\n        }\n    }\n\n    public setOpacity(node, opacity) {\n        if (cc.isValid(node)) {\n            if (node instanceof cc.Node) {\n                node.opacity = opacity;\n            } else {\n                node.node.opacity = opacity;\n            }\n        }\n    }\n\n    public createNode(name) {\n        let node = new cc.Node(\"node_\" + name || \"node\");\n        node.name = name.toString() || \"node\";\n        return node;\n    }\n\n    public findChildByName(node, urlPath): cc.Node {\n        return cc.find(urlPath, node);\n    }\n\n    public loadNodeRes(parent: cc.Node, nodeRes, gameId?): void {\n        let self = this;\n        if (!cc.isValid(parent) || !nodeRes) {\n            return;\n        }\n\n        if (nodeRes.sprite) {\n            for (let i = 0; i < nodeRes.sprite.length; i++) {\n                let nodePath = nodeRes.sprite[i].nodePath;\n                let resPath: IResDescribe = nodeRes.sprite[i].resPath;\n\n                let spriteNode = null;\n                if (nodePath == \"\" || nodePath == \"/\") {\n                    spriteNode = parent;\n                } else {\n                    spriteNode = cc.find(nodePath, parent);\n                }\n\n                if (cc.isValid(spriteNode) && resPath) {\n                    SpriteManager.getInstance().loadSpriteForNodeBundle(spriteNode, resPath);\n                }\n            }\n        }\n        if (nodeRes.font) {\n            for (let i = 0; i < nodeRes.font.length; i++) {\n                let nodePath = nodeRes.font[i].nodePath;\n                let resPath = nodeRes.font[i].resPath;\n                let spacingX = nodeRes.font[i].spacingX;\n\n                let fontNode = null;\n                if (nodePath == \"\" || nodePath == \"/\") {\n                    fontNode = parent;\n                } else {\n                    fontNode = cc.find(nodePath, parent);\n                }\n\n                if (cc.isValid(fontNode) && resPath) {\n                    LabelManager.getInstance().loadFontBundle(fontNode, resPath, spacingX);\n                }\n            }\n        }\n    }\n\n    public setLabelColor(node, color) {\n        if (cc.isValid(node)) {\n            node.color = new cc.Color().fromHEX(color);\n        }\n    }\n}\n","const numeral = require(\"numeral\");\nconst urlParser = require(\"url-parse\");\n\nimport * as moment from \"moment\";\nimport * as pb_1 from \"google-protobuf\";\nimport lodash = require(\"lodash\");\nwindow[\"lodash\"] = lodash;\nexport { numeral, urlParser, lodash, moment, pb_1 };\n","import { Tools } from \"../../utils/Tools\";\n\nconst { ccclass, property, menu } = cc._decorator;\n\n@ccclass\n@menu(\"core/ui/ObjectLabel\")\nexport default class ObjectLabel extends cc.Component {\n    @property\n    text: string = \"\";\n\n    private newText: string = \"\";\n\n    // LIFE-CYCLE CALLBACKS:\n    private regExp = \"{[^}]+}\";\n\n    private _object: { [index: string]: string | number };\n    public get object(): { [index: string]: string | number } {\n        return this._object;\n    }\n    public set object(v: { [index: string]: string | number }) {\n        this._object = v;\n        this.matchArgs(v);\n    }\n\n    onLoad() {\n        this.matchArgs();\n    }\n\n    start() {}\n\n    private matchArgs(args?: { [index: string]: string | number }) {\n        let result = Tools.formatString(this.text, args);\n        this.getLabel().string = result;\n    }\n\n    getLabel() {\n        return this.getComponent(cc.Label) || this.getComponent(cc.RichText);\n    }\n    // update (dt) {}\n}\n","//旧版本浏览器没有该函数的实现\nif (!Object.fromEntries) {\n    Object.defineProperty(Object, \"fromEntries\", {\n        value(entries) {\n            if (!entries || !entries[Symbol.iterator]) {\n                throw new Error(\"Object.fromEntries() requires a single iterable argument\");\n            }\n\n            const o = {};\n\n            Object.keys(entries).forEach((key) => {\n                const [k, v] = entries[key];\n\n                o[k] = v;\n            });\n\n            return o;\n        },\n    });\n}\n","const { ccclass, property, requireComponent, menu } = cc._decorator;\n\nenum TurnPage {\n    Previous,\n    Next,\n}\n\n@ccclass\n@requireComponent(cc.Button)\n@menu(\"core/ui/PageViewTurnPageButton\")\nexport default class PageViewTurnPageButton extends cc.Component {\n    @property(cc.PageView)\n    private pageView: cc.PageView = null;\n\n    @property({ type: cc.Enum(TurnPage) })\n    private turnType: TurnPage = TurnPage.Previous;\n\n    resetInEditor() {\n        if (!this.pageView) {\n            this.pageView = this.node.parent.getComponent(cc.PageView);\n        }\n    }\n    protected onLoad(): void {\n        if (!this.pageView) {\n            this.pageView = this.node.parent.getComponent(cc.PageView);\n        }\n        this.refreshButtonState();\n        this.pageView?.node.on(\"page-turning\", this.refreshButtonState, this);\n        this.node.on(\n            \"click\",\n            () => {\n                this.pageView?.scrollToPage(\n                    this.pageView?.getCurrentPageIndex() +\n                        (this.turnType == TurnPage.Previous ? -1 : 1),\n                    0.1\n                );\n            },\n            this\n        );\n    }\n\n    public refreshButtonState() {\n        if (this.turnType === TurnPage.Next) {\n            this.getComponent(cc.Button).interactable =\n                this.pageView?.getCurrentPageIndex() + 1 < this.pageView?.getPages().length;\n        } else {\n            this.getComponent(cc.Button).interactable = this.pageView?.getCurrentPageIndex() > 0;\n        }\n    }\n}\n","export enum PlatformType {\n    Unknow,\n    H5,\n    H5Native,\n}\n","import { lodash } from \"../utils/NpmExport\";\nimport { H5Util } from \"./H5Util\";\nimport { NativeUtil } from \"./NativeUtil\";\nimport { PlatformType } from \"./PlatformType\";\n\nexport class PlatformUtil {\n    private static _instance: PlatformUtil = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new PlatformUtil();\n        }\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public get type() {\n        if (cc.sys.isNative) {\n            return PlatformType.Unknow;\n        }\n\n        return H5Util.getInstance().platform;\n    }\n\n    //TODO\n    public getUserAgent() {\n        return lodash.get(window, \"navigator.userAgent\", \"Native/Unknown\");\n    }\n\n    public getSvn() {\n        //a: android, i: iOS, h: h5\n        switch (cc.sys.os) {\n            case cc.sys.OS_IOS:\n                return \"i\";\n            case cc.sys.OS_ANDROID:\n                return \"a\";\n            default:\n                return \"h\";\n        }\n        // h5\n    }\n\n    /**\n     * 使用浏览器打开，会跳出app\n     * @param url\n     */\n    public openUrlByBrowser(url: string | Promise<string>) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().openUrlByBrowser(url);\n        } else {\n            H5Util.getInstance().openUrlByBrowser(url);\n        }\n    }\n\n    /**\n     * 使用WebView打开，不会跳出app\n     * @param url\n     * @note query params说明:\n     *       1. orientation控制屏幕方向，string类型，可选值landscape(default)、portrait、unspecified(取决于手机设置)\n     *       2. hoverMenu控制悬浮菜单展示，bool类型，false(default)\n     *       3. navBar控制系统导航栏展示，bool类型，false(default)\n     *       4. safeCutout设置Android刘海屏安全模式，bool类型，false(default)\n     */\n    public openUrlByWebView(url: string) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().openUrlByWebView(url);\n        } else {\n            H5Util.getInstance().openUrlByWebView(url);\n        }\n    }\n\n    /**\n     * 打开app，若没有安装，跳转到备用url\n     * @param packageName\n     * @param fallbackUrl\n     */\n    public openApp(packageName: string, fallbackUrl: string) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().openApp(packageName, fallbackUrl);\n        } else {\n            H5Util.getInstance().openApp(packageName, fallbackUrl);\n        }\n    }\n\n    public copyText(text: string) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().copyText(text);\n        } else {\n            H5Util.getInstance().copyText(text);\n        }\n    }\n\n    public getCopiedText(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getCopiedText();\n        } else {\n            return H5Util.getInstance().getCopiedText();\n        }\n    }\n\n    public saveImage(url: string) {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().saveImage(url);\n        } else {\n            return H5Util.getInstance().saveImage(url);\n        }\n    }\n\n    public showNativeToast(toast: string) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().showNativeToast(toast);\n        } else {\n            H5Util.getInstance().showNativeToast(toast);\n        }\n    }\n\n    public initAdjustID(adjustID: string) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().initAdjustID(adjustID);\n        } else {\n            H5Util.getInstance().initAdjustID(adjustID);\n        }\n    }\n\n    public trackAdjustEvent(eventToken: string, data: object) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().trackAdjustEvent(eventToken, data);\n        } else {\n            H5Util.getInstance().trackAdjustEvent(eventToken, data);\n        }\n    }\n\n    public getDeviceID(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getDeviceID();\n        } else {\n            return H5Util.getInstance().getDeviceID();\n        }\n    }\n\n    public getDeviceInfoForLighthouse(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getDeviceInfoForLighthouse();\n        } else {\n            return H5Util.getInstance().getDeviceInfoForLighthouse();\n        }\n    }\n\n    public getSystemVersionCode(): number {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getSystemVersionCode();\n        } else {\n            return H5Util.getInstance().getSystemVersionCode();\n        }\n    }\n\n    public getClientVersionCode(): number {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getClientVersionCode();\n        } else {\n            return H5Util.getInstance().getClientVersionCode();\n        }\n    }\n\n    public getPackageName(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getPackageName();\n        } else {\n            return H5Util.getInstance().getPackageName();\n        }\n    }\n\n    public getAppName(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getAppName();\n        } else {\n            return H5Util.getInstance().getAppName();\n        }\n    }\n\n    public getChannel(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getChannel();\n        } else {\n            return H5Util.getInstance().getChannel();\n        }\n    }\n\n    public getBrand(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getBrand();\n        } else {\n            return H5Util.getInstance().getBrand();\n        }\n    }\n\n    public saveGameUrl(gameUrl: string) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().saveGameUrl(gameUrl);\n        } else {\n            H5Util.getInstance().saveGameUrl(gameUrl);\n        }\n    }\n\n    public saveAccountInfo(accountInfo: string) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().saveAccountInfo(accountInfo);\n        } else {\n            H5Util.getInstance().saveAccountInfo(accountInfo);\n        }\n    }\n\n    public getAccountInfo(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getAccountInfo();\n        } else {\n            return H5Util.getInstance().getAccountInfo();\n        }\n    }\n\n    public getAdjustDeviceID(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getAdjustDeviceID();\n        } else {\n            return H5Util.getInstance().getAdjustDeviceID();\n        }\n    }\n\n    public getGoogleADID(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getGoogleADID();\n        } else {\n            return H5Util.getInstance().getGoogleADID();\n        }\n    }\n\n    public getIDFA(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getIDFA();\n        } else {\n            return H5Util.getInstance().getIDFA();\n        }\n    }\n\n    public getReferID(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getReferID();\n        } else {\n            return H5Util.getInstance().getReferID();\n        }\n    }\n\n    public getAgentID(): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getAgentID();\n        } else {\n            return H5Util.getInstance().getAgentID();\n        }\n    }\n\n    public setCocosData(key: string, value: string) {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().setCocosData(key, value);\n        } else {\n            return H5Util.getInstance().setCocosData(key, value);\n        }\n    }\n\n    public getCocosData(key: string): string {\n        if (cc.sys.isNative) {\n            return NativeUtil.getInstance().getCocosData(key);\n        } else {\n            return H5Util.getInstance().getCocosData(key);\n        }\n    }\n\n    public savePromotionMaterial(materialUrl: string) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().savePromotionMaterial(materialUrl);\n        } else {\n            H5Util.getInstance().savePromotionMaterial(materialUrl);\n        }\n    }\n\n    public synthesizePromotionImage(qrCodeUrl: string, size: number, x: number, y: number) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().synthesizePromotionImage(qrCodeUrl, size, x, y);\n        } else {\n            H5Util.getInstance().synthesizePromotionImage(qrCodeUrl, size, x, y);\n        }\n    }\n\n    public shareUrl(url: string) {\n        if (cc.sys.isNative) {\n            NativeUtil.getInstance().shareUrl(url);\n        } else {\n            H5Util.getInstance().shareUrl(url);\n        }\n    }\n\n    public isOnline() {\n        if (cc.sys.isNative) {\n            //todo\n            return true;\n        } else {\n            return H5Util.getInstance().isOnline();\n        }\n    }\n}\n","import { AudioManager } from \"../../audio/AudioManager\";\nimport { BundleMgr } from \"../../bd/BundleMgr\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PlayButtonSoundComp extends cc.Component {\n    @property({\n        type: cc.AudioClip,\n        tooltip: \"播放的音效clip\",\n        visible() {\n            if (!this.isPlay) {\n                this.soundClip = null;\n            }\n            return this.isPlay;\n        },\n    })\n    soundClip: cc.AudioClip = null;\n\n    @property({ tooltip: \"是否要播放音效\" })\n    isPlay: boolean = false;\n\n    private soundPath: string = \"\";\n    private resBundleName: string = \"\";\n\n    start() {\n        this.init();\n    }\n\n    private init() {\n        if (!this.isPlay) {\n            return;\n        }\n\n        if (this.soundClip) {\n            this.node.on(\n                cc.Node.EventType.TOUCH_END,\n                () => {\n                    AudioManager.getInstance().playEffectWithClip(this.soundClip);\n                },\n                this\n            );\n        } else if (this.resBundleName.trim() != \"\" && this.soundPath.trim() != \"\") {\n            BundleMgr.getInstance().loadResFromBundle(\n                { bundleName: this.resBundleName, resPath: this.soundPath, type: cc.AudioClip },\n                (res: cc.AudioClip) => {\n                    if (res) {\n                        this.node.on(\n                            cc.Node.EventType.TOUCH_END,\n                            () => {\n                                AudioManager.getInstance().playEffectWithClip(res);\n                            },\n                            this\n                        );\n                    }\n                }\n            );\n        }\n    }\n\n    public setSoundPath(soundPath: string) {\n        this.soundPath = soundPath;\n    }\n\n    public setResBundleName(resBundleName: string) {\n        this.resBundleName = resBundleName;\n    }\n\n    public setIsPlay(isPlay: boolean) {\n        this.isPlay = isPlay;\n    }\n}\n","import BundleSkinCenter from \"../../bd/bd_skin/BundleSkinCenter\";\nimport { BundleNames } from \"../../conf/BundleNames\";\nimport PlayButtonSoundComp from \"../../ui/component/PlayButtonSoundComp\";\n\nexport class PlayButtonSoundUtils {\n    private static _instance: PlayButtonSoundUtils = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new PlayButtonSoundUtils();\n        }\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public buttonPlaySoundHandle(rootNode: cc.Node) {\n        if (cc.isValid(rootNode)) {\n            this.tryAddPlaySoundComp(rootNode);\n            this.childNodeButtonPlaySoundHandle(rootNode);\n        }\n    }\n\n    private childNodeButtonPlaySoundHandle(rootNode: cc.Node) {\n        rootNode.children.forEach((childNode: cc.Node) => {\n            this.tryAddPlaySoundComp(childNode);\n            this.childNodeButtonPlaySoundHandle(childNode);\n        });\n    }\n\n    public tryAddPlaySoundComp(node: cc.Node) {\n        if (cc.isValid(node)) {\n            let button = node.getComponent(cc.Button);\n            if (button) {\n                this.addPlaySoundComp(node);\n            }\n        }\n    }\n\n    public addPlaySoundComp(node: cc.Node) {\n        if (cc.isValid(node)) {\n            let playButtonSoundComp = node.getComponent(PlayButtonSoundComp);\n            if (!playButtonSoundComp) {\n                playButtonSoundComp = node.addComponent(PlayButtonSoundComp);\n\n                let bundleInfo = BundleSkinCenter.getInstance().getBundleInfo(BundleNames.COMMON);\n                let resDescribe = bundleInfo.loadOnDemand.btnEffect as IResDescribe;\n                resDescribe.bundleName = BundleNames.COMMON;\n\n                playButtonSoundComp.setResBundleName(resDescribe.bundleName);\n                playButtonSoundComp.setSoundPath(resDescribe.resPath);\n                playButtonSoundComp.setIsPlay(true);\n            }\n        }\n    }\n}\n","export class PoolMgr {\n    private static _instance: PoolMgr = null;\n    private pools = {};\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new PoolMgr();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    /**\n     * 根据预制体从对象池中获取对应节点\n     */\n    public getNode(prefab: cc.Prefab): cc.Node {\n        let name = prefab.data.name;\n        let node: cc.Node = null;\n        if (this.pools.hasOwnProperty(name)) {\n            let pool = this.pools[name]; // 已有对应的对象池\n            if (pool.size() > 0) {\n                node = pool.get();\n            } else {\n                node = cc.instantiate(prefab);\n            }\n        } else {\n            let pool = new cc.NodePool(); // 没有对应对象池, 创建他！\n            this.pools[name] = pool;\n\n            node = cc.instantiate(prefab);\n        }\n\n        return node;\n    }\n\n    /**\n     * 将对应节点放回对象池中\n     */\n    public putNode(node: cc.Node) {\n        if (!cc.isValid(node)) {\n            return;\n        }\n        let name = node.name;\n        let pool = null;\n        if (this.pools.hasOwnProperty(name)) {\n            pool = this.pools[name]; // 已有对应的对象池\n        } else {\n            pool = new cc.NodePool(); // 没有对应对象池, 创建他！\n            this.pools[name] = pool;\n        }\n\n        pool.put(node);\n    }\n\n    /**\n     * 根据名称, 清除对应对象池\n     */\n    public clearPool(name: string) {\n        if (this.pools.hasOwnProperty(name)) {\n            let pool: cc.NodePool = this.pools[name];\n            pool && pool.clear();\n        }\n    }\n\n    /**\n     * 根据预制体, 清除对应对象池\n     */\n     public clearPoolWithPrefab(prefab: cc.Prefab) {\n        let name = prefab.data.name;\n        this.clearPool(name);\n    }\n\n    /**\n     * 清除所有对象池\n     */\n    public clearAllPool() {\n        for (const key in this.pools) {\n            if (Object.prototype.hasOwnProperty.call(this.pools, key)) {\n                let pool: cc.NodePool = this.pools[key];\n                pool && pool.clear();\n            }\n        }\n    }\n}\n","import { PlayButtonSoundUtils } from \"../utils/playButtonSoundUtils/PlayButtonSoundUtils\";\nimport { PopupUtil } from \"../utils/PopupUtil\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PopUpViewBase extends PopupUtil.BasePopup {\n    public onConstruct(): void {\n        PlayButtonSoundUtils.getInstance().buttonPlaySoundHandle(this.node);\n    }\n\n    public init(...args: any[]): void {}\n    public ready(...args: any[]): void {}\n\n    protected onShow(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            if (CC_DEBUG) {\n                CC_DEBUG && cc.log(\"open win ====> \" + this.node.name);\n            }\n\n            if (!this._content) {\n                resolve();\n                return;\n            }\n            cc.tween<cc.Node>(this._content)\n                .set({ scale: 0 })\n                .to(0.15, { scale: 1 }, { easing: \"backOut\" })\n                .call(() => {\n                    resolve();\n                })\n                .start();\n        });\n    }\n\n    protected onHide(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            if (!this._content) {\n                resolve();\n                return;\n            }\n            cc.tween<cc.Node>(this._content)\n                .call(() => {\n                    this.showSwallow();\n                })\n                .to(0.15, { scale: 0 }, { easing: \"backIn\" })\n                .call(() => {\n                    resolve();\n                })\n                .start();\n        });\n    }\n    protected async onClose(): Promise<void> {}\n\n    private showSwallow() {\n        let swallowNode = new cc.Node();\n        swallowNode.width = cc.winSize.width;\n        swallowNode.height = cc.winSize.height;\n        swallowNode.addComponent(cc.BlockInputEvents);\n        this.node.addChild(swallowNode, 10);\n    }\n}\n","import { BundleMgr } from \"../bd/BundleMgr\";\nimport { lodash } from \"./NpmExport\";\nexport namespace PopupUtil {\n    export interface IShowOptions {\n        parent?: cc.Node;\n        args?: any[];\n\n        zIndex?: number;\n\n        new?: boolean;\n    }\n\n    interface IHideOptions {\n        parant?: cc.Node;\n        args?: any[];\n        new?: boolean;\n    }\n\n    enum PopupState {\n        None = \"none\",\n        Show = \"show\",\n        Hide = \"hide\",\n        Close = \"close\",\n    }\n    enum PopupEvent {\n        ChangeState = \"core_change_state\",\n    }\n\n    @cc._decorator.ccclass\n    export abstract class BasePopup extends cc.Component {\n        private __state: PopupState = PopupState.None;\n\n        private _setState(value: PopupState, ...args: any) {\n            this.__state = value;\n            this.node.emit(`${PopupEvent.ChangeState}_${this.__state}`, ...args);\n        }\n\n        protected get _content() {\n            return this.node.getChildByName(\"content\") || this.node.getChildByName(\"frame\");\n        }\n\n        public onConstruct() {}\n\n        public async preInit(...args: any[]) {}\n\n        public abstract init(...args: any[]): void;\n\n        public abstract ready(...args: any[]): void;\n\n        protected abstract onShow(): Promise<void>;\n\n        protected abstract onHide(...args: any[]): Promise<void>;\n        protected abstract onClose(...args: any[]): Promise<void>;\n\n        public async show(...args: any[]): Promise<void> {\n            this.node.active = true;\n            if (this.__state !== PopupState.Show) {\n                await this.onShow();\n                this._setState(PopupState.Show);\n            }\n            this.ready(...args);\n            return;\n        }\n        public async hide(...args: any[]): Promise<void> {\n            await this.onHide(...args);\n            this.node.active = false;\n            this._setState(PopupState.Hide, ...args);\n            return;\n        }\n        public async close(...args: any[]): Promise<void> {\n            await this.hide(...args);\n            await this.onClose(...args);\n            this._setState(PopupState.Close, ...args);\n            this.node.destroy();\n            return;\n        }\n    }\n\n    export function createShowResult(popupNode: cc.Node) {\n        const popup = popupNode.getComponent(BasePopup);\n        let result = {\n            onShow: (callfunc: () => void) => {\n                popupNode.once(`${PopupEvent.ChangeState}_${PopupState.Show}`, callfunc, this);\n                return result;\n            },\n            onHide: (callfunc?: (...args: any[]) => void) => {\n                popupNode.once(`${PopupEvent.ChangeState}_${PopupState.Hide}`, callfunc, this);\n                return result;\n            },\n            onClose: (callfunc?: (...args: any[]) => void) => {\n                popupNode.once(`${PopupEvent.ChangeState}_${PopupState.Close}`, callfunc, this);\n                return result;\n            },\n            hide: (...args: any[]) => {\n                if (cc.isValid(popup)) {\n                    popup?.hide?.(...args);\n                }\n            },\n            close: (...args: any[]) => {\n                if (cc.isValid(popup)) {\n                    popup?.close?.(...args);\n                }\n            },\n            popupNode,\n        };\n        return result;\n    }\n\n    export function createNode(prefab: cc.Prefab, options?: IShowOptions) {\n        const popupNode = cc.instantiate(prefab);\n        (options?.parent ?? CommonDepend.CocosUtils.getSceneCanvas())?.addChild?.(\n            popupNode,\n            options?.zIndex ?? 0\n        );\n\n        const popup = popupNode.getComponent(BasePopup);\n        popup?.onConstruct?.();\n\n        return popupNode;\n    }\n\n    export function popupShow(popupNode: cc.Node, options?: IShowOptions) {\n        const popup = popupNode.getComponent(BasePopup);\n        popup?.init?.(...(options?.args ?? []));\n        popup?.show?.(...(options?.args ?? [])) ?? Promise.resolve((popupNode.active = true));\n    }\n    export async function preload(resDesc: IResDescribe, options?: IShowOptions) {\n        let popupNode = getPopup(resDesc, options)?.node;\n        if (!cc.isValid(popupNode)) {\n            let prefab = await BundleMgr.getInstance().loadResFromBundle<cc.Prefab>(resDesc);\n            if (!prefab) {\n                if (CC_DEBUG) {\n                    CC_DEBUG && cc.error(`[PopupUtil] show loadResFromBundle failed`, resDesc);\n                }\n                throw Error(\"ui  preload failed\");\n            }\n            popupNode = createNode(prefab, options);\n        }\n        popupNode.active = false;\n        const popup = popupNode.getComponent(BasePopup);\n        await popup?.preInit?.(...(options?.args ?? []));\n        return createShowResult(popupNode);\n    }\n\n    export async function show(resDesc: IResDescribe, options?: IShowOptions) {\n        if (lodash.isEmpty(resDesc)) {\n            if (CC_DEBUG) throw \"[PopupUtil] show resDesc not empty\";\n        }\n        let popupNode = getPopup(resDesc, options)?.node;\n        if (!cc.isValid(popupNode)) {\n            let prefab = await BundleMgr.getInstance().loadResFromBundle<cc.Prefab>(resDesc);\n            if (!prefab) {\n                if (CC_DEBUG) {\n                    CC_DEBUG && cc.error(`[PopupUtil] show loadResFromBundle failed`, resDesc);\n                }\n                return;\n            }\n            popupNode = createNode(prefab, options);\n        }\n        popupShow(popupNode, options);\n\n        return createShowResult(popupNode);\n    }\n\n    export function showSync(resDesc: IResDescribe, options?: IShowOptions) {\n        let popupNode = getPopup(resDesc, options)?.node;\n        if (!cc.isValid(popupNode)) {\n            let prefab: cc.Prefab = BundleMgr.getInstance().getResFromBundle(resDesc);\n            if (!prefab) {\n                if (CC_DEBUG) {\n                    CC_DEBUG && cc.error(`[PopupUtil] show loadResFromBundle failed`, resDesc);\n                }\n                return;\n            }\n            popupNode = createNode(prefab, options);\n        }\n        popupShow(popupNode, options);\n\n        return createShowResult(popupNode);\n    }\n\n    export function getPopup(resDesc: IResDescribe, options?: IHideOptions) {\n        let nodeName = lodash.last(resDesc?.resPath?.split(\"/\"));\n        if (!nodeName) {\n            return undefined;\n        }\n        let parent = options?.parant ?? CommonDepend.CocosUtils.getSceneCanvas();\n        return options?.new == true\n            ? undefined\n            : parent?.getChildByName?.(nodeName)?.getComponent?.(BasePopup);\n    }\n\n    export function hide(resDesc: IResDescribe, options?: IHideOptions) {\n        let popup = getPopup(resDesc, options);\n        return popup?.hide?.(...(options?.args ?? []));\n    }\n\n    export function close(resDesc: IResDescribe, options?: IHideOptions) {\n        let popup = getPopup(resDesc, options);\n        return popup?.close?.(...(options?.args ?? []));\n    }\n\n    export function destroy(resDesc: IResDescribe, options?: IHideOptions) {\n        let popup = getPopup(resDesc, options);\n        return popup?.node?.destroy?.();\n    }\n}\n","import { BundleMgr } from \"../../bd/BundleMgr\";\n\nexport class PrefabManager {\n    private static _instance: PrefabManager = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new PrefabManager();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() { }\n\n    public loadPrefabToNode(prefab, node) {\n        return new Promise((resolve, reject) => {\n            if (cc.isValid(prefab) && cc.isValid(node)) {\n                let prefabIns = cc.instantiate(prefab);\n                if (cc.isValid(prefabIns)) {\n                    node.addChild(prefabIns);\n                    resolve(prefabIns);\n                }\n            } else {\n                reject(false);\n            }\n        });\n    }\n\n    public loadPrefabBundle(\n        resDesc: IResDescribe,\n        callFunc?: (res: any) => void\n    ): Promise<cc.Prefab> {\n        return BundleMgr.getInstance().loadResFromBundle(resDesc, callFunc);\n    }\n\n    public getPrefabBundle(resDesc: IResDescribe) {\n        return BundleMgr.getInstance().getResFromBundle(resDesc);\n    }\n\n    public loadPrefabInsBundle(\n        resDesc: IResDescribe,\n        successCallback: (res: any) => void,\n        failCallback?: () => void\n    ) {\n        BundleMgr.getInstance().loadResFromBundle(resDesc, (res: any) => {\n            if (res) {\n                successCallback && successCallback(cc.instantiate(res));\n            } else {\n                failCallback && failCallback();\n            }\n        });\n    }\n}\n","import { H5Util } from \"../../platform/H5Util\";\nimport { PlatformType } from \"../../platform/PlatformType\";\nimport { webm, mp4 } from \"./media\";\n\n// Detect iOS browsers < version 10\nconst oldIOS = () =>\n    typeof navigator !== \"undefined\" &&\n    parseFloat(\n        (\n            \"\" +\n            (/CPU.*OS ([0-9_]{3,4})[0-9_]{0,1}|(CPU like).*AppleWebKit.*Mobile/i.exec(\n                navigator.userAgent\n            ) || [0, \"\"])[1]\n        )\n            .replace(\"undefined\", \"3_2\")\n            .replace(\"_\", \".\")\n            .replace(\"_\", \"\")\n    ) < 10 &&\n    !window.MSStream;\n\nconst nativeWakeLock = () => \"wakeLock\" in navigator;\n\nclass NoSleep {\n    private enabled: boolean = false;\n    private _wakeLock: any;\n    public noSleepTimer;\n    public noSleepVideo;\n\n    constructor() {\n        this.enabled = false;\n\n        if (nativeWakeLock()) {\n            this._wakeLock = null;\n            const handleVisibilityChange = () => {\n                if (this._wakeLock !== null && document.visibilityState === \"visible\") {\n                    this.enable();\n                }\n            };\n            document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n            document.addEventListener(\"fullscreenchange\", handleVisibilityChange);\n        } else if (oldIOS()) {\n            this.noSleepTimer = null;\n        } else {\n            // Set up no sleep video element\n            this.noSleepVideo = document.createElement(\"video\");\n\n            this.noSleepVideo.setAttribute(\"title\", document.title);\n            this.noSleepVideo.setAttribute(\"playsinline\", \"\");\n\n            this._addSourceToVideo(this.noSleepVideo, \"webm\", webm);\n            this._addSourceToVideo(this.noSleepVideo, \"mp4\", mp4);\n\n            this.noSleepVideo.addEventListener(\"loadedmetadata\", () => {\n                if (this.noSleepVideo.duration <= 1) {\n                    // webm source\n                    this.noSleepVideo.setAttribute(\"loop\", \"\");\n                } else {\n                    // mp4 source\n                    this.noSleepVideo.addEventListener(\"timeupdate\", () => {\n                        if (this.noSleepVideo.currentTime > 0.5) {\n                            this.noSleepVideo.currentTime = Math.random();\n                            this.noSleepVideo.play();\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    _addSourceToVideo(element, type, dataURI) {\n        var source = document.createElement(\"source\");\n        source.src = dataURI;\n        source.type = `video/${type}`;\n        element.appendChild(source);\n    }\n\n    get isEnabled() {\n        return this.enabled;\n    }\n\n    enable() {\n        if (nativeWakeLock()) {\n            // cc.log(`@86`);\n            return navigator.wakeLock\n                .request(\"screen\")\n                .then((wakeLock) => {\n                    // cc.log(`@90`);\n                    this._wakeLock = wakeLock;\n                    this.enabled = true;\n                    CC_DEBUG && cc.log(\"Wake Lock active.\");\n                    this._wakeLock.addEventListener(\"release\", () => {\n                        // ToDo: Potentially emit an event for the page to observe since\n                        // Wake Lock releases happen when page visibility changes.\n                        // (https://web.dev/wakelock/#wake-lock-lifecycle)\n                        CC_DEBUG && cc.log(\"Wake Lock released.\");\n                    });\n                })\n                .catch((err) => {\n                    this.enabled = false;\n                    CC_DEBUG && cc.error(`${err.name}, ${err.message}`);\n                    throw err;\n                });\n        } else if (oldIOS()) {\n            this.disable();\n            CC_DEBUG && cc.warn(`\n              NoSleep enabled for older iOS devices. This can interrupt\n              active or long-running network requests from completing successfully.\n              See https://github.com/richtr/NoSleep.js/issues/15 for more details.\n            `);\n            this.noSleepTimer = window.setInterval(() => {\n                if (!document.hidden) {\n                    window.location.href = window.location.href.split(\"#\")[0];\n                    window.setTimeout(window.stop, 0);\n                }\n            }, 15000);\n            this.enabled = true;\n            return Promise.resolve();\n        } else {\n            CC_DEBUG && cc.log(`@128`);\n            let playPromise = this.noSleepVideo.play();\n            return playPromise\n                .then((res) => {\n                    CC_DEBUG && cc.log(`@133`);\n                    this.enabled = true;\n                    return res;\n                })\n                .catch((err) => {\n                    this.enabled = false;\n                    throw err;\n                });\n        }\n    }\n\n    disable() {\n        if (nativeWakeLock()) {\n            if (this._wakeLock) {\n                this._wakeLock.release();\n            }\n            this._wakeLock = null;\n        } else if (oldIOS()) {\n            if (this.noSleepTimer) {\n                CC_DEBUG && cc.warn(`\n                NoSleep now disabled for older iOS devices.\n              `);\n                window.clearInterval(this.noSleepTimer);\n                this.noSleepTimer = null;\n            }\n        } else {\n            this.noSleepVideo.pause();\n        }\n        this.enabled = false;\n    }\n}\nclass PreventScreenSleep {\n    private _platform = null;\n\n    constructor() {\n        if (CC_EDITOR) return;\n        this._startPreventScreenSleep();\n    }\n\n    private _startPreventScreenSleep() {\n        this._platform = H5Util.getInstance().platform;\n        if (this._platform !== PlatformType.H5) return;\n\n        let isMobile = cc.sys.isMobile;\n        if (!isMobile) return;\n\n        let noSleep = new NoSleep();\n\n        const addMask = () => {\n            let maskDiv = document.createElement(\"div\");\n            maskDiv.setAttribute(\n                \"style\",\n                \"position:absolute; top:0; left:0; right:0; bottom:0; z-index:99999;\"\n            );\n            maskDiv.setAttribute(\"class\", \"sp_mask\");\n            document.body.insertBefore(maskDiv, null);\n\n            let maskNode = document.querySelectorAll(\".sp_mask\")[0];\n            maskNode?.addEventListener(\n                \"click\",\n                function enableNoSleep(e) {\n                    CC_DEBUG && cc.log(`@194 ===================> `);\n                    maskNode.setAttribute(\"style\", \"display: none\");\n                    noSleep.enable();\n                },\n                false\n            );\n        };\n\n        setTimeout(() => {\n            addMask();\n        }, 1000);\n    }\n}\n\nexport default new PreventScreenSleep();\n","export function previewFunctionParams(callfunc: (...args) => any) {\n    return function (\n        target: Object,\n        propertyKey: string | symbol,\n        descriptor: TypedPropertyDescriptor<any>\n    ): TypedPropertyDescriptor<any> {\n        if (CC_PREVIEW) {\n            let oldValue = descriptor.value as Function;\n            descriptor.value = function (...args) {\n                return oldValue.apply(this, [...callfunc(...args)]);\n            };\n        }\n\n        return descriptor;\n    };\n}\n","import { VersionType } from \"./VersionType\";\n\nlet ProjectConf = {\n    version_type: VersionType.WORLD_CUP,\n};\n\nexport default ProjectConf;\n","import { IntConf } from \"./int/IntConf\";\nimport ProjectConf from \"./ProjectConf\";\n\nexport class ProjectInfo {\n    private static _instance: ProjectInfo = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new ProjectInfo();\n        }\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public GAME_VERSION = IntConf[ProjectConf.version_type].version;\n\n    public GAME_VERSION_V = \"V\" + IntConf[ProjectConf.version_type].version;\n\n    public GAME_BUILD_NUMBER = \"1\";\n\n    public DEFAULT_HOST: string[] = IntConf[ProjectConf.version_type].domin;\n\n    public TIME_ZONE_DIFF: number = IntConf[ProjectConf.version_type].time_zone_diff;\n\n    public LIGHTER_HOST: string = IntConf[ProjectConf.version_type].lighter;\n\n    public CurrentIntConf = IntConf[ProjectConf.version_type];\n}\n","export class ResLoader {\n    private static _instance: ResLoader = null;\n\n    private bundles = <cc.AssetManager.Bundle>{};\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new ResLoader();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() { }\n\n    /**\n     * 加载bundle\n     * @param bundleName bundle名称\n     * @param callFunc 加载后回调\n     */\n    public loadBundle(bundleName: string, callFunc?: (bundle: cc.AssetManager.Bundle) => void) {\n        if (this.bundles[bundleName]) {\n            CC_DEBUG &&\n                CC_DEBUG && cc.log(\n                    \"[ResLoader loadBundle]:Please do not load the bundle repeatedly :\",\n                    bundleName\n                );\n            callFunc && callFunc(this.bundles[bundleName]);\n            return;\n        }\n\n        cc.assetManager.loadBundle(bundleName, (err: Error, bundle: cc.AssetManager.Bundle) => {\n            if (err) {\n                CC_DEBUG &&\n                    CC_DEBUG && cc.error(\"[ResLoader loadBundle]:Load AssetsBundle Error: \" + bundleName);\n                this.bundles[bundleName] = null;\n                callFunc && callFunc(null);\n            } else {\n                CC_DEBUG &&\n                    CC_DEBUG && cc.log(\"[ResLoader loadBundle]:Load AssetsBundle Success: \" + bundleName);\n                this.bundles[bundleName] = bundle;\n                callFunc && callFunc(bundle);\n            }\n        });\n    }\n\n    /**\n     * 异步加载bundle\n     * @param bundleName bundle名称\n     */\n    public asyncLoadBundle(bundleName: string): Promise<cc.AssetManager.Bundle> {\n        return new Promise((resolve, reject) => {\n            if (this.bundles[bundleName]) {\n                CC_DEBUG &&\n                    CC_DEBUG && cc.log(\n                        \"[ResLoader loadBundle]:Please do not load the bundle repeatedly :\",\n                        bundleName\n                    );\n                resolve(this.bundles[bundleName]);\n            } else {\n                cc.assetManager.loadBundle(\n                    bundleName,\n                    (err: Error, bundle: cc.AssetManager.Bundle) => {\n                        if (err) {\n                            CC_DEBUG &&\n                                CC_DEBUG && cc.error(\n                                    \"[ResLoader loadBundle]:Load AssetsBundle Error: \" + bundleName\n                                );\n                            this.bundles[bundleName] = null;\n                            resolve(null);\n                        } else {\n                            CC_DEBUG &&\n                                CC_DEBUG && cc.log(\n                                    \"[ResLoader loadBundle]:Load AssetsBundle Success: \" +\n                                    bundleName\n                                );\n                            this.bundles[bundleName] = bundle;\n                            resolve(bundle);\n                        }\n                    }\n                );\n            }\n        });\n    }\n\n    /**\n     * 从bundle中加载场景 如果bundle还没有加载那么会先加载bundle 然后再加载bundle中的场景\n     * @param bundleName bundle名称\n     * @param sceneName 场景名字\n     * @param callFunc 加载后回调 有可能场景资源加载失败 那么回调回去的资源有可能为null\n     */\n    public loadSceneFromBundle(\n        bundleName: string,\n        sceneName: string,\n        callFunc: (sceneAsset: cc.SceneAsset) => void\n    ) {\n        let bundle: cc.AssetManager.Bundle = this.bundles[bundleName];\n        if (!bundle) {\n            this.loadBundle(bundleName, (assetBundle: cc.AssetManager.Bundle) => {\n                if (assetBundle) {\n                    this.loadBunleScene(assetBundle, sceneName, callFunc);\n                } else {\n                    CC_DEBUG && cc.error(\"[ResLoader loadSceneFromBundle]:bundle is not exist!!!!\");\n                    callFunc && callFunc(null);\n                }\n            });\n        } else {\n            this.loadBunleScene(bundle, sceneName, callFunc);\n        }\n    }\n\n    /**\n     * 从bundle中加载单个资源 如果bundle还没有加载那么会先加载bundle 然后再加载bundle中的资源\n     * @param bundleName bundle名称\n     * @param resDesObj 资源描述对象\n     * @param callFunc 加载后回调 有可能资源加载失败 那么回调回去的单个资源有可能为null\n     */\n    public loadResFromBundle(\n        bundleName: string,\n        resDesObj: IResDescribe,\n        callFunc: (res: any) => void\n    ) {\n        let bundle: cc.AssetManager.Bundle = this.bundles[bundleName];\n        if (!bundle) {\n            this.loadBundle(bundleName, (assetBundle: cc.AssetManager.Bundle) => {\n                if (assetBundle) {\n                    this.loadBunleRes(assetBundle, resDesObj.resPath, resDesObj.type, callFunc);\n                } else {\n                    CC_DEBUG && cc.error(\"[ResLoader loadResFromBundle]:bundle is not exist!!!!\");\n                    callFunc && callFunc(null);\n                }\n            });\n        } else {\n            this.loadBunleRes(bundle, resDesObj.resPath, resDesObj.type, callFunc);\n        }\n    }\n\n    /**\n     * 从bundle中获取单个资源 bundle以及bundle中的资源必须已经提前载入了以后才能正确获取到\n     * @param bundleName bundle名称\n     * @param resDesObj 资源描述对象\n     */\n    public getResFromBundle(bundleName: string, resDesObj: IResDescribe): any {\n        let bundle: cc.AssetManager.Bundle = this.bundles[bundleName];\n        if (!bundle) {\n            CC_DEBUG &&\n                CC_DEBUG && cc.error(\"[ResLoader getRes]:bundle is not exist!!!\", bundleName, resDesObj);\n            return null;\n        }\n\n        return bundle.get(resDesObj.resPath, resDesObj.type);\n    }\n\n    /**\n     * 异步从bundle中异步加载单个资源 如果bundle还没有加载那么会先加载bundle 然后再加载bundle中的资源\n     * @param bundleName bundle名称\n     * @param resDesObj 资源描述对象\n     */\n    public asyncLoadResFromBundle(bundleName: string, resDesObj: IResDescribe): Promise<any> {\n        return new Promise((resolve, reject) => {\n            let bundle: cc.AssetManager.Bundle = this.bundles[bundleName];\n            if (!bundle) {\n                this.loadBundle(bundleName, (assetBundle: cc.AssetManager.Bundle) => {\n                    if (assetBundle) {\n                        this.loadBunleRes(\n                            assetBundle,\n                            resDesObj.resPath,\n                            resDesObj.type,\n                            (res: any) => {\n                                if (res) {\n                                    resolve(res);\n                                } else {\n                                    resolve(null);\n                                }\n                            }\n                        );\n                    } else {\n                        CC_DEBUG &&\n                            CC_DEBUG && cc.error(\"[ResLoader asyncLoadResFromBundle]:bundle is not exist!!!!\");\n                        resolve(null);\n                    }\n                });\n            } else {\n                this.loadBunleRes(bundle, resDesObj.resPath, resDesObj.type, (res: any) => {\n                    if (res) {\n                        resolve(res);\n                    } else {\n                        resolve(null);\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Bundle加载dir资源 如果bundle还没有加载那么会先加载bundle 然后再加载bundle中dir的资源\n     * @param bundleName bundle名称\n     * @param resDir 资源目录\n     * @param type 资源类型\n     * @param callFunc 回调函数 返回资源列表 有可能返回null\n     */\n    public loadResDirFromBundle<T extends typeof cc.Asset>(\n        bundleName: string,\n        resDir: string,\n        type: T,\n        callFunc?: (resources: Array<T>) => void\n    ) {\n        let bundle: cc.AssetManager.Bundle = this.bundles[bundleName];\n        if (!bundle) {\n            this.loadBundle(bundleName, (assetBundle: cc.AssetManager.Bundle) => {\n                if (assetBundle) {\n                    this.loadBundleResDir(assetBundle, resDir, type, callFunc);\n                } else {\n                    CC_DEBUG &&\n                        CC_DEBUG && cc.error(\"[ResLoader loadResDirFromBundle]:bundle is not exist!!!!\");\n                    callFunc && callFunc(null);\n                }\n            });\n        } else {\n            this.loadBundleResDir(bundle, resDir, type, callFunc);\n        }\n    }\n\n    /**\n     * 异步从bundle中加载dir资源 如果bundle还没有加载那么会先加载bundle 然后再加载bundle中dir的资源\n     * @param bundleName bundle名称\n     * @param resDir 资源目录\n     * @param type 资源类型\n     */\n    public asyncLoadResDirFromBundle<T extends typeof cc.Asset>(\n        bundleName: string,\n        resDir: string,\n        type: T\n    ): Promise<InstanceType<T>[]> {\n        return new Promise((resolve, reject) => {\n            let bundle: cc.AssetManager.Bundle = this.bundles[bundleName];\n            if (!bundle) {\n                this.loadBundle(bundleName, (assetBundle: cc.AssetManager.Bundle) => {\n                    if (assetBundle) {\n                        this.loadBundleResDir(assetBundle, resDir, type, (resources: any[]) => {\n                            if (resources) {\n                                resolve(resources);\n                            } else {\n                                resolve(null);\n                            }\n                        });\n                    } else {\n                        CC_DEBUG &&\n                            CC_DEBUG && cc.error(\"[ResLoader asyncLoadResDirFromBundle]:bundle is not exist!\");\n                        resolve(null);\n                    }\n                });\n            } else {\n                this.loadBundleResDir(bundle, resDir, type, (resources: any[]) => {\n                    if (resources) {\n                        resolve(resources);\n                    } else {\n                        resolve(null);\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * 根据配置文件 从bundle中加载所有需要优先加载的资源\n     * @param bundleResInfo bnudle资源信息\n     * @param progressFunc 资源加载进度回调\n     */\n    public loadResPackageFromBundle(\n        bundleResInfo: IBundleResInfo,\n        progressFunc?: (total: number, cur: number) => void,\n        failed?: () => void\n    ) {\n        this.loadResPackage(bundleResInfo, progressFunc, failed);\n    }\n\n    /**\n     * 加载一个ojb对象中的所有资源\n     * @param bundleName bundleName bundle名称\n     * @param obj obj对象\n     * @param progressFunc 资源加载进度回调\n     */\n    public async loadResWithObj(\n        bundleName: string,\n        obj: Object,\n        progressFunc?: (total: number, cur: number) => void,\n        failed?: () => void\n    ) {\n        let resDescribeList: IResDescribe[] = this.getResDescribeList(obj);\n        let totalLoadNum: number = resDescribeList.length;\n        let curLoadNum: number = 0;\n        let bundle: cc.AssetManager.Bundle = this.bundles[bundleName];\n        if (!bundle) {\n            bundle = await this.asyncLoadBundle(bundleName);\n        }\n        if (!bundle) {\n            failed?.();\n            return;\n        }\n\n        if (totalLoadNum == 0) {\n            progressFunc && progressFunc(0, 0);\n            return;\n        }\n\n        for (let i = 0; i < totalLoadNum; i++) {\n            this.loadBunleRes(\n                bundle,\n                resDescribeList[i].resPath,\n                resDescribeList[i].type,\n                (res: cc.Asset) => {\n                    if (!res) {\n                        failed?.();\n                    }\n                    res?.addRef();\n                    curLoadNum++;\n                    progressFunc && progressFunc(totalLoadNum, curLoadNum);\n                }\n            );\n        }\n    }\n\n    /**\n     * 根据配置文件 从bundle中加载所有非优先加载的资源 主要是用来进入游戏后 预加载一些优先级低的资源 但是有个问题需要注意 预加载不能停止 也就是说退出游戏时最好是等待预加载完再退\n     * @param bundleResInfo bnudle资源信息\n     * @param progressFunc 加载进度回调\n     */\n    public preloadResPackageFromBundle(\n        bundleResInfo: IBundleResInfo,\n        progressFunc?: (total: number, cur: number) => void\n    ) {\n        this.preloadResPackage(bundleResInfo, progressFunc);\n    }\n\n    /**\n     * 从bunlde中预加载单个资源\n     * @param bundleName bundle名称\n     * @param resDesObj 资源描述对象\n     * @param callFunc 加载回调\n     */\n    public preloadResFromBundle(\n        bundleName: string,\n        resDesObj: IResDescribe,\n        callFunc?: () => void\n    ) {\n        let bundle: cc.AssetManager.Bundle = this.bundles[bundleName];\n        if (!bundle) {\n            this.loadBundle(bundleName, (assetBundle: cc.AssetManager.Bundle) => {\n                if (assetBundle) {\n                    this.preloadBunleRes(assetBundle, resDesObj.resPath, resDesObj.type, callFunc);\n                } else {\n                    CC_DEBUG &&\n                        CC_DEBUG && cc.error(\"[ResLoader preloadResFromBundle]:bundle is not exist!!!!\");\n                    callFunc && callFunc();\n                }\n            });\n        } else {\n            this.preloadBunleRes(bundle, resDesObj.resPath, resDesObj.type, callFunc);\n        }\n    }\n\n    /**\n     * 释放bundle中的所有资源 然后再释放bundle\n     * @param bundleResInfo bundle资源信息\n     */\n    public releaseResPackageFromBundle(bundleResInfo: IBundleResInfo) {\n        CC_DEBUG &&\n            CC_DEBUG && cc.log(\n                \"[ResLoader releaseResPackageFromBundle]:Before release\",\n                bundleResInfo.bundleName,\n                cc.assetManager.assets.count\n            );\n        if (bundleResInfo.priority) {\n            this.relaseResWithObj(bundleResInfo.bundleName, bundleResInfo.priority);\n        }\n        if (bundleResInfo.unpriority) {\n            this.relaseResWithObj(bundleResInfo.bundleName, bundleResInfo.unpriority);\n        }\n        if (bundleResInfo.loadOnDemand) {\n            this.relaseResWithObj(bundleResInfo.bundleName, bundleResInfo.loadOnDemand);\n        }\n        CC_DEBUG &&\n            CC_DEBUG && cc.log(\n                \"[ResLoader releaseResPackageFromBundle]:After release\",\n                bundleResInfo.bundleName,\n                cc.assetManager.assets.count\n            );\n        if (this.bundles[bundleResInfo.bundleName]) {\n            cc.assetManager.removeBundle(this.bundles[bundleResInfo.bundleName]);\n            this.bundles[bundleResInfo.bundleName] = null;\n        }\n    }\n\n    /**\n     * 释放bundle中的单个资源\n     * @param bundleName bundle名称\n     * @param resDesObj 资源描述对象\n     */\n    public releaseResFormBundle(bundleName: string, resDesObj: IResDescribe) {\n        let bundle: cc.AssetManager.Bundle = this.bundles[bundleName];\n        if (!bundle) {\n            return;\n        }\n\n        // cc.log(\"[ResLoader releaseResFormBundle]:release Res \" + resDesObj.resPath);\n        if (resDesObj.type) {\n            bundle.release(resDesObj.resPath, resDesObj.type);\n        } else {\n            bundle.release(resDesObj.resPath);\n        }\n    }\n\n    /**\n     * 释放Bundle中所有资源,然后释放bundle\n     * @param bundleName\n     */\n    public releaseBundleAll(bundleName: string) {\n        let bundle: cc.AssetManager.Bundle = this.bundles[bundleName];\n        if (bundle) {\n            CC_DEBUG &&\n                CC_DEBUG && cc.log(\n                    \"[ResLoader bundleReleaseAll]:Before release\",\n                    bundleName,\n                    cc.assetManager.assets.count\n                );\n            bundle.releaseAll();\n            cc.assetManager.removeBundle(bundle);\n            CC_DEBUG &&\n                CC_DEBUG && cc.log(\n                    \"[ResLoader bundleReleaseAll]:After release\",\n                    bundleName,\n                    cc.assetManager.assets.count\n                );\n        }\n        this.bundles[bundleName] = null;\n    }\n\n    /**\n     * 异步加载远程图片资源 如果加载成功会返回一个cc.SpriteFrame类型的资源\n     * @param imageUrl url路径\n     * @param imageSuffix 参数可选 图片的扩展名\n     */\n    public asyncLoadSpriteFrameFromRemote(\n        imageUrl: string,\n        imageSuffix: string = \".png\"\n    ): Promise<cc.SpriteFrame> {\n        return new Promise<cc.SpriteFrame>((resolve, reject) => {\n            if (!imageUrl || imageUrl == \"\") {\n                CC_DEBUG &&\n                    CC_DEBUG && cc.error(\"[ResLoader asyncLoadSpriteFrameFromRemote]:invalid image url\");\n                resolve(null);\n                return;\n            }\n\n            if (\n                imageUrl.endsWith(\".jpg\") ||\n                imageUrl.endsWith(\".jpeg\") ||\n                imageUrl.endsWith(\".png\")\n            ) {\n                // 图片地址含后缀的下载方法\n                cc.assetManager.loadRemote(imageUrl, (error: Error, texture: cc.Texture2D) => {\n                    if (error) {\n                        CC_DEBUG &&\n                            CC_DEBUG && cc.error(\n                                \"[ResLoader asyncLoadSpriteFrameFromRemote]:load remote image failed. url:\",\n                                imageUrl\n                            );\n                        CC_DEBUG && cc.error(error);\n                        resolve(null);\n                        return;\n                    }\n                    resolve(new cc.SpriteFrame(texture));\n                });\n            } else {\n                // 图片地址不含后缀的加载方法\n                cc.assetManager.loadRemote(\n                    imageUrl,\n                    { ext: imageSuffix },\n                    (error: Error, texture: cc.Texture2D) => {\n                        if (error) {\n                            CC_DEBUG &&\n                                CC_DEBUG && cc.error(\n                                    \"[ResLoader asyncLoadSpriteFrameFromRemote]:load remote image failed.  url:\",\n                                    imageUrl\n                                );\n                            CC_DEBUG && cc.error(error);\n                            resolve(null);\n                            return;\n                        }\n                        resolve(new cc.SpriteFrame(texture));\n                    }\n                );\n            }\n        });\n    }\n\n    /**\n     * 加载远程图片资源 如果加载成功会回调一个cc.SpriteFrame类型的资源\n     * @param imageUrl url路径\n     * @param imageSuffix 参数可选 图片的扩展名\n     */\n    public loadSpriteFrameFromRemote(\n        imageUrl: string,\n        callFull: (res: cc.SpriteFrame) => void,\n        imageSuffix: string = \".png\"\n    ) {\n        if (!imageUrl || imageUrl == \"\") {\n            CC_DEBUG && cc.error(\"[ResLoader loadSpriteFrameFromRemote]:invalid image url\");\n            callFull && callFull(null);\n            return;\n        }\n\n        if (imageUrl.endsWith(\".jpg\") || imageUrl.endsWith(\".jpeg\") || imageUrl.endsWith(\".png\")) {\n            // 图片地址含后缀的下载方法\n            cc.assetManager.loadRemote(imageUrl, (error: Error, texture: cc.Texture2D) => {\n                if (error) {\n                    CC_DEBUG &&\n                        CC_DEBUG && cc.error(\n                            \"[ResLoader loadSpriteFrameFromRemote]:load remote image failed. url:\",\n                            imageUrl\n                        );\n                    CC_DEBUG && cc.error(error);\n                    callFull && callFull(null);\n                    return;\n                }\n                callFull && callFull(new cc.SpriteFrame(texture));\n            });\n        } else {\n            // 图片地址不含后缀的加载方法\n            cc.assetManager.loadRemote(\n                imageUrl,\n                { ext: imageSuffix },\n                (error: Error, texture: cc.Texture2D) => {\n                    if (error) {\n                        CC_DEBUG &&\n                            CC_DEBUG && cc.error(\n                                \"[ResLoader loadSpriteFrameFromRemote]:load remote image failed.  url:\",\n                                imageUrl\n                            );\n                        CC_DEBUG && cc.error(error);\n                        callFull && callFull(null);\n                        return;\n                    }\n                    callFull && callFull(new cc.SpriteFrame(texture));\n                }\n            );\n        }\n    }\n\n    private async loadResPackage(\n        bundleResInfo: IBundleResInfo,\n        progressFunc?: (total: number, cur: number) => void,\n        failed?: () => void\n    ) {\n        this.loadResWithObj(bundleResInfo.bundleName, bundleResInfo.priority, progressFunc, failed);\n    }\n\n    private async preloadResPackage(\n        bundleResInfo: IBundleResInfo,\n        progressFunc?: (total: number, cur: number) => void\n    ) {\n        let resDescribeList: IResDescribe[] = this.getResDescribeList(bundleResInfo.unpriority);\n        let totalLoadNum: number = resDescribeList.length;\n        let curLoadNum: number = 0;\n        let bundle: cc.AssetManager.Bundle = this.bundles[bundleResInfo.bundleName];\n        if (!bundle) {\n            bundle = await this.asyncLoadBundle(bundleResInfo.bundleName);\n        }\n\n        if (totalLoadNum == 0) {\n            progressFunc && progressFunc(0, 0);\n            return;\n        }\n\n        for (let i = 0; i < totalLoadNum; i++) {\n            this.preloadBunleRes(\n                bundle,\n                resDescribeList[i].resPath,\n                resDescribeList[i].type,\n                () => {\n                    curLoadNum++;\n                    progressFunc && progressFunc(totalLoadNum, curLoadNum);\n                }\n            );\n        }\n    }\n\n    private relaseResWithObj(bundleName: string, obj: Object) {\n        let resDescribeList: IResDescribe[] = this.getResDescribeList(obj);\n        for (let i = 0, len = resDescribeList.length; i < len; i++) {\n            this.releaseResFormBundle(bundleName, resDescribeList[i]);\n        }\n    }\n\n    private getResDescribeList(obj: Object): IResDescribe[] {\n        let resList: IResDescribe[] = [];\n        this.traversalObj(obj, resList);\n        return resList;\n    }\n\n    private traversalObj(obj: Object, resList: IResDescribe[]) {\n        for (const key in obj) {\n            let resObj = obj[key];\n            if (resObj.hasOwnProperty(\"resPath\")) {\n                resList.push(resObj);\n            } else {\n                if (Array.isArray(resObj)) {\n                    for (let i = 0, len = resObj.length; i < len; i++) {\n                        resList.push(resObj[i]);\n                    }\n                } else {\n                    this.traversalObj(resObj, resList);\n                }\n            }\n        }\n    }\n\n    private preloadBunleRes<T extends typeof cc.Asset>(\n        bundle: cc.AssetManager.Bundle,\n        resPath: string,\n        type: T,\n        callFunc: () => void\n    ) {\n        bundle.preload(resPath, type, (error: Error, items: cc.AssetManager.RequestItem[]) => {\n            if (error) {\n                CC_DEBUG &&\n                    CC_DEBUG && cc.error(\n                        \"[ResLoader preloadBunleRes]:perload Res \" + resPath + \" error: \",\n                        error\n                    );\n            } else {\n                CC_DEBUG &&\n                    CC_DEBUG && cc.log(\"[ResLoader preloadBunleRes]:perload Res \" + resPath + \" success!\");\n            }\n            callFunc && callFunc();\n        });\n    }\n\n    private loadBunleScene(\n        bundle: cc.AssetManager.Bundle,\n        resPath: string,\n        callFunc: (sceneAsset: cc.SceneAsset) => void\n    ) {\n        bundle.loadScene(resPath, (error: Error, sceneAsset: cc.SceneAsset) => {\n            if (error) {\n                CC_DEBUG &&\n                    CC_DEBUG && cc.error(\"[ResLoader loadBunleScene]:Load Scene Asset Error: \" + resPath);\n                callFunc && callFunc(null);\n            } else {\n                CC_DEBUG &&\n                    CC_DEBUG && cc.log(\"[ResLoader loadBunleScene]:Load Scene Asset Success: \" + resPath);\n                callFunc && callFunc(sceneAsset);\n            }\n        });\n    }\n\n    private loadBunleRes<T extends typeof cc.Asset>(\n        bundle: cc.AssetManager.Bundle,\n        resPath: string,\n        type: T,\n        callFunc: (res: any) => void\n    ) {\n        if (!resPath) {\n            CC_DEBUG && cc.warn(\"[ResLoader loadBunleRes]:resPath is empty!\");\n            callFunc && callFunc(null);\n            return;\n        }\n        bundle.load(resPath, type, (error, res: any) => {\n            if (error) {\n                CC_DEBUG &&\n                    CC_DEBUG && cc.error(\"[ResLoader loadBunleRes]:load Res \" + resPath + \" error: \", error);\n                callFunc && callFunc(null);\n            } else {\n                // cc.log(\"[ResLoader loadBunleRes]:load Res \" + resPath + \" success!\");\n                callFunc && callFunc(res);\n            }\n        });\n    }\n\n    private loadBundleResDir<T extends typeof cc.Asset>(\n        bundle: cc.AssetManager.Bundle,\n        resPath: string,\n        type: T,\n        callFunc?: (resources: any[]) => void\n    ) {\n        bundle.loadDir(resPath, type, (err: Error, resources: any[]) => {\n            if (err) {\n                CC_DEBUG &&\n                    CC_DEBUG && cc.error(\n                        \"[ResLoader loadBundleResDir]:load bundle dir \" + resPath + \" error: \",\n                        err\n                    );\n                callFunc && callFunc(null);\n            } else {\n                CC_DEBUG &&\n                    CC_DEBUG && cc.log(\"[ResLoader loadBundleResDir]:load bundle dir \" + resPath + \" success!\");\n                callFunc && callFunc(resources);\n            }\n        });\n    }\n}\n","import { BundleMgr } from \"../../bd/BundleMgr\";\nexport class RichTextManager {\n  private static _instance: RichTextManager = null;\n\n  public static getInstance() {\n    if (!this._instance) {\n      this._instance = new RichTextManager();\n    }\n\n    return this._instance;\n  }\n\n  private constructor() { }\n\n  public setString(richText, richStr, resDesc?: IResDescribe, callback?) {\n    if (cc.isValid(richText)) {\n      if (richText instanceof cc.RichText) {\n      } else if (richText instanceof cc.Node) {\n        richText = richText.getComponent(cc.RichText);\n      }\n      if (cc.isValid(richText)) {\n        richText.string = richStr;\n        BundleMgr.getInstance().loadResFromBundle(resDesc, (res: any) => {\n          richText.font = res;\n          if (typeof callback === \"function\") {\n            callback();\n          }\n        });\n      }\n    }\n  }\n\n  public setImageAtlas(richText, resDesc?: IResDescribe, callback?) {\n    if (cc.isValid(richText)) {\n      if (richText instanceof cc.RichText) {\n      } else if (richText instanceof cc.Node) {\n        richText = richText.getComponent(cc.RichText);\n      }\n      richText.imageAtlas = BundleMgr.getInstance().getResFromBundle(resDesc);\n      if (typeof callback === \"function\") {\n        callback();\n      }\n    }\n  }\n}\n","import { BundleMgr } from \"../../bd/BundleMgr\";\ntype EventCallfunc = (trackEntry: sp.spine.TrackEntry, event: cc.Event) => void;\ntype EventListener = {\n    callfunc: EventCallfunc;\n    target?: any;\n    once: boolean;\n};\n\ntype TCreateInParentOptions = Partial<{\n    position: cc.Vec3;\n}>;\nexport default class SkeletonHelper {\n    public static createInParent(parent: cc.Node, options?: TCreateInParentOptions) {\n        let skeletonNode = new cc.Node(\"skeletonNode\");\n        skeletonNode.parent = parent;\n        if (options && options.position) {\n            skeletonNode.position = options.position;\n        }\n        let skeleton: sp.Skeleton = skeletonNode.addComponent(sp.Skeleton);\n\n        return new SkeletonHelper(skeleton);\n    }\n    public static create(skeleton: sp.Skeleton) {\n        return new SkeletonHelper(skeleton);\n    }\n\n    private _eventListeners: { [eventName: string]: EventListener[] } = {};\n\n    constructor(private _skeleton: sp.Skeleton) {\n        this._skeleton.setEventListener(this.onSkeletonEvent.bind(this));\n    }\n\n    public destroy() {\n        this._skeleton?.node?.destroy();\n    }\n    public getNode() {\n        return this._skeleton.node;\n    }\n\n    public setData(data: sp.SkeletonData) {\n        this._skeleton.skeletonData = data;\n    }\n\n    public load(res: IResDescribe) {\n        return BundleMgr.getInstance()\n            .loadResFromBundle<sp.SkeletonData>(res)\n            .then((data) => {\n                if (data) {\n                    this._skeleton.skeletonData = data;\n                }\n            });\n    }\n    public hasAnimation(animName: string) {\n        if (!this.getAnimationNames().includes(animName)) {\n            return false;\n        }\n        return true;\n    }\n\n    public getAnimations(): { [animName: string]: any } {\n        return this._skeleton.skeletonData?.skeletonJson?.animations ?? {};\n    }\n\n    public getAnimationNames(): string[] {\n        return Object.keys(this.getAnimations());\n    }\n\n    public async tryPlay(\n        animName?: string,\n        options?: {\n            loop?: boolean;\n            //动画起始百分比0-1  1会保留播放最后一帧\n            begin?: number;\n        }\n    ) {\n        if (!this.hasAnimation(animName)) {\n            return;\n        }\n\n        return this.play(animName, options);\n    }\n\n    public play(\n        animName?: string,\n        options?: {\n            loop?: boolean;\n            //动画起始百分比0-1  1会保留播放最后一帧\n            begin?: number;\n            timeScale?: number;\n        }\n    ) {\n        return new Promise((resolve) => {\n            this._skeleton.setCompleteListener(() => {\n                resolve(true);\n            });\n            const animation =\n                animName ?? this._skeleton.getState()?.data?.animations?.[0]?.name ?? \"\";\n\n            if (!animation) {\n                if (CC_DEBUG) {\n                    CC_DEBUG && cc.warn(\"SkeletonHelper play animation Name is Empty!\");\n                }\n            }\n\n            if (!this.hasAnimation(animation)) {\n                CC_DEBUG &&\n                    cc.warn(\n                        `SkeletonHelper play animation not find animName:${animation}!, skeletonData:${this._skeleton.skeletonData.name}`\n                    );\n                resolve(false);\n                return;\n            }\n\n            let trackEntry: sp.spine.TrackEntry = this._skeleton.setAnimation(\n                0,\n                animation,\n                options?.loop ?? false\n            );\n            if (!trackEntry) {\n                CC_DEBUG && cc.warn(\"SkeletonHelper play animation Name failed!\");\n                resolve(false);\n                return;\n            }\n            trackEntry.animationStart = trackEntry.animationEnd * (options?.begin ?? 0);\n            this._skeleton.paused = false;\n            this._skeleton.timeScale = options?.timeScale ?? 1;\n        });\n    }\n\n    public pause(\n        animName?: string,\n        options?: {\n            //动画起始百分比0-1  1会保留播放最后一帧\n            begin?: number;\n        }\n    ) {\n        this.play(animName, options);\n        this._skeleton.paused = true;\n    }\n\n    public onBonePos(boneName: string, callfunc: (position: cc.Vec3) => void) {\n        const boneNodes = this.getBones(boneName);\n        // 取第一个骨骼作为挂点\n        let boneNode = boneNodes[0];\n        boneNode.on(cc.Node.EventType.POSITION_CHANGED, () => {\n            callfunc(boneNode.convertToWorldSpaceAR(cc.v3()));\n        });\n    }\n\n    public addBone(boneName: string, node: cc.Node): void {\n        const boneNodes = this.getBones(boneName);\n        // 取第一个骨骼作为挂点\n        let boneNode = boneNodes[0];\n\n        node.parent = boneNode;\n    }\n\n    public getBones(boneName: string): cc.Node[] {\n        const attachUtil: sp.sp.AttachUtil = this._skeleton[\"attachUtil\"];\n        attachUtil.generateAttachedNodes(boneName);\n        const boneNodes = attachUtil.getAttachedNodes(boneName);\n\n        return boneNodes;\n    }\n\n    public onEvent(\n        eventName: string,\n        callfunc: EventCallfunc,\n        target?: any,\n        once: boolean = true\n    ): void {\n        const eventListener =\n            this._eventListeners[eventName] || (this._eventListeners[eventName] = []);\n\n        eventListener.push({\n            callfunc,\n            target,\n            once,\n        });\n    }\n\n    private onSkeletonEvent(trackEntry: sp.spine.TrackEntry, event: sp.spine.Event): void {\n        const eventName = event.data.name;\n        const eventListners = this._eventListeners[eventName];\n        if (!eventListners) {\n            return;\n        }\n\n        for (let i = eventListners.length - 1; i >= 0; i--) {\n            const eventListner = eventListners[i];\n\n            eventListner.callfunc.call(eventListner.target, trackEntry, event);\n\n            if (eventListner.once) {\n                eventListners.splice(i, 1);\n            }\n        }\n    }\n}\n","export enum SkinType {\n    FINAL = \"skin-final\",\n    BALL = \"skin-ball\",\n    WORLD_CUP = \"skin-world_cup\",\n    LIGHT = \"skin-light\",\n}\n","import { BundleMgr } from \"../../bd/BundleMgr\";\n\nexport class SpineManager {\n    private static _instance: SpineManager = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new SpineManager();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    private getSpine(node) {\n        let resultSpine = null;\n        if (cc.isValid(node)) {\n            if (node instanceof sp.Skeleton) {\n                resultSpine = node;\n            } else if (node instanceof cc.Node) {\n                resultSpine = node.getComponent(sp.Skeleton);\n                if (!resultSpine) {\n                    resultSpine = node.addComponent(sp.Skeleton);\n                }\n            }\n        }\n        return resultSpine;\n    }\n\n    public loadSpineBundle(\n        node,\n        resDesc: IResDescribe,\n        animationOption,\n        completeCallback?,\n        eventListener?\n    ) {\n        let self = this;\n        let spine = self.getSpine(node);\n\n        if (!cc.isValid(spine)) {\n            return;\n        }\n\n        BundleMgr.getInstance().loadResFromBundle(resDesc, (res: any) => {\n            if (res) {\n                let trackIndex: number = 0;\n                let name: string = \"\";\n                let loop: boolean = true;\n                if (animationOption) {\n                    trackIndex = animationOption.trackIndex || 0;\n                    name = animationOption.name || \"\";\n                    if (animationOption.loop != null && animationOption.loop != undefined) {\n                        loop = animationOption.loop;\n                    }\n                }\n                spine.skeletonData = res;\n                spine.setAnimation(trackIndex, name, loop);\n\n                if (typeof eventListener == \"function\") {\n                    spine.setEventListener(function (trackEntry, eventData) {\n                        eventListener(trackEntry, eventData);\n                    });\n                }\n                if (typeof completeCallback === \"function\") {\n                    spine.setCompleteListener(function () {\n                        completeCallback();\n                    });\n                }\n            }\n        });\n    }\n\n    public loadSkeletonBundle(\n        skeletonNode,\n        resDesc: IResDescribe,\n        successCallback,\n        failedCallback = null\n    ) {\n        let self = this;\n        let skeleton: sp.Skeleton = self.getSpine(skeletonNode);\n\n        if (cc.isValid(skeleton)) {\n            BundleMgr.getInstance().loadResFromBundle(resDesc, (res: any) => {\n                if (res) {\n                    skeleton.skeletonData = res;\n                    skeleton.defaultAnimation;\n                    if (successCallback) {\n                        successCallback();\n                    }\n                } else {\n                    if (failedCallback) {\n                        failedCallback();\n                    }\n                }\n            });\n        }\n    }\n\n    public loadSpineWithSkinBundle(\n        node,\n        resDesc: IResDescribe,\n        animationOption,\n        loadCallback?,\n        completeCallback?\n    ) {\n        let self = this;\n        let spine = self.getSpine(node);\n\n        if (cc.isValid(spine)) {\n            BundleMgr.getInstance().loadResFromBundle(resDesc, (res: any) => {\n                if (res) {\n                    let trackIndex: number = 0;\n                    let name: string = \"\";\n                    let loop: boolean = true;\n                    let skin: string = \"\";\n                    if (animationOption) {\n                        trackIndex = animationOption.trackIndex || 0;\n                        name = animationOption.name || \"\";\n                        if (animationOption.loop != null && animationOption.loop != undefined) {\n                            loop = animationOption.loop;\n                        }\n                        skin = animationOption.skin || \"\";\n                    }\n                    spine.skeletonData = res;\n                    if (skin != \"\") {\n                        spine.setSkin(skin);\n                        spine.defaultSkin = skin;\n                    }\n                    if (typeof completeCallback === \"function\") {\n                        spine.setCompleteListener(function () {\n                            completeCallback();\n                        });\n                    }\n                    spine.setAnimation(trackIndex, name, loop);\n                    if (typeof loadCallback === \"function\") {\n                        loadCallback();\n                    }\n                }\n            });\n        }\n    }\n}\n","import { BundleMgr } from \"../../bd/BundleMgr\";\n\nexport class SpriteManager {\n    private static _instance: SpriteManager = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new SpriteManager();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public createSpriteNode(name?: string) {\n        let node = new cc.Node(\"sprite_\" + name || \"sprite\");\n        node.addComponent(cc.Sprite);\n        node.name = name || \"sprite\";\n        return node;\n    }\n\n    public setSpriteFrame(node, spriteFrame) {\n        let spriteNode = null;\n        if (cc.isValid(node) && spriteFrame) {\n            if (node instanceof cc.Sprite) {\n            } else if (node instanceof cc.Node) {\n                spriteNode = node.getComponent(cc.Sprite);\n                if (!spriteNode) {\n                    spriteNode = node.addComponent(cc.Sprite);\n                }\n            }\n            if (cc.isValid(spriteNode)) {\n                spriteNode.spriteFrame = spriteFrame;\n            }\n        }\n    }\n\n    public loadSpriteForNodeBundle(node: cc.Node, resDesc: IResDescribe, callback?: () => void) {\n        if (cc.isValid(node)) {\n            let sprite = node.getComponent(cc.Sprite);\n            BundleMgr.getInstance().loadResFromBundle(resDesc, (res: any) => {\n                if (res) {\n                    if (cc.isValid(sprite)) {\n                        sprite.spriteFrame = res;\n                        callback && callback();\n                    }\n                }\n            });\n        }\n    }\n\n    public loadSpriteAtlasBundleForNode(\n        node: cc.Node,\n        resDesc: IResDescribe,\n        spriteName: string,\n        callback?,\n        errorCallback?\n    ) {\n        if (cc.isValid(node)) {\n            let sprite = node.getComponent(cc.Sprite);\n            this.loadSpriteAtlasBundle(sprite, resDesc, spriteName, callback, errorCallback);\n        }\n    }\n\n    public loadSpriteAtlasBundle(\n        sprite: cc.Sprite,\n        resDesc: IResDescribe,\n        spriteName: string,\n        callback?,\n        errorCallback?\n    ) {\n        BundleMgr.getInstance().loadResFromBundle(resDesc, (res: any) => {\n            if (res) {\n                let spriteFrame = res.getSpriteFrame(spriteName);\n                if (spriteFrame) {\n                    sprite.spriteFrame = spriteFrame;\n                    if (typeof callback === \"function\") {\n                        callback();\n                    }\n                } else {\n                    if (typeof errorCallback === \"function\") {\n                        errorCallback();\n                    }\n                }\n            } else {\n                if (typeof errorCallback === \"function\") {\n                    errorCallback();\n                }\n            }\n        });\n    }\n\n    public getSpriteFromCommonAtlasBundle(resDesc: IResDescribe, spriteName: string) {\n        let atlas: cc.SpriteAtlas = BundleMgr.getInstance().getResFromBundle(resDesc);\n\n        let spriteFrame = null;\n        if (atlas) {\n            spriteFrame = atlas.getSpriteFrame(spriteName);\n        }\n        return spriteFrame;\n    }\n\n    public getSpriteBundle(resDesc: IResDescribe) {\n        return BundleMgr.getInstance().getResFromBundle(resDesc);\n    }\n\n    public loadSpriteBundle(resDesc: IResDescribe, callback?: (res: cc.SpriteFrame) => void) {\n        return BundleMgr.getInstance().loadResFromBundle<cc.SpriteFrame>(resDesc, (res: any) => {\n            if (res) {\n                callback && callback(res);\n            }\n        });\n    }\n\n    public loadRemoteUrl(node, path, callback?, errorCallback?) {\n        let spriteNode = null;\n        if (cc.isValid(node)) {\n            if (node instanceof cc.Sprite) {\n                spriteNode = node;\n            } else if (node instanceof cc.Node) {\n                spriteNode = node.getComponent(cc.Sprite);\n                if (!spriteNode) {\n                    spriteNode = node.addComponent(cc.Sprite);\n                }\n            }\n        }\n\n        if (spriteNode == null) {\n            if (typeof errorCallback === \"function\") {\n                errorCallback();\n            }\n            return;\n        }\n\n        cc.assetManager.loadRemote(path, (err, tex: any) => {\n            if (err) {\n                CC_DEBUG && cc.error(err.message || err);\n                if (typeof errorCallback === \"function\") {\n                    errorCallback();\n                }\n                return;\n            }\n\n            if (tex && tex.url && cc.isValid(spriteNode) && cc.isValid(spriteNode.node)) {\n                let spriteFrame = new cc.SpriteFrame(tex);\n                if (spriteFrame) {\n                    spriteNode.spriteFrame = spriteFrame;\n                    if (typeof callback === \"function\") {\n                        callback();\n                    }\n                } else {\n                    if (typeof errorCallback === \"function\") {\n                        errorCallback();\n                    }\n                }\n            } else {\n                if (typeof errorCallback === \"function\") {\n                    errorCallback();\n                }\n            }\n        });\n    }\n}\n","interface String {\n    format(...args: any): string;\n    limtLength(maxLen: number, replaceStr?: string): string;\n}\n\nString.prototype.format = function (...args: any) {\n    var result = this;\n    if (arguments.length > 0) {\n        if (arguments.length == 1 && typeof args == \"object\") {\n            for (var key in args) {\n                if (args[key] != undefined) {\n                    var reg = new RegExp(\"({)\" + key + \"(})\", \"g\");\n                    result = result.replace(reg, args[key]);\n                }\n            }\n        } else {\n            for (var i = 0; i < arguments.length; i++) {\n                if (arguments[i] != undefined) {\n                    var reg = new RegExp(\"({)\" + i + \"(})\", \"g\");\n                    result = result.replace(reg, arguments[i]);\n                }\n            }\n        }\n    }\n    return result;\n};\n\nString.prototype.limtLength = function (maxLen: number, replaceStr = \".\", replacePad = 3) {\n    let isOverMaxLength = this.length > maxLen;\n    let cutStr = this;\n    if (isOverMaxLength) {\n        let padStr = \"\";\n        for (let i = 0; i < replacePad; i++) {\n            padStr += replaceStr;\n        }\n        cutStr = this.substr(0, maxLen) + padStr;\n    }\n    return cutStr;\n};\n","import { Tools } from \"../Tools\";\n\n@cc._decorator.ccclass\nexport default class Time2Value {\n    private _maxStep: number = 0;\n    private _step: number = 0;\n    private _current: number = 0;\n    private _target: number = 0;\n\n    private _positive: boolean = false;\n    private callfunc: (value: number) => void;\n\n    public success: () => void;\n\n    constructor(private _total: number = 0, private _time: number = 0) {\n        cc.director.getScheduler().enableForTarget(this);\n        cc.director.getScheduler().scheduleUpdate(this, 0, false);\n    }\n\n    public destory() {\n        cc.director.getScheduler().unscheduleUpdate(this);\n    }\n\n    public positive() {\n        this._positive = true;\n        return this;\n    }\n\n    getValue(): number {\n        return this._current;\n    }\n\n    setValue(value: number, callfunc: (value: number) => void) {\n        if (this._positive) {\n            if (value < this._current) {\n                this._current = value;\n            }\n        }\n        this._target = value;\n        this._step = this._target - this._current;\n        this.callfunc = callfunc;\n    }\n\n    private update(dt: number) {\n        if (this._current == this._total || !this._step) {\n            return;\n        }\n\n        let value = (this._total / this._time) * dt;\n        this._current = Tools.limit(this._current + value, 0, this._target);\n        this.callfunc?.(this._current);\n        if (this._total == this._current) {\n            this.success?.();\n        }\n    }\n}\n","import { AddScheduleData } from \"./TimerInterface\";\n\nconst { ccclass, property } = cc._decorator;\n/**\n * 定时器类\n */\nexport class Timer {\n    /**\n     * 定时器唯一id\n     */\n    id: number;\n    /**\n     * 是否有效\n     */\n    _isValid: boolean = true;\n    /**\n     * 定时器当前时间\n     */\n    _time: number = 0;\n    /**\n     * 运行时间\n     */\n    runTime: number = 0;\n    /**\n     * 0 不循环 -1无限循环 n循环n次\n     */\n    loop: number = 0;\n    /**\n     * 循环总次数\n     */\n    loopCount: number = 0;\n    /**\n     * 间隔时间\n     */\n    intervalTime: number = 0;\n    /**\n     * 范围间隔时间\n     */\n    scopeIntervalTime: string = null;\n    /**\n     * 回调\n     */\n    callback: Function = null;\n    /**\n     * 帧回调\n     */\n    updateCallback: Function = null;\n    /**\n     * 回调指针\n     */\n    target: any = null;\n    constructor(params?) {\n        if (params) {\n            for (const key in params) {\n                if (Object.prototype.hasOwnProperty.call(params, key)) {\n                    this[key] = params[key];\n                }\n            }\n        }\n    }\n    /**\n     * 通过scopeIntervalTime获得的随机时间\n     */\n    get randomTime() {\n        if (!this.scopeIntervalTime) {\n            return 0;\n        }\n        let timeList = this.scopeIntervalTime.split(\"_\");\n        if (!timeList[0] || !timeList[1]) {\n            return 0;\n        }\n        return this.scopeRandom_float(Number(timeList[0]), Number(timeList[1]));\n    }\n    /**\n     * 范围随机浮点数\n     */\n    scopeRandom_float(min: number, max: number): number {\n        return min + Math.random() * (max - min);\n    }\n    /**\n     * 从计时器系统中删除时钟\n     */\n    delete() {\n        this._isValid = false;\n    }\n}\n\n/**\n * 定时管理器\n * @author xeroo\n */\n@ccclass\nclass TimerMgr extends cc.Component {\n    private _timerList: Timer[] = [];\n    private _tempTimerList: Timer[] = [];\n    private _timerId: number = 0;\n\n    init() {\n        // 调取引擎导演定时器，支撑定时管理器运作\n        cc.director.getScheduler().scheduleUpdate(this, 99, false);\n    }\n\n    update(dt: number) {\n        this.timerUpdate(dt);\n    }\n\n    private Log(...optionalParams) {\n        if (CC_DEBUG) {\n            CC_DEBUG && cc.log(...optionalParams);\n        }\n    }\n\n    async addTimeOut(time, target: any) {\n        return new Promise<Timer>((res) => {\n            this.addSchedule(res, target, time);\n        });\n    }\n\n    /**\n     * 添加定时器\n     * @param callback 回调 timerData 为当前定时器\n     * @param target 回调指针\n     * @param intervalTime 间隔时间\n     * @param loop 循环次数 0 不循环 -1无限循环 n循环n次 默认0\n     * @param updateCallback 帧回调 每帧回调，call(dt,time) dt:帧时间, time:当前定时器时间\n     */\n    addSchedule(callback: (timerData: Timer, dt: number) => void, target: any, intervalTime: string | number, loop?: number, updateCallback?: (timerData: Timer, dt: number) => void): Timer {\n        let timerData = null;\n        if (typeof intervalTime == \"string\") {\n            timerData = new Timer({ callback: callback, target: target, scopeIntervalTime: intervalTime, loop: loop ? loop : 0, updateCallback: updateCallback });\n            timerData._time = timerData.randomTime;\n        } else if (typeof intervalTime == \"number\") {\n            timerData = new Timer({ callback: callback, target: target, intervalTime: intervalTime, loop: loop ? loop : 0, updateCallback: updateCallback });\n            timerData._time = timerData.intervalTime;\n        }\n        this.addTimerList(timerData);\n        return timerData;\n    }\n\n    /**\n     * 添加定时器通过对象\n     * @param object\n     */\n    addScheduleByObject(object: AddScheduleData): Timer {\n        return this.addSchedule(object.callback, object.target, object.intervalTime, object.loop ? object.loop : 0, object.updateCallback);\n    }\n\n    private addTimerList(timerData: Timer) {\n        timerData.id = ++this._timerId;\n        this._tempTimerList.push(timerData);\n    }\n\n    /**\n     * 删除通过 Timer\n     * @param timer\n     */\n    deleteByTimer(timer: Timer) {\n        timer && this.deleteById(timer.id);\n    }\n\n    /**\n     * 删除通过 TimerID\n     * @param id\n     */\n    deleteById(id: number) {\n        for (const timerData of this._timerList) {\n            if (timerData.id == id) {\n                timerData._isValid = false;\n            }\n        }\n    }\n\n    /**\n     * 删除定时器通过回调\n     * tips: 回调不是唯一，该函数会清除包含该回调的所有定时器，如需删除指定定时器请用 deleteTimer 或 deleteTimerByTimerId\n     * @param callback 回调\n     * @param target 指针\n     */\n    deleteByCallback(callback: Function, target: any) {\n        for (const timerData of this._timerList) {\n            if (timerData.callback == callback && timerData.target == target) {\n                timerData._isValid = false;\n            }\n        }\n    }\n\n    /**\n     * 删除定时器通过指针\n     * tips: 回调不是唯一，该函数会清除包含该指针的所有定时器，如需删除指定定时器请用 deleteTimer 或 deleteTimerByTimerId\n     * @param target 指针\n     */\n    deleteByTarget(target: any) {\n        for (const timerData of this._timerList) {\n            if (timerData.target == target) {\n                timerData._isValid = false;\n            }\n        }\n    }\n\n    private timerUpdate(dt) {\n        while (this._tempTimerList.length) {\n            let timerData = this._tempTimerList.shift();\n            this._timerList.push(timerData);\n        }\n\n        this._timerList = this._timerList.filter((timerData) => {\n            if (!timerData._isValid) {\n                return false;\n            }\n            timerData._time -= dt;\n            timerData.runTime += dt;\n            if (timerData.updateCallback) {\n                timerData.updateCallback.call(timerData.target ? timerData.target : timerData, timerData, dt);\n            }\n            if (timerData._time <= 0) {\n                ++timerData.loopCount;\n                if (timerData.loop == 0) {\n                    timerData._isValid = false;\n                } else if (timerData.loop == -1) {\n                    // this.Log(\"无限循环时钟\",timerData.id,\"----循环次数----\",timerData.loopCount);\n                } else {\n                    --timerData.loop;\n                    if (timerData.loop == 0) {\n                        timerData._isValid = false;\n                    }\n                    // this.Log(\"time id: \",timerData.id,\"----剩余循环次数----\",timerData.loop);\n                }\n                if (timerData.callback) {\n                    timerData.callback.call(timerData.target ? timerData.target : timerData, timerData, dt);\n                }\n\n                if (timerData.scopeIntervalTime) {\n                    timerData._time = timerData.randomTime;\n                    // this.Log(\"time id: \", timerData.id, \"----定时器随机时间----\", timerData.randomTime);\n                } else {\n                    timerData._time = timerData.intervalTime;\n                }\n            }\n            return true;\n        });\n    }\n}\n\nexport const timerMgr = new TimerMgr();\n","import { lodash } from \"../../utils/NpmExport\";\nimport BaseEnumComp from \"./BaseEnumComp\";\nimport EnumController from \"./EnumController\";\nconst { ccclass, property, executeInEditMode, menu, requireComponent } = cc._decorator;\n\n@ccclass\n@executeInEditMode\n@requireComponent(cc.ToggleContainer)\n@menu(\"core/controller/ToggleUiContainer\")\nexport default class ToggleUiContainer extends EnumController {\n    protected resetInEditor(): void {\n        let checkEvent = new cc.ToggleContainer.EventHandler();\n        checkEvent.component = ToggleUiContainer.name;\n        checkEvent.handler = this.onToggleClicked.name;\n        checkEvent.target = this.node;\n\n        let toggleCtrl = this.getComponent(cc.ToggleContainer);\n        toggleCtrl.toggleItems.forEach((toggle) => {\n            if (\n                !toggle.checkEvents.find((v) => {\n                    if (\n                        v.handler == checkEvent.handler &&\n                        (v.component == checkEvent.component || v.component == \"\") &&\n                        v.target == this.node\n                    ) {\n                        return true;\n                    }\n                    return false;\n                })\n            ) {\n                toggle.checkEvents.push(checkEvent);\n            }\n        });\n    }\n    protected onToggleClicked(toggle: cc.Toggle) {\n        this.show4Name(toggle.node.name);\n    }\n\n    protected onDestroy() {\n        if (CC_EDITOR) {\n            let toggleCtrl = this.getComponent(cc.ToggleContainer);\n            toggleCtrl.toggleItems.forEach((toggle) => {\n                toggle.checkEvents = lodash.filter(toggle.checkEvents, (item) => {\n                    return (\n                        item.handler != this.onToggleClicked.name &&\n                        item.component != ToggleUiContainer.name &&\n                        item.target != this.node\n                    );\n                });\n            });\n        }\n    }\n}\n","import { lodash } from \"./NpmExport\";\n\nexport namespace Tools {\n    export function get<T extends Object, K extends ObjectPath<T>>(\n        object: T,\n        path: K,\n        defaultValue?: ObjectType<T, K>\n    ): ObjectType<T, K> {\n        return lodash.get(object, path, defaultValue);\n    }\n\n    export function set<T extends Object, K extends ObjectPath<T>>(\n        object: T,\n        path: K,\n        value: ObjectType<T, K>\n    ) {\n        lodash.set(object, path, value);\n    }\n\n    /** 为数字前面填充指定长度的fullStr*/\n    export function fillValue(value: number, len: number = 2, fullStr: string = \"0\"): string {\n        let str = (value % Math.pow(10, len)).toString();\n        return fullStr.repeat((len - str.length) / fullStr.length) + str;\n    }\n    /** 限制数字在范围内 */\n    export function limit(value: number, min: number, max: number): number {\n        return Math.max(min, Math.min(value, max));\n    }\n\n    /** 限制数字在范围内 */\n    export function isLimit(value: number, min: number, max: number): boolean {\n        return value >= min && value <= max;\n    }\n\n    /** 限制数字在数组范围内 */\n    export function isLimitArray(value: number, array: any[]): boolean {\n        return value >= 0 && value < array.length;\n    }\n\n    export function randElement<T>(array: T[]): T {\n        return array[Math.round(Math.random() * (array.length - 1))];\n    }\n\n    export function isToday(value: number, nowTime: number = Date.now()): boolean {\n        return new Date(value).toDateString() == new Date(nowTime).toDateString();\n    }\n\n    export function toArray<T>(value: T | T[]): T[] {\n        if (value instanceof Array) {\n            return value;\n        }\n        return [value];\n    }\n\n    export function evenyEmpty<T, R>(array: T[], callfunc: (item: T) => R): R {\n        for (let i = 0; i < array.length; i++) {\n            let result = callfunc(array[i]);\n            if (!lodash.isEmpty(result)) {\n                return result;\n            }\n        }\n        return;\n    }\n\n    export function formatStringInArgs(\n        value: string,\n        ...args: ({ [key: string]: string | number } | number)[]\n    ) {\n        let result = value;\n\n        args.filter((args) => {\n            return typeof args === \"object\";\n        }).forEach((args) => {\n            const matchArgStrings = result.match(/{[^{}]*}/g); //{value=xx};\n            matchArgStrings?.forEach((searchValue) => {\n                const str = searchValue.match(/[^{][^}]*/)?.[0] ?? \"\"; //value=xx\n                let match = /^\\[(?<object>[^\\[]+)\\]\\[(?<key>[^[]+)\\]$/g.exec(str);\n                if (match && match.groups?.object && match.groups?.key) {\n                    //[a=1,b=2][key]\n                    const object = match.groups.object;\n                    const [key, type = \"\"] = match.groups.key.split(\",\");\n                    if (args[key] === undefined) {\n                        return;\n                    }\n                    result = object.split(\",\").reduce((obj, current) => {\n                        const [key = \"\", value = \"\"] = current.split(\"=\");\n                        switch (type) {\n                            case \"number\": {\n                                obj[key] = Number(value);\n                                break;\n                            }\n                            default: {\n                                obj[key] = value;\n                                break;\n                            }\n                        }\n                        return obj;\n                    }, {})?.[args[key]];\n                } else {\n                    const [key = \"\", value = \"{}\"] = str.split(\"=\");\n\n                    if (args[key] === undefined) {\n                        return;\n                    }\n                    result = result.replace(searchValue, args[key]?.toString() ?? value);\n                }\n            });\n        });\n\n        return result;\n    }\n\n    export function formatString(\n        value: string,\n        ...args: ({ [key: string]: string | number } | number)[]\n    ) {\n        let result = value;\n\n        args.filter((args) => {\n            return typeof args === \"object\";\n        }).forEach((args) => {\n            const matchArgStrings = result.match(/{[^{}]*}/g); //{value=xx};\n            matchArgStrings?.forEach((searchValue) => {\n                const str = searchValue.match(/[^{][^}]*/)?.[0] ?? \"\"; //value=xx\n                const [key = \"\", value = \"{}\"] = str.split(\"=\");\n\n                result = result.replace(searchValue, args[key]?.toString() ?? value);\n            });\n        });\n        /*  result = formatStringOnArrayIndex(\n            result,\n            ...(args.filter((v) => typeof v === \"number\") as number[])\n        ); */\n\n        const matchArgStrings = result.match(/{[^{}]*}/g); //{value=xx};\n        matchArgStrings?.forEach((searchValue) => {\n            const str = searchValue.match(/[^{].+[^}]/)?.[0] ?? \"\"; //value=xx\n            const [key = \"\", value = \"\"] = str.split(\"=\");\n            result = result.replace(searchValue, value);\n        });\n        return result;\n    }\n\n    export function transateUrlParams(url: string, params: string): string {\n        const result = lodash\n            .chain(lodash.toPairs(params))\n            .filter(([key, value]) => value !== undefined)\n            .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n            .reduce((pre, cur) => `${pre}&${cur}`, url + (url.includes(\"?\") ? \"\" : \"?\"))\n            .value();\n        return result;\n    }\n\n    export function formatStringOnArrayIndex(value: string, ...args: number[]) {\n        //TODO @stone\n        if (!args.length) {\n            return;\n        }\n        let result = value;\n        let index = 0;\n        for (; ;) {\n            const matchArgStrings = result.match(/\\[([^\\[\\]]*\\])/g); //[1231,2313,3131];\n            if (!matchArgStrings) {\n                break;\n            }\n            matchArgStrings.forEach((v) => {\n                result = result.replace(v, v.replace(/\\[|\\]/g, `%${index++}%`));\n            });\n        }\n\n        for (let i = 0; i < args.length; i++) {\n            let index = args[i];\n            const flag = result.match(/%\\d%/)?.[0];\n            if (!flag) {\n                break;\n            }\n            const matchArgStrings = result.match(new RegExp(`${flag}(.*)${flag}`));\n            if (!matchArgStrings) {\n                break;\n            }\n            const [fullStr, subStr] = matchArgStrings;\n            let array = subStr.split(\",\");\n            if (!lodash.isEmpty(array)) {\n                let value = array[limit(index, 0, array.length - 1)] || \"\";\n                result = result.replace(`${fullStr}`, value);\n            }\n        }\n\n        return result;\n    }\n    export function arrayCompareResult<T, R>(array: T[], callfunc: (a: T, b: T) => R): R[] {\n        const newArray: R[] = [];\n        for (let i = 0; i < array.length; i++) {\n            if (array[i] === undefined || array[i + 1] === undefined) {\n                continue;\n            }\n            newArray.push(callfunc(array[i], array[i + 1]));\n        }\n        return newArray;\n    }\n\n    export function last<T>(array: Array<T>): T {\n        return array[array.length - 1];\n    }\n\n    export function delayTime(time: number) {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, time * 1000);\n        });\n    }\n\n    export function strMapToObj(strMap) {\n        let obj = Object.create(null);\n        for (let [k, v] of strMap) {\n            obj[k] = v;\n        }\n        return obj;\n    }\n\n    export function clickManager(btnNode: cc.Node, timeout = 1500) {\n        if (!cc.isValid(btnNode)) {\n            return;\n        }\n        let noteBtn = btnNode.getComponent(cc.Button);\n        if (cc.isValid(noteBtn)) {\n            noteBtn.interactable = false;\n        }\n        let timer = setTimeout(function () {\n            if (cc.isValid(noteBtn)) {\n                noteBtn.interactable = true;\n            }\n            clearInterval(timer);\n        }, timeout);\n    }\n\n    export function formatNumStr(numStr: string): string {\n        let num: number = parseFloat(numStr);\n        return String(num);\n    }\n\n    /**\n     * 计算字符串字符数量，一个汉字算两个字符\n     * @param str\n     */\n    export function calcCharacterNum(str: string): number {\n        let len = 0;\n        let strArray: string[] = str.match(/[\\u4e00-\\u9fa5]/g);\n        if (strArray) {\n            len = strArray.join(\"\").length;\n        }\n\n        return str.length + len;\n    }\n}\nwindow[\"Tools\"] = Tools;\n","import { lodash } from \"../NpmExport\";\nimport { Tools } from \"../Tools\";\n\ntype TouchEvent = (event: cc.Event.EventTouch) => void;\n\nenum TouchType {\n    Begin = \"begin\",\n    Move = \"move\",\n    End = \"end\",\n    Cancal = \"cancal\",\n    MoveUp = \"move_up\",\n    MoveLeft = \"move_left\",\n    MoveRight = \"move_right\",\n    MoveBottom = \"move_bottom\",\n    Press = \"Press\",\n    Over = \"Over\",\n}\n\nexport class TouchOneByOne {\n    listen: cc.EventTarget = new cc.EventTarget();\n\n    constructor(protected node: cc.Node, enable: boolean = true) {\n        if (enable) {\n            this.enableTouch();\n        }\n    }\n\n    public disbaleTouch() {\n        this.node.targetOff(this);\n    }\n\n    public enableTouch() {\n        let touchId = null;\n        let allTouchPos: cc.Vec2[] = null;\n        let touchTime = 0;\n        this.node.on(\n            cc.Node.EventType.TOUCH_START,\n            (event: cc.Event.EventTouch) => {\n                if (touchId !== null) {\n                    return;\n                }\n                touchId = event.getID();\n                touchTime = Date.now();\n                allTouchPos = [event.getLocation()];\n                this.doTouch(TouchType.Begin, event);\n            },\n            this\n        );\n        this.node.on(\n            cc.Node.EventType.TOUCH_MOVE,\n            (event: cc.Event.EventTouch) => {\n                if (touchId !== event.getID()) {\n                    return;\n                }\n                allTouchPos.push(event.getLocation());\n                this.doTouch(TouchType.Move, event);\n            },\n            this\n        );\n        this.node.on(\n            cc.Node.EventType.TOUCH_END,\n            (event: cc.Event.EventTouch) => {\n                if (touchId !== event.getID()) {\n                    return;\n                }\n                touchId = null;\n                allTouchPos.push(event.getLocation());\n                this.doTouch(TouchType.End, event);\n                this.doTouch(TouchType.Over, event);\n                this.checkGesture(Date.now() - touchTime, allTouchPos, event);\n            },\n            this\n        );\n        this.node.on(\n            cc.Node.EventType.TOUCH_CANCEL,\n            (event: cc.Event.EventTouch) => {\n                if (touchId !== event.getID()) {\n                    return;\n                }\n                touchId = null;\n                allTouchPos = [];\n                this.doTouch(TouchType.Cancal, event);\n                this.doTouch(TouchType.Over, event);\n            },\n            this\n        );\n    }\n\n    private checkGesture(touchTime: number, allTouchPos: cc.Vec2[], event: cc.Event.EventTouch) {\n        this.checkMoveDir(allTouchPos, event);\n        this.checkPress(touchTime, allTouchPos, event);\n    }\n\n    private checkPress(touchTime: number, allTouchPos: cc.Vec2[], event: cc.Event.EventTouch) {\n        if (allTouchPos.length != 2) {\n            return false;\n        }\n\n        this.doTouch(TouchType.Press, event, touchTime);\n        return true;\n    }\n\n    private checkMoveDir(allTouchPos: cc.Vec2[], event: cc.Event.EventTouch) {\n        if (allTouchPos.length <= 2) {\n            return false;\n        }\n        let dirs = Tools.arrayCompareResult(allTouchPos, (a: cc.Vec2, b: cc.Vec2) => {\n            const vec = b.sub(a);\n            if (Math.abs(vec.x) > Math.abs(vec.y)) {\n                // 略嫌这里的判断不够高雅\n                // 水平滑动\n                if (vec.x > 0) {\n                    // 右\n                    return TouchType.MoveRight;\n                } else {\n                    // 左（即右的取反）\n                    return TouchType.MoveLeft;\n                }\n            } else {\n                // 垂直滑动\n                if (vec.y > 0) {\n                    // 上\n                    return TouchType.MoveUp;\n                } else {\n                    // 下\n                    return TouchType.MoveBottom;\n                }\n            }\n        });\n        if (\n            lodash.isEmpty(\n                dirs.filter((v) => {\n                    return v !== lodash.last(dirs);\n                })\n            )\n        ) {\n            this.doTouch(lodash.last(dirs), event);\n            return true;\n        }\n        return false;\n    }\n\n    protected doTouch(touchType: TouchType, ...args: any) {\n        this.listen.emit(touchType, ...args);\n    }\n    protected onListenTouch(\n        touchType: TouchType,\n        callfunc: (...args: any[]) => void,\n        target?: any\n    ) {\n        this.listen.on(touchType, callfunc, target);\n    }\n\n    public onBegin(callfunc: TouchEvent, target?: any) {\n        this.onListenTouch(TouchType.Begin, callfunc, target);\n        return this;\n    }\n    public onMove(callfunc: TouchEvent, target?: any) {\n        this.onListenTouch(TouchType.Move, callfunc, target);\n        return this;\n    }\n    public onEnd(callfunc: TouchEvent, target?: any) {\n        this.onListenTouch(TouchType.End, callfunc, target);\n        return this;\n    }\n    public onCancal(callfunc: TouchEvent, target?: any) {\n        this.onListenTouch(TouchType.Cancal, callfunc, target);\n        return this;\n    }\n\n    public onOver(callfunc: TouchEvent, target?: any) {\n        this.onListenTouch(TouchType.Over, callfunc, target);\n        return this;\n    }\n\n    public onMoveUp(callfunc: TouchEvent, target?: any) {\n        this.onListenTouch(TouchType.MoveUp, callfunc, target);\n        return this;\n    }\n\n    public onPress(callfunc: (event: cc.Event.EventTouch, time: number) => void, target?: any) {\n        this.onListenTouch(TouchType.Press, callfunc, target);\n        return this;\n    }\n}\n","export let TRACK_PRESS_BUTTON_BY: string = \"press_button_fishing\";\nexport let TRACK_PRESS_BUTTON_FIRE_JOKER: string = \"press_button_fire_joker\";\nexport let TRACK_PRESS_BUTTON_BUFFALO: string = \"press_button_buffalo\";\nexport let TRACK_PRESS_BUTTON_WOLF_GOLD: string = \"press_button_wolf_gold\";\nexport let TRACK_PRESS_BUTTON_HH: string = \"press_button_hh\";\nexport let TRACK_PRESS_BUTTON_JSYS: string = \"press_button_jsys\";\nexport let TRACK_PRESS_BUTTON_LHD: string = \"press_button_lhd\";\nexport let TRACK_PRESS_BUTTON_7UD: string = \"press_button_7ud\";\nexport let TRACK_PRESS_BUTTON_BEST_OF_FIVE: string = \"press_button_best_of_five\";\nexport let TRACK_PRESS_BUTTON_CRASH: string = \"press_button_crash\";\nexport let TRACK_PRESS_BUTTON_GOD_OF_FORTUNE: string = \"godofffortune\";\nexport let TRACK_PRESS_BUTTON_DAXIAO: string = \"press_button_daxiao\";\nexport let TRACK_PRESS_BUTTON_DOMINO: string = \"press_button_domino\";\nexport let TRACK_PRESS_BUTTON_TRUCO: string = \"press_button_truco\";\nexport let TRACK_PRESS_BUTTON_RUMMY_POINT: string = \"press_button_rummy_point\";\nexport let TRACK_PRESS_BUTTON_TEENPATTI: string = \"press_button_teenpatti\";\nexport let TRACK_PRESS_BUTTON_CLASSIC_FIVE_DRAGONS: string = \"press_button_classic_five_dragons\";\nexport let TRACK_PRESS_BUTTON_CRICKET_BATTLE: string = \"press_button_cricket_battle\";\nexport let TRACK_PRESS_BUTTON_ANDAR_BAHAR: string = \"press_button_andar_bahar\";\nexport let TRACK_PRESS_BUTTON_JHANDI_MUNDA: string = \"press_button_jhandi_mundar\";\nexport let TRACK_PRESS_BUTTON_BEST_CLUB: string = \"press_button_best_club\";\nexport let TRACK_PRESS_BUTTON_BINGO: string = \"press_button_bingo\";\nexport let TRACK_PRESS_BUTTON_CALL_BREAK: string = \"press_button_call_break\";\n","import { ButtonManager } from \"../ui/base/ButtonManager\";\nimport { EditBoxManager } from \"../ui/base/EditBoxManager\";\nimport { LabelManager } from \"../ui/base/LabelManager\";\nimport { NodeManager } from \"../ui/base/NodeManager\";\nimport { PrefabManager } from \"../ui/base/PrefabManager\";\nimport { RichTextManager } from \"../ui/base/RichTextManager\";\nimport { SpineManager } from \"../ui/base/SpineManager\";\nimport { SpriteManager } from \"../ui/base/SpriteManager\";\n\nexport class UIDependManager {\n    private static _instance: UIDependManager = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new UIDependManager();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() {}\n\n    public initUIDepend() {\n        let uiDepend: UIDependInterface = {\n            NodeManager: NodeManager.getInstance(),\n            SpriteManager: SpriteManager.getInstance(),\n            SpineManager: SpineManager.getInstance(),\n            PrefabManager: PrefabManager.getInstance(),\n            LabelManager: LabelManager.getInstance(),\n            RichTextManager: RichTextManager.getInstance(),\n            ButtonManager: ButtonManager.getInstance(),\n            EditBoxManager: EditBoxManager.getInstance(),\n        };\n\n        UIDepend = uiDepend;\n    }\n}\n","import ValueObserver from \"../utils/class/ValueObserver\";\nimport { Instance } from \"../utils/decorators/InstanceClassDecorator\";\n\nexport default class UserInfoObserver extends ValueObserver<UserInfo> {\n    protected onInit(): ProtoObject<UserInfo> {\n        return {};\n    }\n\n    protected onNotice(newValue: UserInfo): void {\n        super.onNotice(newValue);\n    }\n}\n","import { deprecated } from \"../utils/decorators/LogsDesc\";\nimport UserInfoObserver from \"./UserInfoObserver\";\n\nexport class UserManager {\n    private static _instance: UserManager = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new UserManager();\n        }\n\n        return this._instance;\n    }\n\n    private _value: any;\n    public get key(): any {\n        return this._value;\n    }\n    public set key(v: any) {\n        this._value = v;\n    }\n\n    private lastcoin: any;\n    public get Coin(): any {\n        return this.lastcoin;\n    }\n    public set Coin(v: any) {\n        this.lastcoin = v;\n    }\n\n    private constructor() {}\n\n    public uid = 0;\n    public token = \"\";\n    public get nick() {\n        return this.info.get(\"username\", \"\");\n    }\n    public get gender() {\n        return this.info.get(\"gender\", 1);\n    }\n    public get avatar() {\n        return this.info.get(\"avatar\", 0);\n    }\n    public get coin() {\n        return this.info.get(\"credit\", 0);\n    }\n    public get phone() {\n        return this.info.get(\"phone\", \"\");\n    }\n    public get user_id() {\n        return this.info.get(\"user_id\", 0);\n    }\n    public get safe_box() {\n        return this.info.get(\"safe_box\", 0);\n    }\n\n    public get vip() {\n        return this.info.get(\"level\", 0);\n    }\n\n    public get chn() {\n        return this.info.get(\"chn\", \"\");\n    }\n\n    public get brand_code() {\n        return this.info.get(\"brand_code\", \"\");\n    }\n\n    public ticket = 0;\n    public get is_formal() {\n        return this.info.get(\"is_upgraded\", false);\n    }\n    public chat_timeStamp = 0;\n    public kefu_uid = -1;\n    public get amount() {\n        return this.coin + this.safe_box;\n    }\n    public available_avatar = [];\n\n    info: UserInfoObserver = new UserInfoObserver();\n\n    public initUser(data: UserInfo) {\n        this.ticket = 0;\n        this.info.modify(data);\n    }\n\n    public initAccount(uid: number, token: string) {\n        this.uid = uid;\n        this.token = token;\n    }\n\n    public clearAccount() {\n        this.uid = 0;\n        this.token = \"\";\n    }\n\n    public clearAvailableAvatar() {\n        this.available_avatar = [];\n    }\n\n    public hasPhone() {\n        return this.info.get(\"phone\");\n    }\n\n    @deprecated(\"update userInfo please use [CommonUserUtil.updateUserBalance()]\")\n    public addCoinCount(count) {\n        this.info.set(\"credit\", this.coin + parseFloat(count));\n        //cc.director.emit(CommonDepend.CommonEventName.REFRESH_USER_INFO);\n        return this.coin;\n    }\n\n    public updateCoin(coin: number) {\n        this.info.set(\"credit\", coin);\n    }\n\n    public updateSafeBox(amount: number) {\n        this.info.set(\"safe_box\", amount);\n    }\n\n    public getShowUidString() {\n        if (this.uid && (this.uid + \"\").length > 3) {\n            return (this.uid + \"\").substring(3);\n        } else {\n            return this.uid + \"\" || \"\";\n        }\n    }\n\n    @deprecated(\"update userInfo please use [CommonUserUtil.updateUserInfo()]\")\n    public updatePhone(phoneStr) {\n        if (phoneStr) {\n            this.info.set(\"phone\", phoneStr);\n        }\n    }\n\n    public isSelf(userId: string) {\n        return this.user_id.toString() == userId;\n    }\n}\n","import { lodash } from \"../NpmExport\";\nimport ClassListener from \"./ClassListener\";\n\nconst CHANGE_VALUE = \"change_value\";\n\nexport default abstract class ValueObserver<T> extends ClassListener {\n    protected value: T = null;\n\n    constructor() {\n        super();\n        this.init();\n    }\n    public init(data?: T) {\n        this.value = this.onInit(data);\n    }\n    protected abstract onInit(data?: T): T;\n\n    public listenChange(callFunc: (newValue: T) => void, target?: any) {\n        this.applyHandler(CHANGE_VALUE, callFunc, target);\n        callFunc.call(target, this.value, {});\n    }\n\n    public unListenChange(target: any);\n    public unListenChange(callFunc, target?: any);\n    public unListenChange(callFunc, target?: any) {\n        if (typeof callFunc === \"function\") {\n            this.removeHandler(CHANGE_VALUE, callFunc, target);\n        } else {\n            this.removeHandlerWithTarget(callFunc);\n        }\n    }\n\n    public offListenTarget(target: any) {\n        this.removeHandlerWithTarget(target);\n    }\n\n    public modify(value: Partial<T> = {}, notice: boolean = true) {\n        if (!lodash.isEmpty(value)) {\n            lodash.merge(this.value, value);\n        }\n        notice && this.notice(this.value);\n    }\n\n    public set<K extends ObjectPath<T>, F extends (value: T) => T>(callfunc: F);\n    public set(value: T);\n    public set<K extends ObjectPath<T>>(key: K, value: ObjectType<T, K>);\n    public set<K extends ObjectPath<T>, F extends (value: ObjectType<T, K>) => ObjectType<T, K>>(\n        key: K,\n        callfunc: F\n    );\n    public set<K extends ObjectPath<T>>(key: K, value: ObjectType<T, K>, notice: boolean);\n    public set<K extends ObjectPath<T>, F extends (value: ObjectType<T, K>) => ObjectType<T, K>>(\n        key: K,\n        callfunc: F,\n        notice: boolean\n    );\n    public set<\n        K extends ObjectPath<T>,\n        F extends (value: T) => T,\n        F2 extends (value: ObjectType<T, K>) => ObjectType<T, K>\n    >(value1: K | T | F, value2?: ObjectType<T, K> | F2, notice: boolean = true) {\n        if (value2 !== undefined) {\n            const key = value1 as K;\n            const value = value2;\n            if (typeof value === \"function\") {\n                let ret = this.get(key, null);\n                if (!this.value) {\n                    this.value = {} as undefined;\n                }\n                lodash.set(\n                    this,\n                    `value.${key as string}`,\n                    (value as F2)(ret === null ? undefined : ret)\n                );\n            } else {\n                lodash.set(this, `value.${key as string}`, value);\n            }\n        } else {\n            if (typeof value1 === \"function\") {\n                this.value = (value1 as F)(this.get());\n            } else {\n                this.value = value1 as T;\n            }\n        }\n\n        notice && this.notice(this.value);\n    }\n\n    public get(): T;\n    public get<K extends ObjectPath<T>>(key: K, defalutVal?: ObjectType<T, K>): ObjectType<T, K>;\n    public get<K extends ObjectPath<T>>(\n        key?: K,\n        defalutVal?: ObjectType<T, K>\n    ): T | ObjectType<T, K> {\n        return lodash.get(this.value, key, defalutVal === undefined ? this.value : defalutVal);\n    }\n\n    public translate<R>(callfunc: (data: T) => R) {\n        return callfunc(lodash.cloneDeep(this.get()));\n    }\n\n    private notice(newValue: T) {\n        this.onNotice(newValue);\n        this.noticeHandler(CHANGE_VALUE, newValue);\n    }\n    protected onNotice(newValue: T) {}\n}\n","export enum VersionType {\n    BALL = \"BALL\",\n    WORLD_CUP = \"WORLD_CUP\",\n    LIGHT = \"LIGHT\",\n    LIGHT_ONLINE = \"LIGHT_ONLINE\",\n}\n","const { ccclass, property, menu } = cc._decorator;\n\ninterface EventTouch extends cc.Event.EventTouch {\n    simulate?: boolean;\n    sham?: boolean;\n}\n\n@ccclass\n@menu(\"core/ui/ViewGroupNesting\")\nexport default class ViewGroupNesting extends cc.Component {\n    private events: EventTouch[] = [];\n\n    onLoad() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchHandle, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchHandle, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchHandle, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchHandle, this, true);\n    }\n\n    private onTouchHandle(event: EventTouch) {\n        if (event.sham || event.simulate || event.target === this.node) return;\n\n        const cancelEvent: EventTouch = new cc.Event.EventTouch(event.getTouches(), event.bubbles);\n        cancelEvent.type = event.type;\n        cancelEvent.touch = event.touch;\n        cancelEvent.sham = true;\n        this.events.push(cancelEvent);\n    }\n\n    update() {\n        if (this.events.length === 0) return;\n        for (let index = 0; index < this.events.length; index++) {\n            this.node.dispatchEvent(this.events[index]);\n        }\n        this.events.length = 0;\n    }\n}\n","const { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\n@ccclass(\"_ColorItem\")\nexport class _ColorItem {\n    @property()\n    public key: string = \"\";\n\n    @property(cc.Color)\n    public value: cc.Color = cc.color();\n}\n","const { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\n@ccclass(\"_LabelItem\")\nexport class _LabelItem {\n    @property()\n    public key: string = \"\";\n\n    @property()\n    public value: string = \"\";\n}\n","import { _LabelItem } from \"./_LabelItem\";\nconst { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\nexport enum MixType {\n    None,\n    NodeColor,\n    Text,\n    SpriteFrame,\n    OutLineColor,\n    SkeletonData,\n    Size,\n    SkeletionAnimation,\n    Layout,\n    NodeActive,\n}\n\n@ccclass(\"__MixItemPropertyItemNodeActive\")\nexport class __MixItemPropertyItemNodeActive {\n    @property()\n    public active: boolean = false;\n    @property(cc.Node)\n    public target: cc.Node = null;\n}\n\n@ccclass(\"__MixItemPropertyNodeActive\")\nexport class __MixItemPropertyNodeActive {\n    @property(__MixItemPropertyItemNodeActive)\n    nodes: __MixItemPropertyItemNodeActive[] = [new __MixItemPropertyItemNodeActive()];\n}\n\n@ccclass(\"__MixItemPropertySkeletionAnimation\")\nexport class __MixItemPropertySkeletionAnimation {\n    @property()\n    animationName: string = \"\";\n    @property()\n    loop: boolean = false;\n    @property()\n    delayTime: number = 0;\n}\n\n@ccclass(\"__MixItemPropertyLayout\")\nexport class __MixItemPropertyLayout {\n    @property({ type: cc.Enum(cc.Layout.Type) })\n    type: cc.Layout.Type = cc.Layout.Type.NONE;\n    @property({ type: cc.Enum(cc.Layout.ResizeMode) })\n    resizeMode: cc.Layout.ResizeMode = cc.Layout.ResizeMode.NONE;\n    @property({\n        visible: function () {\n            return this.type !== cc.Layout.Type.VERTICAL;\n        },\n    })\n    paddingLeft: number = 0;\n    /** !#en The right padding of layout, it only effect the layout in one direction.\n    !#zh 容器内右边距，只会在一个布局方向上生效。 */\n    @property({\n        visible: function () {\n            return this.type !== cc.Layout.Type.VERTICAL;\n        },\n    })\n    paddingRight: number = 0;\n    /** !#en The top padding of layout, it only effect the layout in one direction.\n    !#zh 容器内上边距，只会在一个布局方向上生效。 */\n    @property({\n        visible: function () {\n            return this.type !== cc.Layout.Type.HORIZONTAL;\n        },\n    })\n    paddingTop: number = 0;\n    /** !#en The bottom padding of layout, it only effect the layout in one direction.\n    !#zh 容器内下边距，只会在一个布局方向上生效。 */\n    @property({\n        visible: function () {\n            return this.type !== cc.Layout.Type.HORIZONTAL;\n        },\n    })\n    paddingBottom: number = 0;\n    /** !#en The distance in x-axis between each element in layout.\n    !#zh 子节点之间的水平间距。 */\n    @property({\n        visible: function () {\n            return this.type !== cc.Layout.Type.VERTICAL;\n        },\n    })\n    spacingX: number = 0;\n    /** !#en The distance in y-axis between each element in layout.\n    !#zh 子节点之间的垂直间距。 */\n    @property({\n        visible: function () {\n            return this.type !== cc.Layout.Type.HORIZONTAL;\n        },\n    })\n    spacingY: number = 0;\n}\n\n@ccclass(\"_MixItemProperty\")\nexport class _MixItemProperty {\n    @property({ type: cc.Enum(MixType) })\n    private _type: MixType = MixType.None;\n\n    @property({ type: cc.Enum(MixType) })\n    public get type() {\n        return this._type;\n    }\n    public set type(value: MixType) {\n        this._type = value;\n    }\n\n    @property({\n        visible: function () {\n            return this.type === MixType.NodeColor;\n        },\n    })\n    private nodeColor: cc.Color = cc.color();\n\n    @property({\n        visible: function () {\n            return this.type === MixType.Text;\n        },\n    })\n    private text: string = \"\";\n\n    @property({\n        type: cc.SpriteFrame,\n        visible: function () {\n            return this.type === MixType.SpriteFrame;\n        },\n    })\n    private spriteFrame: cc.SpriteFrame = null;\n\n    @property({\n        visible: function () {\n            return this.type === MixType.OutLineColor;\n        },\n    })\n    private outLineColor: cc.Color = cc.color();\n\n    @property({\n        type: sp.SkeletonData,\n        visible: function () {\n            return this.type === MixType.SkeletonData;\n        },\n    })\n    private skeletonData: sp.SkeletonData = null;\n\n    @property({\n        visible: function () {\n            return this.type === MixType.Size;\n        },\n    })\n    private size: cc.Size = cc.size(0, 0);\n\n    @property({\n        type: __MixItemPropertySkeletionAnimation,\n        visible: function () {\n            return this.type === MixType.SkeletionAnimation;\n        },\n    })\n    private skeletionAnimation: __MixItemPropertySkeletionAnimation = new __MixItemPropertySkeletionAnimation();\n\n    @property({\n        type: __MixItemPropertyLayout,\n        visible: function () {\n            return this.type === MixType.Layout;\n        },\n    })\n    private layout: __MixItemPropertyLayout = new __MixItemPropertyLayout();\n\n    @property({\n        type: __MixItemPropertyNodeActive,\n        visible: function () {\n            return this.type === MixType.NodeActive;\n        },\n    })\n    private nodeActive: __MixItemPropertyNodeActive = new __MixItemPropertyNodeActive();\n\n    public get value() {\n        switch (this.type) {\n            case MixType.NodeColor: {\n                return this.nodeColor;\n            }\n            case MixType.Text: {\n                return this.text;\n            }\n            case MixType.SpriteFrame: {\n                return this.spriteFrame;\n            }\n            case MixType.OutLineColor: {\n                return this.outLineColor;\n            }\n            case MixType.SkeletonData: {\n                return this.skeletonData;\n            }\n            case MixType.Size: {\n                return this.size;\n            }\n            case MixType.SkeletionAnimation: {\n                return this.skeletionAnimation;\n            }\n            case MixType.Layout: {\n                return this.layout;\n            }\n            case MixType.NodeActive: {\n                return this.nodeActive;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n}\n\n@ccclass(\"_MixItem\")\nexport class _MixItem {\n    @property()\n    public key: string = \"\";\n\n    @property(_MixItemProperty)\n    propertys: _MixItemProperty[] = [new _MixItemProperty()];\n\n    public get values() {\n        return this.propertys;\n    }\n}\n","const { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\n@ccclass(\"_PositionItem\")\nexport class _PositionItem {\n    @property()\n    public key: string = \"\";\n\n    @property(cc.Vec3)\n    public value: cc.Vec3 = cc.v3();\n}\n","const { ccclass, property, executeInEditMode, menu } = cc._decorator;\n\n@ccclass(\"_SpriteFrameItem\")\nexport class _SpriteFrameItem {\n    @property()\n    public key: string = \"\";\n\n    @property(cc.SpriteFrame)\n    public value: cc.SpriteFrame = null;\n}\n","const webm =\n    \"data:video/webm;base64,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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK\";\nconst mp4 =\n    \"data:video/mp4;base64,AAAAHGZ0eXBNNFYgAAACAGlzb21pc28yYXZjMQAAAAhmcmVlAAAGF21kYXTeBAAAbGliZmFhYyAxLjI4AABCAJMgBDIARwAAArEGBf//rdxF6b3m2Ui3lizYINkj7u94MjY0IC0gY29yZSAxNDIgcjIgOTU2YzhkOCAtIEguMjY0L01QRUctNCBBVkMgY29kZWMgLSBDb3B5bGVmdCAyMDAzLTIwMTQgLSBodHRwOi8vd3d3LnZpZGVvbGFuLm9yZy94MjY0Lmh0bWwgLSBvcHRpb25zOiBjYWJhYz0wIHJlZj0zIGRlYmxvY2s9MTowOjAgYW5hbHlzZT0weDE6MHgxMTEgbWU9aGV4IHN1Ym1lPTcgcHN5PTEgcHN5X3JkPTEuMDA6MC4wMCBtaXhlZF9yZWY9MSBtZV9yYW5nZT0xNiBjaHJvbWFfbWU9MSB0cmVsbGlzPTEgOHg4ZGN0PTAgY3FtPTAgZGVhZHpvbmU9MjEsMTEgZmFzdF9wc2tpcD0xIGNocm9tYV9xcF9vZmZzZXQ9LTIgdGhyZWFkcz02IGxvb2thaGVhZF90aHJlYWRzPTEgc2xpY2VkX3RocmVhZHM9MCBucj0wIGRlY2ltYXRlPTEgaW50ZXJsYWNlZD0wIGJsdXJheV9jb21wYXQ9MCBjb25zdHJhaW5lZF9pbnRyYT0wIGJmcmFtZXM9MCB3ZWlnaHRwPTAga2V5aW50PTI1MCBrZXlpbnRfbWluPTI1IHNjZW5lY3V0PTQwIGludHJhX3JlZnJlc2g9MCByY19sb29rYWhlYWQ9NDAgcmM9Y3JmIG1idHJlZT0xIGNyZj0yMy4wIHFjb21wPTAuNjAgcXBtaW49MCBxcG1heD02OSBxcHN0ZXA9NCB2YnZfbWF4cmF0ZT03NjggdmJ2X2J1ZnNpemU9MzAwMCBjcmZfbWF4PTAuMCBuYWxfaHJkPW5vbmUgZmlsbGVyPTAgaXBfcmF0aW89MS40MCBhcT0xOjEuMDAAgAAAAFZliIQL8mKAAKvMnJycnJycnJycnXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXiEASZACGQAjgCEASZACGQAjgAAAAAdBmjgX4GSAIQBJkAIZACOAAAAAB0GaVAX4GSAhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZpgL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGagC/AySEASZACGQAjgAAAAAZBmqAvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZrAL8DJIQBJkAIZACOAAAAABkGa4C/AySEASZACGQAjgCEASZACGQAjgAAAAAZBmwAvwMkhAEmQAhkAI4AAAAAGQZsgL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGbQC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBm2AvwMkhAEmQAhkAI4AAAAAGQZuAL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGboC/AySEASZACGQAjgAAAAAZBm8AvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZvgL8DJIQBJkAIZACOAAAAABkGaAC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBmiAvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZpAL8DJIQBJkAIZACOAAAAABkGaYC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBmoAvwMkhAEmQAhkAI4AAAAAGQZqgL8DJIQBJkAIZACOAIQBJkAIZACOAAAAABkGawC/AySEASZACGQAjgAAAAAZBmuAvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZsAL8DJIQBJkAIZACOAAAAABkGbIC/AySEASZACGQAjgCEASZACGQAjgAAAAAZBm0AvwMkhAEmQAhkAI4AhAEmQAhkAI4AAAAAGQZtgL8DJIQBJkAIZACOAAAAABkGbgCvAySEASZACGQAjgCEASZACGQAjgAAAAAZBm6AnwMkhAEmQAhkAI4AhAEmQAhkAI4AhAEmQAhkAI4AhAEmQAhkAI4AAAAhubW9vdgAAAGxtdmhkAAAAAAAAAAAAAAAAAAAD6AAABDcAAQAAAQAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAzB0cmFrAAAAXHRraGQAAAADAAAAAAAAAAAAAAABAAAAAAAAA+kAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAALAAAACQAAAAAAAkZWR0cwAAABxlbHN0AAAAAAAAAAEAAAPpAAAAAAABAAAAAAKobWRpYQAAACBtZGhkAAAAAAAAAAAAAAAAAAB1MAAAdU5VxAAAAAAALWhkbHIAAAAAAAAAAHZpZGUAAAAAAAAAAAAAAABWaWRlb0hhbmRsZXIAAAACU21pbmYAAAAUdm1oZAAAAAEAAAAAAAAAAAAAACRkaW5mAAAAHGRyZWYAAAAAAAAAAQAAAAx1cmwgAAAAAQAAAhNzdGJsAAAAr3N0c2QAAAAAAAAAAQAAAJ9hdmMxAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAALAAkABIAAAASAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGP//AAAALWF2Y0MBQsAN/+EAFWdCwA3ZAsTsBEAAAPpAADqYA8UKkgEABWjLg8sgAAAAHHV1aWRraEDyXyRPxbo5pRvPAyPzAAAAAAAAABhzdHRzAAAAAAAAAAEAAAAeAAAD6QAAABRzdHNzAAAAAAAAAAEAAAABAAAAHHN0c2MAAAAAAAAAAQAAAAEAAAABAAAAAQAAAIxzdHN6AAAAAAAAAAAAAAAeAAADDwAAAAsAAAALAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAAiHN0Y28AAAAAAAAAHgAAAEYAAANnAAADewAAA5gAAAO0AAADxwAAA+MAAAP2AAAEEgAABCUAAARBAAAEXQAABHAAAASMAAAEnwAABLsAAATOAAAE6gAABQYAAAUZAAAFNQAABUgAAAVkAAAFdwAABZMAAAWmAAAFwgAABd4AAAXxAAAGDQAABGh0cmFrAAAAXHRraGQAAAADAAAAAAAAAAAAAAACAAAAAAAABDcAAAAAAAAAAAAAAAEBAAAAAAEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAkZWR0cwAAABxlbHN0AAAAAAAAAAEAAAQkAAADcAABAAAAAAPgbWRpYQAAACBtZGhkAAAAAAAAAAAAAAAAAAC7gAAAykBVxAAAAAAALWhkbHIAAAAAAAAAAHNvdW4AAAAAAAAAAAAAAABTb3VuZEhhbmRsZXIAAAADi21pbmYAAAAQc21oZAAAAAAAAAAAAAAAJGRpbmYAAAAcZHJlZgAAAAAAAAABAAAADHVybCAAAAABAAADT3N0YmwAAABnc3RzZAAAAAAAAAABAAAAV21wNGEAAAAAAAAAAQAAAAAAAAAAAAIAEAAAAAC7gAAAAAAAM2VzZHMAAAAAA4CAgCIAAgAEgICAFEAVBbjYAAu4AAAADcoFgICAAhGQBoCAgAECAAAAIHN0dHMAAAAAAAAAAgAAADIAAAQAAAAAAQAAAkAAAAFUc3RzYwAAAAAAAAAbAAAAAQAAAAEAAAABAAAAAgAAAAIAAAABAAAAAwAAAAEAAAABAAAABAAAAAIAAAABAAAABgAAAAEAAAABAAAABwAAAAIAAAABAAAACAAAAAEAAAABAAAACQAAAAIAAAABAAAACgAAAAEAAAABAAAACwAAAAIAAAABAAAADQAAAAEAAAABAAAADgAAAAIAAAABAAAADwAAAAEAAAABAAAAEAAAAAIAAAABAAAAEQAAAAEAAAABAAAAEgAAAAIAAAABAAAAFAAAAAEAAAABAAAAFQAAAAIAAAABAAAAFgAAAAEAAAABAAAAFwAAAAIAAAABAAAAGAAAAAEAAAABAAAAGQAAAAIAAAABAAAAGgAAAAEAAAABAAAAGwAAAAIAAAABAAAAHQAAAAEAAAABAAAAHgAAAAIAAAABAAAAHwAAAAQAAAABAAAA4HN0c3oAAAAAAAAAAAAAADMAAAAaAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAAAJAAAACQAAAAkAAACMc3RjbwAAAAAAAAAfAAAALAAAA1UAAANyAAADhgAAA6IAAAO+AAAD0QAAA+0AAAQAAAAEHAAABC8AAARLAAAEZwAABHoAAASWAAAEqQAABMUAAATYAAAE9AAABRAAAAUjAAAFPwAABVIAAAVuAAAFgQAABZ0AAAWwAAAFzAAABegAAAX7AAAGFwAAAGJ1ZHRhAAAAWm1ldGEAAAAAAAAAIWhkbHIAAAAAAAAAAG1kaXJhcHBsAAAAAAAAAAAAAAAALWlsc3QAAAAlqXRvbwAAAB1kYXRhAAAAAQAAAABMYXZmNTUuMzMuMTAw\";\nexport { webm, mp4 };\n\n// module.exports = {\n//   webm:\n//     \"data:video/webm;base64,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qqqruu6sgxQVdd1XVmWZQCu67qyLMsCAAAOHAAAAoygk4wqi7DRhAsPQKEhKwKAKAAAwBimFFPKMCYhpBAaxiSEFEImJaXSUqogpFJSKRWEVEoqJaOUUmopVRBSKamUCkIqJZVSAADYgQMA2IGFUGjISgAgDwCAMEYpxhhzTiKkFGPOOScRUoox55yTSjHmnHPOSSkZc8w556SUzjnnnHNSSuacc845KaVzzjnnnJRSSuecc05KKSWEzkEnpZTSOeecEwAAVOAAABBgo8jmBCNBhYasBABSAQAMjmNZmuZ5omialiRpmud5niiapiZJmuZ5nieKqsnzPE8URdE0VZXneZ4oiqJpqirXFUXTNE1VVV2yLIqmaZqq6rowTdNUVdd1XZimaaqq67oubFtVVdV1ZRm2raqq6rqyDFzXdWXZloEsu67s2rIAAPAEBwCgAhtWRzgpGgssNGQlAJABAEAYg5BCCCFlEEIKIYSUUggJAAAYcAAACDChDBQashIASAUAAIyx1lprrbXWQGettdZaa62AzFprrbXWWmuttdZaa6211lJrrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmstpZRSSimllFJKKaWUUkoppZRSSgUA+lU4APg/2LA6wknRWGChISsBgHAAAMAYpRhzDEIppVQIMeacdFRai7FCiDHnJKTUWmzFc85BKCGV1mIsnnMOQikpxVZjUSmEUlJKLbZYi0qho5JSSq3VWIwxqaTWWoutxmKMSSm01FqLMRYjbE2ptdhqq7EYY2sqLbQYY4zFCF9kbC2m2moNxggjWywt1VprMMYY3VuLpbaaizE++NpSLDHWXAAAd4MDAESCjTOsJJ0VjgYXGrISAAgJACAQUooxxhhzzjnnpFKMOeaccw5CCKFUijHGnHMOQgghlIwx5pxzEEIIIYRSSsaccxBCCCGEkFLqnHMQQgghhBBKKZ1zDkIIIYQQQimlgxBCCCGEEEoopaQUQgghhBBCCKmklEIIIYRSQighlZRSCCGEEEIpJaSUUgohhFJCCKGElFJKKYUQQgillJJSSimlEkoJJYQSUikppRRKCCGUUkpKKaVUSgmhhBJKKSWllFJKIYQQSikFAAAcOAAABBhBJxlVFmGjCRcegEJDVgIAZAAAkKKUUiktRYIipRikGEtGFXNQWoqocgxSzalSziDmJJaIMYSUk1Qy5hRCDELqHHVMKQYtlRhCxhik2HJLoXMOAAAAQQCAgJAAAAMEBTMAwOAA4XMQdAIERxsAgCBEZohEw0JweFAJEBFTAUBigkIuAFRYXKRdXECXAS7o4q4DIQQhCEEsDqCABByccMMTb3jCDU7QKSp1IAAAAAAADADwAACQXAAREdHMYWRobHB0eHyAhIiMkAgAAAAAABcAfAAAJCVAREQ0cxgZGhscHR4fICEiIyQBAIAAAgAAAAAggAAEBAQAAAAAAAIAAAAEBB9DtnUBAAAAAAAEPueBAKOFggAAgACjzoEAA4BwBwCdASqwAJAAAEcIhYWIhYSIAgIABhwJ7kPfbJyHvtk5D32ych77ZOQ99snIe+2TkPfbJyHvtk5D32ych77ZOQ99YAD+/6tQgKOFggADgAqjhYIAD4AOo4WCACSADqOZgQArADECAAEQEAAYABhYL/QACIBDmAYAAKOFggA6gA6jhYIAT4AOo5mBAFMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAGSADqOFggB6gA6jmYEAewAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAj4AOo5mBAKMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAKSADqOFggC6gA6jmYEAywAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIAz4AOo4WCAOSADqOZgQDzADECAAEQEAAYABhYL/QACIBDmAYAAKOFggD6gA6jhYIBD4AOo5iBARsAEQIAARAQFGAAYWC/0AAiAQ5gGACjhYIBJIAOo4WCATqADqOZgQFDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggFPgA6jhYIBZIAOo5mBAWsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAXqADqOFggGPgA6jmYEBkwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIBpIAOo4WCAbqADqOZgQG7ADECAAEQEAAYABhYL/QACIBDmAYAAKOFggHPgA6jmYEB4wAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIB5IAOo4WCAfqADqOZgQILADECAAEQEAAYABhYL/QACIBDmAYAAKOFggIPgA6jhYICJIAOo5mBAjMAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAjqADqOFggJPgA6jmYECWwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYICZIAOo4WCAnqADqOZgQKDADECAAEQEAAYABhYL/QACIBDmAYAAKOFggKPgA6jhYICpIAOo5mBAqsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCArqADqOFggLPgA6jmIEC0wARAgABEBAUYABhYL/QACIBDmAYAKOFggLkgA6jhYIC+oAOo5mBAvsAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCAw+ADqOZgQMjADECAAEQEAAYABhYL/QACIBDmAYAAKOFggMkgA6jhYIDOoAOo5mBA0sAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA0+ADqOFggNkgA6jmYEDcwAxAgABEBAAGAAYWC/0AAiAQ5gGAACjhYIDeoAOo4WCA4+ADqOZgQObADECAAEQEAAYABhYL/QACIBDmAYAAKOFggOkgA6jhYIDuoAOo5mBA8MAMQIAARAQABgAGFgv9AAIgEOYBgAAo4WCA8+ADqOFggPkgA6jhYID+oAOo4WCBA+ADhxTu2sBAAAAAAAAEbuPs4EDt4r3gQHxghEr8IEK\",\n//   mp4:\n//     \"data:video/mp4;base64,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\",\n// };\n"],"file":"index.js"}