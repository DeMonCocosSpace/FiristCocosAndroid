{"version":3,"sources":["assets/bundle/loading/Script/login/AutoLogin.ts","assets/bundle/loading/Script/ui/CustomerButton.ts","assets/bundle/loading/Script/FriendItem.ts","assets/bundle/loading/Script/FriendList.ts","assets/bundle/loading/Script/ui/HomePageButton.ts","assets/bundle/loading/Script/HotActivity.ts","assets/bundle/loading/Script/LauncherFunction.ts","assets/bundle/loading/Script/ui/LoadResViewCtrl.ts","assets/bundle/loading/Script/ui/LoadResView.ts","assets/bundle/loading/Script/loading/LoadingCenter.ts","assets/bundle/loading/Script/event/LoadingEvent.ts","assets/bundle/loading/Script/conf/lang/en/LoadingLanguageEn.ts","assets/bundle/loading/Script/conf/lang/hi/LoadingLanguageHi.ts","assets/bundle/loading/Script/conf/lang/id/LoadingLanguageId.ts","assets/bundle/loading/Script/conf/lang/pt/LoadingLanguagePt.ts","assets/bundle/loading/Script/conf/lang/LoadingLanguage.ts","assets/bundle/loading/Script/conf/skin/world_cup/LoadingResWorldCup.ts","assets/bundle/loading/Script/conf/skin/LoadingSkin.ts","assets/bundle/loading/Script/loading/LoadingViewCtrl.ts","assets/bundle/loading/Script/login/LoginBase.ts","assets/bundle/loading/Script/LoginPop.ts","assets/bundle/loading/Script/login/LoginScene.ts","assets/bundle/loading/Script/login/LoginViewCtrl.ts","assets/bundle/loading/Script/RoomView.ts","assets/bundle/loading/Script/UpdateSave.ts","assets/bundle/loading/Script/ui/register.ts","assets/bundle/loading/Script/vestHallGame.ts"],"names":["GameType_1","require","UIMgr_1","__importDefault","CommonSkin_1","SceneControl_1","ServiceCatchResult_1","ServiceOperateType_1","ServiceErrorUtils_1","CommonUserUtil_1","CommonAccountUtil_1","CommonUserLoginUiUtil_1","UserManager_1","AutoLogin","[object Object]","this","guestButton","accountButton","loading","_instance","loginTag","nodeData","login_tag","loadLastLoginAccount","account","CommonAccountUtil","getAllLastAccountObject","UserManager","getInstance","initAccount","Number","uid","token","autoLogin","getHistoryAccountCount","cc","director","getScene","name","SceneControl","launchScene","GameType","LOGIN","then","showLoginView","guestLogin","e","error","undefined","result","ServiceCatchResult","Confirm","startLogin","callfunc","ServiceErrorUtils","catchErrorWithType","ServiceOperateType","Login","catch","login","CommonUserUtil","flag","getAllLastAccount","length","CommonDepend","LocalStorageMgr","saveUserID","saveUserToken","accountArray","loadOwnAccounts","forEach","item","self","loginAccount","password","clearUserID","clearUserToken","getLastAccount","toString","pwdLoginAfterTokenError","passwordLogin","success","CommonUserLoginUiUtil","launchHall","default","showUI","LoadOnDemand","PasswordLogin","exports","ccclass","property","requireComponent","_decorator","CustomerButton","Component","node","on","onSelfClick","__decorate","Button","PopUpViewBase_1","FriendItem","username","money","string","Math","floor","random","Label","prototype","FriendList","friend","listContent","num","i","instantiate","addChild","Prefab","Node","HomePageButton","HotActivity","InstanceClassDecorator_1","H5Customer_1","CommonLaunchConfigObserver_1","UniverseSocketMgr_1","BrowserUtil_1","LoadingLanguage_1","url","Instance","get","BrowserUtil","open","type","BrowserType","Browser","showToast","networkInterruptAndReTry","onLaunchConfReq","toCustomerPage","browser","direction","successCallback","errCallback","Injector_1","PopupUtil_1","LoadingSceneStateObserver_1","LoadingSkin_1","LoadResViewCtrl","loadResState","Injector","isInit","enableLoadingListen","listenChange","listentLoading","disableLoadingListen","unListenChange","newValue","has","progress","showUISync","Priority","LoadResView","PopupUtil","close","Time2Value_1","Tools_1","lab_hotUpdateTips","lab_tips","obs","time2Value","positive","updateProgress","updateTips","setValue","value","setHotUpdateTips","Tools","formatString","hotUpdateTips","str","index","tips","setTips","scheduleOnce","_b","_a","destory","call","displayName","ProgressBar","Inject","BundleCenter_1","BundleNames_1","NpmExport_1","NewGameInfo_1","Switch_1","LoadResViewCtrl_1","LoadingViewCtrl_1","LauncherLoading_1","BundleMgr_1","CommonLanguage_1","CommonUpdateNewObserver_1","Listener_1","CommonEventName_1","initialize","resetProgressTime","setTimeout","modify","isUpdate","NewGameInfo","initView","_initHostServer","loadRes","updateVersion","loadStep","load","BundleNames","COMMON","cur","total","commonProgress","setProgressBar","getProgress","commomProgress","Promise","all","showAlert","contentText","loadingResFailure","negativeBtnText","confirm","positiveBtnText","tryAgain","style","onClose","unknownError","loadingLaunch","loadingResSuccess","send","SET_SAFARI_DESK_ICON","race","onSuccess","delayTime","find","getComponent","BundleMgr","loadResFromBundle","CommonBroadCast","prefab","isValid","addBroadcast","Canvas","instance","getComponentInChildren","LoadingView","hostList","readHostList","lodash","isEmpty","ProjectInfo","DEFAULT_HOST","saveHostList","LoadingEvent","LoadingLanguageEn","guestDialogTips","enterHallFailed","LoadingLanguageHi","LoadingLanguageId","LoadingLanguagePt","LanguageType_1","BaseBundleLanguage_1","LoadingLanguageEn_1","LoadingLanguageHi_1","LoadingLanguageId_1","LoadingLanguagePt_1","language","LanguageType","EN","HI","ID","PT","LoadingResWorldCup","priority","resPath","LoginView","Register","Save","RoomView","unpriority","loadOnDemand","BaseBundleSkin_1","SkinType_1","LoadingResWorldCup_1","super","LOADING","skin","SkinType","WORLD_CUP","LIGHT","CommonStorageMgr_1","LauncherFunction_1","LoadingViewCtrl","btn_customerService","btn_homePage","EventType","TOUCH_END","onCustomerService","onHomePage","readAppFirstStart","AdjustTrack","trackEvent","app_start","saveAppFirstStart","active","toLogin","openHomePage","msgData","version","tooltip","LoginBase","NewClass","userIdTxt","passwordTxt","Account","event","AudioManager","playEffect","btnEffect","userid","user","userId","key","JSON","parse","sys","localStorage","getItem","emit","EditBox","fontColor","color","maxLength","zIndex","UILayer","ALERT","DataCacheMgr_1","LoginViewCtrl_1","LoginScene","_LoginViewCtrl","_customerCanClick","onCustomerBtnClick","onHomePageButtonClick","off","DataCacheMgr","initDataCache","onOpenHomePage","onOpenCustomer","loginViewPrefab","UIDepend","PrefabManager","getPrefabBundle","loginNode","H5Page_1","BlackIpUtil_1","LoginViewCtrl","btnLayout","btn_register","btn_guestLogin","btn_accountLogin","btn_facebookLogin","lab_version","btn_vset_login","onRegister","onGuestLogin","onAccountLogin","onFacebookLogin","GAME_VERSION_V","isGuestAccount","isActive","clickManager","dispatchEvent","Event","EventCustom","BlackIpUtil","chcekIsInBlackList","H5Page","onPrivacyClicked","onTermsClicked","onRefundClicked","onAboutClicked","CACHETA","applyLoadingUi","pageview","base_amount","enter_amount","pageIndex","setCurrentPageIndex","getCurrentPageIndex","updateRoomList","id","chips_amount","bet_limit_amount","enter_limit_amount","red_limit_amount","table_id","current","room","setItem","PageView","commPasswordTxt","oldPasswordTxt","oldPassword","commonPassword","removeItem","stringify","getLogin","errorInfo","getRegister","info","vestHallGame","Hall","top","lb_money","lb_name","btnbg","btnbg_01","btnbg_02","console","log","playHallBgm","setUserName","onClickContronl","coin","addCoin","reduceNum","sum","userInfo","target","setMusicOpen","setEffectOpen","userName","Coins","playMusic","hall_bg","Sprite","spriteFrame","SpriteFrame"],"mappings":"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","sourcesContent":["import { GameType } from \"../../../../main/core/conf/GameType\";\nimport { Tools } from \"../../../../main/core/utils/Tools\";\nimport UIMgr from \"../../../plaza/common/Script/Component/base/UIMgr\";\nimport CommonSkin from \"../../../plaza/common/Script/conf/skin/CommonSkin\";\nimport { SceneControl } from \"../../../plaza/common/Script/SceneControl\";\nimport { ServiceCatchResult } from \"../../../plaza/common/Script/service/service_error/define/ServiceCatchResult\";\nimport { ServiceOperateType } from \"../../../plaza/common/Script/service/service_error/define/ServiceOperateType\";\nimport { ServiceErrorUtils } from \"../../../plaza/common/Script/service/service_error/ServiceErrorUtils\";\nimport { CommonUserUtil } from \"../../../plaza/common/Script/user/CommonUserUtil\";\nimport { CommonAccountUtil } from \"../../../plaza/common/Script/user/utils/CommonAccountUtil\";\nimport { CommonUserLoginUiUtil } from \"../../../plaza/common/Script/user/utils/CommonUserLoginUiUtil\";\nimport { UserManager } from \"../../../../main/core/user/UserManager\";\n\nexport class AutoLogin {\n    private static _instance: AutoLogin = null;\n\n    public static getInstance() {\n        if (!this._instance) {\n            this._instance = new AutoLogin();\n        }\n\n        return this._instance;\n    }\n\n    private constructor() { }\n\n    private login_tag: string;\n    private guestButton: cc.Node = null;\n    private accountButton: cc.Node = null;\n    private loading: cc.Node = null;\n\n    public async startLogin(loginTag: string, nodeData = null) {\n        try {\n            this.login_tag = loginTag;\n            if (nodeData) {\n                this.guestButton = nodeData.guestButton;\n                this.accountButton = nodeData.accountButton;\n                this.loading = nodeData.loading;\n            }\n\n            this.loadLastLoginAccount();\n            let account = CommonAccountUtil.getAllLastAccountObject();\n            if (account) {\n                /**\n                 * 如果已经有登录状态，则自动更新用户信息，并进入游戏.\n                 */\n                UserManager.getInstance().initAccount(Number(account.uid), account.token as string);\n                await this.autoLogin();\n            } else {\n                if (CommonAccountUtil.getHistoryAccountCount() > 0) {\n                    if (cc.director.getScene().name !== \"LoginScene\") {\n                        throw SceneControl.getInstance()\n                            .launchScene(GameType.LOGIN)\n                            .then(() => {\n                                this.showLoginView();\n                            });\n                    } else {\n                        this.showLoginView();\n                    }\n                    throw true;\n                } else {\n                    /**\n                     * 新用户自动游客登录\n                     */\n                    await this.guestLogin(\"auto\");\n                }\n            }\n        } catch (e) {\n            const error = e as ServiceError.IErrorCatch;\n            if (error.result !== undefined) {\n                switch (error?.result) {\n                    case ServiceCatchResult.Confirm: {\n                        return this.startLogin(loginTag, nodeData);\n                    }\n                }\n            }\n            throw e;\n        }\n    }\n\n    private login(callfunc: () => Promise<any>) {\n        return ServiceErrorUtils.catchErrorWithType(\n            ServiceOperateType.Login,\n            callfunc().catch((e) => {\n                if (cc.director.getScene().name !== \"LoginScene\") {\n                    return SceneControl.getInstance()\n                        .launchScene(GameType.LOGIN)\n                        .then(() => {\n                            throw e;\n                        });\n                }\n                throw e;\n            })\n        );\n    }\n\n    /**\n     * 之前已经登录过的用户，自动登录\n     */\n    private autoLogin() {\n        return this.login(() => CommonUserUtil.autoLogin({}));\n    }\n    public guestLogin(flag?: string) {\n        return this.login(() => CommonUserUtil.guestLogin({}));\n    }\n\n    /**\n     * 自动恢复上一次登录的账号  uid & token.\n     */\n    private loadLastLoginAccount() {\n        let self = this;\n        let account = CommonAccountUtil.getAllLastAccount();\n        if (account) {\n            let uid = account[0];\n            if (uid) {\n                uid += \"\";\n            }\n            let token = account[1];\n            if (token) {\n                token += \"\";\n            }\n            if (uid && uid.length > 0 && token && token.length > 0) {\n                if (account[4] == 1) {\n                    CommonDepend.LocalStorageMgr.saveUserID(uid);\n                    CommonDepend.LocalStorageMgr.saveUserToken(token);\n                }\n            }\n        } else {\n            CommonDepend.LocalStorageMgr.saveUserID(\"\");\n            CommonDepend.LocalStorageMgr.saveUserToken(\"\");\n        }\n    }\n\n    private hasOldAccountInfo() {\n        let accountArray = CommonAccountUtil.loadOwnAccounts();\n        let result = false;\n        if (accountArray) {\n            accountArray.forEach((item) => {\n                if (item) {\n                    if (item[2] && item[2].length > 2) {\n                        result = true;\n                    }\n                }\n            });\n        }\n        return result;\n    }\n\n    private retryPasswordLogin() {\n        let self = this;\n        let loginAccount = \"\";\n        let password = \"\";\n        CommonDepend.LocalStorageMgr.clearUserID();\n        CommonDepend.LocalStorageMgr.clearUserToken();\n        let account = CommonAccountUtil.getLastAccount();\n        if (account && account[2] && account[3]) {\n            loginAccount = account[2].toString();\n            password = account[3].toString();\n            self.pwdLoginAfterTokenError(loginAccount, password);\n        } else {\n            self.guestLogin(\"auto\");\n        }\n    }\n\n    private pwdLoginAfterTokenError(loginAccount, password) {\n        CommonUserUtil.passwordLogin({\n            account: loginAccount,\n            password: password,\n            success: () => {\n                CommonUserLoginUiUtil.launchHall();\n            },\n            error: (data) => {\n                this.showLoginView();\n                return true;\n            },\n        });\n    }\n\n    /**\n     * @param forceShowGuestLogin  游客自动登录失败时，需要显示游客登录按钮，可以让其手动登录。\n     * @param forceShowPasswordLogin 强制显示密码登录弹窗（无论本地有没有正式账号）\n     */\n    private showLoginView() {\n        UIMgr.showUI(CommonSkin.LoadOnDemand.PasswordLogin);\n    }\n\n    public showNetworkErrorDialog() {\n        // to do\n        // CommonPackageDepend.CommonAlert.createNoNetworkAlert(\n        //     CommonDepend.Language.alert.checkNetwork,\n        //     CommonDepend.Language.alert.confirm,\n        //     function () {}\n        // );\n    }\n}\n","import H5Customer from \"../../../plaza/common/Script/h5_customer/H5Customer\";\nconst { ccclass, property, requireComponent } = cc._decorator;\n\n@ccclass\n@requireComponent(cc.Button)\nexport default class CustomerButton extends cc.Component {\n    protected start(): void {\n        this.node.on(\"click\", this.onSelfClick, this);\n    }\n\n    protected onSelfClick(): void {}\n}\n","import PopUpViewBase from \"../../../main/core/popUpViewUtils/PopUpViewBase\";\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class FriendItem extends PopUpViewBase {\n    @property(cc.Label)\n    username: cc.Label = null;\n    @property(cc.Label)\n    money: cc.Label = null;\n\n    protected onLoad(): void {\n        //this.username.string = faker.name.fullName();\n        this.money.string = \"\" + Math.floor(Math.random() * 10000);\n    }\n}\n","import PopUpViewBase from \"../../../main/core/popUpViewUtils/PopUpViewBase\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class FriendList extends PopUpViewBase {\n    @property(cc.Prefab)\n    friend: cc.Prefab = null;\n    @property(cc.Node)\n    listContent: cc.Node = null;\n\n    protected onLoad(): void {\n        const num = Math.random() * 30 + 2;\n\n        for (let i = 0; i < num; i++) {\n            const node = cc.instantiate(this.friend);\n            this.listContent.addChild(node);\n        }\n    }\n}\n","const { ccclass, property, requireComponent } = cc._decorator;\n\n@ccclass\n@requireComponent(cc.Button)\nexport default class HomePageButton extends cc.Component {\n    protected start(): void {\n        this.node.on(\"click\", this.onSelfClick, this);\n    }\n\n    protected onSelfClick(): void {}\n}\n","import PopUpViewBase from \"../../../main/core/popUpViewUtils/PopUpViewBase\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class HotActivity extends PopUpViewBase {}\n","import { Instance } from \"../../../main/core/utils/decorators/InstanceClassDecorator\";\nimport UIMgr from \"../../plaza/common/Script/Component/base/UIMgr\";\nimport H5Customer from \"../../plaza/common/Script/h5_customer/H5Customer\";\nimport CommonLaunchConfigObserver from \"../../plaza/common/Script/obs/CommonLaunchConfigObserver\";\nimport UniverseSocketMgr from \"../../plaza/common/Script/universe/UniverseSocketMgr\";\nimport { BrowserUtil } from \"../../plaza/common/Script/utils/BrowserUtil\";\nimport LoadingLanguage from \"./conf/lang/LoadingLanguage\";\n\nclass LauncherFunction {\n    static openHomePage() {\n        let url = Instance(CommonLaunchConfigObserver).get(\"homepage\");\n        if (url) {\n            BrowserUtil.open({\n                url: url,\n                type: BrowserUtil.BrowserType.Browser,\n            });\n        } else {\n            UIMgr.showToast(LoadingLanguage.networkInterruptAndReTry);\n            UniverseSocketMgr.onLaunchConfReq();\n        }\n    }\n\n    static openCustomer() {\n        H5Customer.getInstance().toCustomerPage();\n    }\n\n    static openPackCustomer() { }\n\n    static openCustomerFindPwd() { }\n\n    static openPackCustomerFindPwd() { }\n\n    static openDwcCustomer() { }\n\n    static loginCustomerAppeal(url, browser, direction) { }\n\n    /**\n     * 获取不需要登录的基本配置数据项\n     * What's App AppID、UniversalLinks、客服地址、官网地址\n     */\n    public static requestLauncherConfig(successCallback, errCallback) { }\n\n    private static loadLaunchConfig() { }\n}\n\nexport default LauncherFunction;\n","import { Injector } from \"../../../../main/core/utils/decorators/Injector\";\nimport { PopupUtil } from \"../../../../main/core/utils/PopupUtil\";\nimport UIMgr from \"../../../plaza/common/Script/Component/base/UIMgr\";\nimport LoadingSceneStateObserver, {\n    IBundleLoadingOptions,\n} from \"../../../plaza/common/Script/obs/LoadingSceneStateObserver\";\nimport LoadingSkin from \"../conf/skin/LoadingSkin\";\nexport namespace LoadResViewCtrl {\n    let loadResState = Injector.get(LoadingSceneStateObserver);\n    let isInit = false;\n    export function enableLoadingListen() {\n        if (isInit) {\n            return;\n        }\n        isInit = true;\n\n        loadResState.listenChange(listentLoading, this);\n    }\n    export function disableLoadingListen() {\n        loadResState.unListenChange(listentLoading, this);\n    }\n\n    export function listentLoading(newValue: IBundleLoadingOptions) {\n        if (newValue.has == true && newValue.progress == 0 && newValue.success == false) {\n            UIMgr.showUISync(LoadingSkin.Priority.LoadResView);\n        } else if (newValue.error == true) {\n            PopupUtil.close(LoadingSkin.Priority.LoadResView);\n        }\n    }\n}\n","import PopUpViewBase from \"../../../../main/core/popUpViewUtils/PopUpViewBase\";\nimport { Injector } from \"../../../../main/core/utils/decorators/Injector\";\nimport LoadingSceneStateObserver from \"../../../plaza/common/Script/obs/LoadingSceneStateObserver\";\nimport Time2Value from \"../../../../main/core/utils/class/Time2Value\";\nimport LoadingLanguage from \"../conf/lang/LoadingLanguage\";\nimport { Tools } from \"../../../../main/core/utils/Tools\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LoadResView extends PopUpViewBase {\n    @property({ type: cc.Label, displayName: \"\" })\n    lab_hotUpdateTips: cc.Label = null;\n\n    @property({ type: cc.Label, displayName: \"\" })\n    lab_tips: cc.Label = null;\n\n    @property({ type: cc.ProgressBar, displayName: \"\" })\n    loading: cc.ProgressBar = null;\n    // LIFE-CYCLE CALLBACKS:\n\n    @Injector.Inject(LoadingSceneStateObserver)\n    private obs: LoadingSceneStateObserver = null;\n\n    private time2Value: Time2Value = null;\n    start() {\n        this.time2Value = new Time2Value(1, 0.7);\n        this.time2Value.positive();\n        this.obs.listenChange(this.updateProgress, this);\n        this.updateTips();\n    }\n\n    private updateProgress() {\n        this.time2Value.setValue(this.obs.get(\"progress\"), (value) => {\n            this.loading.progress = value;\n            this.setHotUpdateTips(\n                Tools.formatString(LoadingLanguage.hotUpdateTips, {\n                    progress: (value * 100) | 0,\n                })\n            );\n        });\n    }\n\n    public setHotUpdateTips(str: string) {\n        this.lab_hotUpdateTips.string = str;\n    }\n\n    public updateTips(index: number = 0) {\n        index %= LoadingLanguage.tips.length;\n        this.setTips(LoadingLanguage.tips[index++]);\n        this.scheduleOnce(() => {\n            this.updateTips(index);\n        }, 2);\n    }\n\n    public setTips(str: string) {\n        this.lab_tips.string = str;\n    }\n\n    protected onDestroy(): void {\n        this.time2Value?.destory?.();\n        this.obs.unListenChange(this.updateProgress, this);\n    }\n\n    // update (dt) {}\n}\n","import BundleCenter from \"../../../../main/core/bd/BundleCenter\";\nimport { BundleNames } from \"../../../../main/core/conf/BundleNames\";\nimport { lodash } from \"../../../../main/core/utils/NpmExport\";\nimport { NewGameInfo } from \"../../../plaza/common/Script/NewGameInfo\";\nimport Switch from \"../../../plaza/common/Script/Switch\";\nimport UniverseServiceMgr from \"../../../plaza/common/Script/universe/UniverseServiceMgr\";\nimport LoadingLanguage from \"../conf/lang/LoadingLanguage\";\nimport LoadingSkin from \"../conf/skin/LoadingSkin\";\nimport { AutoLogin } from \"../login/AutoLogin\";\nimport { LoadResViewCtrl } from \"../ui/LoadResViewCtrl\";\nimport LoadingViewCtrl from \"./LoadingViewCtrl\";\nimport UIMgr from \"../../../plaza/common/Script/Component/base/UIMgr\";\nimport LauncherLoading from \"../../../../main/Script/Launcher/LauncherLoading\";\nimport { BundleMgr } from \"../../../../main/core/bd/BundleMgr\";\nimport CommonSkin from \"../../../plaza/common/Script/conf/skin/CommonSkin\";\nimport CommonLanguage from \"../../../plaza/common/Script/conf/lang/CommonLanguage\";\nimport { Tools } from \"../../../../main/core/utils/Tools\";\nimport { CommonUserLoginUiUtil } from \"../../../plaza/common/Script/user/utils/CommonUserLoginUiUtil\";\nimport { Instance } from \"../../../../main/core/utils/decorators/InstanceClassDecorator\";\nimport CommonUpdateNewObserver from \"../../../plaza/common/Script/obs/CommonUpdateNewObserver\";\nimport Time2Value from \"../../../../main/core/utils/class/Time2Value\";\nimport Listener from \"../../../../main/core/utils/Listener\";\nimport CommonEventName from \"../../../plaza/common/Script/CommonEventName\";\nimport CommonPromoterVerifyBrdObserver from \"../../../plaza/common/Script/obs/CommonPromoterVerifyBrdObserver\";\n\nclass LoadingCenter {\n    private time2Value: Time2Value = null;\n\n    constructor() {\n        this.initialize();\n    }\n    protected initialize(): void {\n        this.resetProgressTime();\n        this.time2Value = new Time2Value(1, 1);\n\n        setTimeout(() => {\n            Instance(CommonUpdateNewObserver).modify({\n                isUpdate: false,\n            });\n        }, 1000);\n\n        CommonDepend.NewGameInfo = NewGameInfo.getInstance();\n        this.initView();\n        LoadResViewCtrl.enableLoadingListen();\n        this._initHostServer();\n        //UniverseServiceMgr.startUniverse();\n\n        //this.addBroadcast();\n\n        //Instance(CommonPromoterVerifyBrdObserver).query();\n\n        this.loadRes();\n    }\n\n    protected loadRes() {\n        this.setHotUpdateTips(LoadingLanguage.updateVersion);\n        let loadStep = [\n            BundleCenter.getInstance().load(BundleNames.COMMON, (cur: number, total: number) => {\n                let commonProgress = cur / total;\n\n                this.setProgressBar(this.getProgress()?.commomProgress(commonProgress));\n            }),\n            // BundleCenter.getInstance().load(BundleNames.WALLET, (cur: number, total: number) => {\n            //     let walletProgress = cur / total;\n\n            //     this.setProgressBar(this.getProgress()?.walletProgress(walletProgress));\n            // }),\n        ];\n\n        Promise.all(loadStep)\n            .catch(() => {\n                try {\n                    UIMgr.showAlert({\n                        contentText: CommonLanguage.loadingResFailure,\n                        negativeBtnText: CommonLanguage.confirm,\n                        positiveBtnText: CommonLanguage.tryAgain,\n                        style: 3,\n                    }).onClose((result) => {\n                        switch (result) {\n                            case false: {\n                                break;\n                            }\n                            case true: {\n                                this.loadRes();\n                                break;\n                            }\n                        }\n                    });\n                } catch (e) {\n                    this.resetProgressTime();\n                    this.setHotUpdateTips(CommonLanguage.unknownError);\n                    throw e;\n                }\n            })\n            .then(() => {\n                this.setProgressBar(1);\n                Switch.loadingLaunch = true;\n                this.setHotUpdateTips(LoadingLanguage.loadingResSuccess);\n                Listener.send(CommonEventName.SET_SAFARI_DESK_ICON);\n\n                let loading = Promise.race([this.getProgress().onSuccess, Tools.delayTime(1)]);\n                // return Promise.all([AutoLogin.getInstance().startLogin(\"Launcher\"), loading]);\n                return null;\n            })\n            .then(() => {\n                return CommonUserLoginUiUtil.launchHall();\n            })\n            .then(() => {\n                this.time2Value.destory();\n            })\n            .catch(() => { });\n    }\n\n    get lab_hotUpdateTips() {\n        return cc.find(\"Canvas/progressBar/lab_hotUpdateTips\")?.getComponent(cc.Label);\n    }\n    public resetProgressTime() {\n        this.time2Value?.destory();\n    }\n    public setProgressBar(progress: number) {\n        if (Instance(CommonUpdateNewObserver).get(\"isUpdate\", false)) {\n            this.setHotUpdateTips(LoadingLanguage.updateVersion);\n        } else {\n            this.time2Value.setValue(progress, (progress) => {\n                this.setHotUpdateTips(\n                    Tools.formatString(LoadingLanguage.hotUpdateTips, {\n                        progress: (progress * 100) | 0,\n                    })\n                );\n            });\n        }\n    }\n\n    public setHotUpdateTips(str: string) {\n        if (this.lab_hotUpdateTips) this.lab_hotUpdateTips.string = str;\n    }\n    public addBroadcast() {\n        BundleMgr.getInstance()\n            .loadResFromBundle<cc.Prefab>(CommonSkin.Priority.CommonBroadCast)\n            .then((prefab) => {\n                if (cc.isValid(cc.director.getScene())) {\n                    cc.isValid(prefab) && cc.director.getScene().addChild(cc.instantiate(prefab));\n                } else {\n                    Tools.delayTime(1 / 60).then(() => {\n                        this.addBroadcast();\n                    });\n                }\n            });\n    }\n\n    public getProgress() {\n        return cc.Canvas.instance?.getComponentInChildren(LauncherLoading);\n    }\n\n    public getLoadView() {\n        return cc.Canvas.instance?.getComponentInChildren(LoadingViewCtrl);\n    }\n\n    public initView(): void {\n        UIMgr.showUI(LoadingSkin.Priority.LoadingView);\n    }\n\n    private _initHostServer(): void {\n        let hostList = CommonDepend.LocalStorageMgr.readHostList();\n        CC_DEBUG && cc.log(\"LoadingNew.initHostServer local cached =\", hostList);\n\n        if (lodash.isEmpty(hostList)) {\n            hostList = CommonDepend.ProjectInfo.DEFAULT_HOST; //project default config\n            CC_DEBUG && cc.log(\"LoadingNew.initHostServer project default =\", hostList);\n            CommonDepend.LocalStorageMgr.saveHostList(hostList);\n        }\n    }\n}\nif (!CC_EDITOR) {\n    if (CC_PREVIEW) {\n        cc.game.on(cc.game.EVENT_GAME_INITED, () => {\n            new LoadingCenter();\n        });\n    } else {\n        new LoadingCenter();\n    }\n}\n","export enum LoadingEvent {}\n","/** \n * 该文件为自动生成\n * 2022/9/22下午6:23:03\n * \n **/\n\nexport const LoadingLanguageEn = {\n    guestDialogTips: \"Dear player, you have selected guest mode to login to the game, but the game data in this mode will be deleted after deleting the game and updating the device, we recommend you to login with account.\",\n    hotUpdateTips: \"Loading resources ... {progress=0}% \",\n    tips: [\n        \"Get welcome bonus after first update.\",\n        \"It takes a long time for the first update, but it is definitely worth the wait.\",\n        \"Good hands are a rare occurance, betting must be decisive.\",\n        \"Save the official website, download the latest update anytime, and automatically retrieve your account.\",\n        \"Not receiving verification codes? Please try other registration methods or contact customer service.\",\n        \"It is always a loss to spend on eating and drinking, but it’s a two-way bet when we play.\",\n        \"Pretend to be conservative, your cards will be the greatest in their infinite imagination.\",\n        \"What's more fearful than your enemy is your own wrongful way of playing.\",\n        \"Do not verify your unfounded idea with all your chips.\",\n        \"Let me tell you a secret, fishing game is your recovery artifact.\",\n        \"Observe the patterns, analyze the trends, and patience will be your lucky star.\",\n        \"Diversified betting helps to reduce risks.\",\n    ],\n    loadingResSuccess: \"Version updated, accessing lobby.\",\n    loadingResFailure: \"Load failed, please check your network and try again.\",\n    enterHallFailed: \"Failed to enter lobby, please check your network and try again.\",\n    networkInterruptAndReTry: \"Please check network and and try again.\",\n};\n","/** \n * 该文件为自动生成\n * 2022/9/22下午6:23:03\n * \n **/\n\nexport const LoadingLanguageHi = {\n    guestDialogTips: \"प्रिय खिलाड़ी, आपने गेम में लॉगिन करने के लिए अतिथि मोड का चयन किया है, लेकिन इस मोड में गेम डेटा गेम को हटाने और डिवाइस को अपडेट करने के बाद हटा दिया जाएगा, हम आपको खाते से लॉगिन करने की सलाह देते हैं।\",\n    hotUpdateTips: \"लोडिंग संसाधन ... {प्रगति = 0}%\",\n    tips: [\n        \"पहले अपडेट के बाद स्वागत बोनस प्राप्त करें\",\n        \"पहले अपडेट के लिए एक लंबा समय लगता है, लेकिन यह निश्चित रूप से प्रतीक्षा के लायक है\",\n        \"अच्छे हाथ एक दुर्लभ प्रतिस्पर्धा हैं, सट्टेबाजी निर्णायक होना चाहिए\",\n        \"आधिकारिक वेबसाइट को सहेजें, कभी भी नवीनतम अपडेट डाउनलोड करें, और स्वचालित रूप से अपना खाता पुनः प्राप्त करें\",\n        \"सत्यापन कोड प्राप्त नहीं हुआ ? कृपया अन्य पंजीकरण विधियों का प्रयास करें या ग्राहक सेवा से संपर्क करें\",\n        \"खाने और पीने पर खर्च करने से हमेशा नुकसान होता है, लेकिन यह खेल एक दो-तरफ़ा शर्त है\",\n        \"रूढ़िवादी होने का नाटक करें, आपके कार्ड उनकी अनंत कल्पना में सबसे महान होंगे\",\n        \"आपके दुश्मन से अधिक भयभीत क्या है, आपका अपना गलत खेलने का तरीका\",\n        \"अपने सभी चिप्स के साथ अपने निराधार विचार को सत्यापित न करें\",\n        \"मैं आपको एक रहस्य बताता हूं, मछली पकड़ का खेल आपकी वसूली कलाकृति है\",\n        \"पैटर्न का निरीक्षण करें, रुझानों का विश्लेषण करें, और धैर्य आपका भाग्यशाली स्टार होगा\",\n        \"विविध सट्टेबाजी जोखिम को कम करने में मदद करता है\",\n    ],\n    loadingResSuccess: \"संस्करण अपडेट सफल, लॉबी पहुँच गए\",\n    loadingResFailure: \"लोड विफल, कृपया अपने नेटवर्क की जाँच करें और पुनः प्रयास करें\",\n    enterHallFailed: \"लॉबी में प्रवेश करने में विफल, कृपया अपना नेटवर्क देखें और पुनः प्रयास करें\",\n    networkInterruptAndReTry: \"कृपया नेटवर्क की जाँच करें और पुनः प्रयास करें\",\n};\n","/** \n * 该文件为自动生成\n * 2022/9/22下午6:23:03\n * \n **/\n\nexport const LoadingLanguageId = {\n    guestDialogTips: \"Pemain terhormat, Anda telah memilih mode tamu untuk login ke game, tetapi data game dalam mode ini akan dihapus setelah menghapus game dan update perangkat, kami sarankan Anda untuk login dengan akun.\",\n    hotUpdateTips: \"Loading resources ... {progress=0}% \",\n    tips: [\n        \"Dapatkan bonus sambutan setelah update pertama\",\n        \"Butuh waktu lama untuk update pertama, tapi itu pantas ditunggu\",\n        \"Tangan yang bagus itu langka, taruhan harus menentukan\",\n        \"Simpan situs resmi, download update terbaru kapan saja, dan ambil akun Anda secara otomatis\",\n        \"Tidak menerima kode verifikasi? Silakan coba metode pendaftaran lain atau hubungi layanan pelanggan\",\n        \"Makan minum buang uang, main kartu ada kesempatan untung\",\n        \"Pemain konservatif, kartu Anda melebihi batas bayanganmu\",\n        \" Yang lebih menakutkan dari lawanmu adalah cara bermainmu yang salah\",\n        \"Jangan gunakan semua chip Anda untuk menguji ide Anda \",\n        \"Biarkan saya memberi tahu Anda sebuah rahasia, permainan memancing adalah artefak pemulihan Anda\",\n        \"Amati polanya, analisis trennya, dan kesabaran akan menjadi bintang keberuntungan Anda\",\n        \"Beragam taruhan membantu mengurangi risiko\",\n    ],\n    loadingResSuccess: \"Versi terupdate, mengakses lobi\",\n    loadingResFailure: \"Pemuatan gagal, periksa jaringan Anda dan coba lagi\",\n    enterHallFailed: \"Gagal masuk lobi, periksa jaringan Anda dan coba lagi\",\n    networkInterruptAndReTry: \"Silakan periksa jaringan dan coba lagi\",\n};\n","/** \n * 该文件为自动生成\n * 2022/9/22下午6:23:03\n * \n **/\n\nexport const LoadingLanguagePt = {\n    hotUpdateTips: \"Carregando recursos ... {progress=0}% \",\n    tips: [\n        \"Receba bônus de boas-vindas imediatamente após primeira atualização.\",\n        \"Primeira vez carregando a atualização pode levar muito tempo, aguarde novidades.\",\n        \"Se a jogada é boa, faça a aposta.\",\n        \"Salvar o endereço do site oficial, baixe um novo pacote a qualquer momento e recupere automaticamente o número da conta.\",\n        \"Não consegue receber o código de verificação? Tente outra maneira de registro ou entre em contato com o atendimento ao cliente.\",\n        \"Comer e beber trazem gastos, mas jogar as cartas podem trazer sorte.\",\n        \"Finja ser um jogador conservador e suas cartas serão imaginadas ilimitadas.\",\n        \"O que é mais terrível do que seu oponente é sua maneira errada de jogar cartas.\",\n        \"Não desperdiçe todas as fichinhas se não tiver certeza.\",\n        \"Existe um segredo na qual você pescar o que perdeu.\",\n        \"Observe a regra, analise a tendência, a paciência é sua estrela da sorte.\",\n        \"As apostas descentralizadas podem reduzir o risco.\",\n    ],\n    loadingResSuccess: \"Versão atualizada, entrando no saguão.\",\n    loadingResFailure: \"Falha ao carregar, verifique sua rede e tente novamente.\",\n    enterHallFailed: \"Falha ao entrar no saguão, verifique sua rede e tente novamente.\",\n    networkInterruptAndReTry: \"Verifique a rede e tente novamente.\",\n};\n","/** 该文件为自动生成\n * 2022/9/22下午6:23:03\n * \n **/\n\nimport { LanguageType } from \"../../../../../main/core/conf/LanguageType\";\nimport BaseBundleLanguage from \"../../../../../main/core/language/BaseBundleLanguage\";\nimport { LoadingLanguageEn } from \"./en/LoadingLanguageEn\";\nimport { LoadingLanguageHi } from \"./hi/LoadingLanguageHi\";\nimport { LoadingLanguageId } from \"./id/LoadingLanguageId\";\nimport { LoadingLanguagePt } from \"./pt/LoadingLanguagePt\";\n\ntype TLanguage = typeof LoadingLanguageEn &\n    typeof LoadingLanguageHi &\n    typeof LoadingLanguageId &\n    typeof LoadingLanguagePt;\nclass LoadingLanguage extends BaseBundleLanguage<TLanguage> {\n    protected language: LG.ILanguageConfigs = {\n        [LanguageType.EN]: LoadingLanguageEn,\n        [LanguageType.HI]: LoadingLanguageHi,\n        [LanguageType.ID]: LoadingLanguageId,\n        [LanguageType.PT]: LoadingLanguagePt,\n    };\n}\nexport default new LoadingLanguage().get();\n","export let LoadingResWorldCup = {\n    launchScene: \"LoginScene\",\n    priority: {\n        LoadingView: <IResDescribe>{\n            resPath: \"skin/skin-world_cup/prefab/LoadingView\",\n            type: cc.Prefab,\n        },\n        LoginView: <IResDescribe>{\n            resPath: \"skin/skin-world_cup/prefab/LoginView\",\n            type: cc.Prefab,\n        },\n        LoadResView: <IResDescribe>{\n            resPath: \"skin/skin-world_cup/prefab/LoadResView\",\n            type: cc.Prefab,\n        },\n        Login: <IResDescribe>{\n            resPath: \"skin/skin-world_cup/prefab/loginPop\",\n            type: cc.Prefab,\n        },\n        Register: <IResDescribe>{\n            resPath: \"skin/skin-world_cup/prefab/register\",\n            type: cc.Prefab,\n        },\n        Save: <IResDescribe>{\n            resPath: \"skin/skin-world_cup/prefab/SAVE\",\n            type: cc.Prefab,\n        },\n        HotActivity: <IResDescribe>{\n            resPath: \"skin/skin-world_cup/prefab/HotActivity\",\n            type: cc.Prefab,\n        },\n        FriendList: <IResDescribe>{\n            resPath: \"skin/skin-world_cup/prefab/FriendList\",\n            type: cc.Prefab,\n        },\n        RoomView: <IResDescribe>{\n            resPath: \"skin/skin-world_cup/prefab/RoomView\",\n            type: cc.Prefab,\n        },\n    },\n    unpriority: {},\n    loadOnDemand: {},\n};\n","import BaseBundleSkin from \"../../../../../main/core/bd/bd_skin/BaseBundleSkin\";\nimport { BundleNames } from \"../../../../../main/core/conf/BundleNames\";\nimport { SkinType } from \"../../../../../main/core/conf/SkinType\";\nimport { LoadingResWorldCup } from \"./world_cup/LoadingResWorldCup\";\n\ntype TBundleInfo = typeof LoadingResWorldCup;\nclass LoadingSkin extends BaseBundleSkin<TBundleInfo> {\n    protected skin: BdSkin.TSkinInfo = {\n        [SkinType.WORLD_CUP]: LoadingResWorldCup,\n        [SkinType.LIGHT]: LoadingResWorldCup,\n    };\n\n    constructor() {\n        super(BundleNames.LOADING);\n    }\n}\n\nexport default new LoadingSkin();\n","import Time2Value from \"../../../../main/core/utils/class/Time2Value\";\nimport { Instance } from \"../../../../main/core/utils/decorators/InstanceClassDecorator\";\nimport { Tools } from \"../../../../main/core/utils/Tools\";\nimport H5Customer from \"../../../plaza/common/Script/h5_customer/H5Customer\";\nimport CommonUpdateNewObserver from \"../../../plaza/common/Script/obs/CommonUpdateNewObserver\";\nimport CommonStorageMgr from \"../../../plaza/common/Script/Storage/CommonStorageMgr\";\nimport LoadingLanguage from \"../conf/lang/LoadingLanguage\";\nimport LauncherFunction from \"../LauncherFunction\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LoadingViewCtrl extends cc.Component {\n    @property({ type: cc.Node, tooltip: \"客服按钮节点\" })\n    btn_customerService: cc.Node = null;\n\n    @property({ type: cc.Node, tooltip: \"首页按钮节点\" })\n    btn_homePage: cc.Node = null;\n\n    @property({ type: cc.Label, tooltip: \"各种轮播提示label\" })\n    lab_tips: cc.Label = null;\n\n    onLoad() {\n        this.btn_customerService.on(cc.Node.EventType.TOUCH_END, this.onCustomerService, this);\n        this.btn_homePage.on(cc.Node.EventType.TOUCH_END, this.onHomePage, this);\n    }\n\n    start() {\n        this.updateTips();\n    }\n\n    protected onDestroy(): void {}\n\n    public trackAppStart() {\n        let isAppFirstStart = CommonStorageMgr.getInstance().readAppFirstStart();\n        if (isAppFirstStart) {\n            let success = CommonDepend.AdjustTrack.trackEvent(CommonDepend.AdjustTrack.app_start);\n            if (success) {\n                CommonStorageMgr.getInstance().saveAppFirstStart(false);\n            }\n        }\n    }\n\n    private onOpenHomePage(): void {}\n    private onOpenCustomer(): void {}\n\n    public updateTips(index: number = 0) {\n        index %= LoadingLanguage.tips.length;\n        this.setTips(LoadingLanguage.tips[index++]);\n        this.scheduleOnce(() => {\n            this.updateTips(index);\n        }, 2);\n    }\n\n    public setTips(str: string) {\n        this.lab_tips.string = str;\n    }\n\n    public hideBtn() {\n        this.btn_customerService.active = false;\n        this.btn_homePage.active = false;\n    }\n\n    private onCustomerService() {\n        H5Customer.getInstance().toLogin();\n    }\n\n    private onHomePage() {\n        LauncherFunction.openHomePage();\n    }\n\n    private ipBlackListAlert(msgData): void {\n        // canghai TODO\n        // let ip = msgData.Ip || CommonDepend.Language.launcher.unknow;\n        // CommonPackageDepend.CommonAlert.creatorBlackIpAlert(ip);\n    }\n    private forceUpdateGameVersionToNative(version) {}\n}\n","export class LoginBase {}\n","import PopUpViewBase from \"../../../main/core/popUpViewUtils/PopUpViewBase\";\nimport { EditBoxManager } from \"../../../main/core/ui/base/EditBoxManager\";\nimport { UserManager } from \"../../../main/core/user/UserManager\";\nimport UIMgr from \"../../plaza/common/Script/Component/base/UIMgr\";\nimport CommonSkin from \"../../plaza/common/Script/conf/skin/CommonSkin\";\nimport LoadingSkin from \"./conf/skin/LoadingSkin\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends PopUpViewBase {\n    @property(cc.EditBox)\n    private userIdTxt: cc.EditBox = null;\n\n    @property(cc.EditBox)\n    private passwordTxt: cc.EditBox = null;\n\n    @property(cc.EditBox)\n    private Account: cc.EditBox = null;\n\n    onLoad() {}\n\n    start() {}\n    private onCloseLogin(event): void {\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n        this.close();\n    }\n\n    /**\n     * 登录缓存\n     */\n    private login(): void {\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n        let userid = this.userIdTxt.string;\n        let password = this.passwordTxt.string;\n        let Account = this.Account.string;\n        //判断传入数据是否为空\n        if (userid != null && password != null) {\n            //不为空，存放进user对象\n            let user = {\n                userId: \"\",\n                password: \"\",\n            };\n            let key = \"user\" + userid + Account;\n            user = JSON.parse(cc.sys.localStorage.getItem(key));\n            if (user != null && user.userId == userid) {\n                // this.top.active = true;\n                // this.hall.active = true;\n                // this.Login.active = false;\n                if (user.password == password) {\n                    UserManager.getInstance().key = key;\n                    cc.director.emit(\"OPENSENCE\");\n                    // cc.director.emit(\"USERINFO\", key);\n                    this.close();\n                } else {\n                    this.passwordTxt.getComponent(cc.EditBox).fontColor = cc.color(255, 0, 0, 255);\n                    this.passwordTxt.maxLength = 100;\n                    this.passwordTxt.string = \"wrong password\";\n                    this.scheduleOnce(() => {\n                        this.passwordTxt.getComponent(cc.EditBox).fontColor = cc.color(\n                            255,\n                            255,\n                            255,\n                            255\n                        );\n                        this.passwordTxt.maxLength = 6;\n                        this.passwordTxt.string = \"\";\n                    }, 2);\n                }\n            } else {\n                UIMgr.showUI(LoadingSkin.Priority.Register, {\n                    zIndex: UIMgr.UILayer.ALERT,\n                });\n                this.close();\n            }\n        }\n    }\n\n    public updateSave() {\n        UIMgr.showUI(LoadingSkin.Priority.Save, {\n            zIndex: UIMgr.UILayer.ALERT,\n        });\n        this.close();\n    }\n}\n","import { DataCacheMgr } from \"../../../plaza/common/Script/DataCacheMgr\";\nimport H5Customer from \"../../../plaza/common/Script/h5_customer/H5Customer\";\nimport LoadingSkin from \"../conf/skin/LoadingSkin\";\nimport LauncherFunction from \"../LauncherFunction\";\nimport LoginViewCtrl from \"./LoginViewCtrl\";\nimport CommonPromoterVerifyBrdObserver from \"../../../plaza/common/Script/obs/CommonPromoterVerifyBrdObserver\";\nimport { Instance } from \"../../../../main/core/utils/decorators/InstanceClassDecorator\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LoginScene extends cc.Component {\n    private _LoginViewCtrl: LoginViewCtrl = null;\n    private _customerCanClick: boolean = true;\n    protected onLoad(): void {\n        let self = this;\n        this.initView();\n    }\n    protected onEnable(): void {\n        this.node.on(\"on_Customer_Service\", this.onCustomerBtnClick, this);\n        this.node.on(\"on_Home_Page\", this.onHomePageButtonClick, this);\n    }\n    protected onDisable(): void {\n        this.node.off(\"on_Customer_Service\", this.onCustomerBtnClick, this);\n        this.node.off(\"on_Home_Page\", this.onHomePageButtonClick, this);\n    }\n\n    protected start(): void {\n        /** 从大厅进入到登录界面时初始化缓存数据 */\n        DataCacheMgr.getInstance().initDataCache();\n    }\n\n    private onHomePageButtonClick(): void {\n        let self = this;\n        self.onOpenHomePage();\n    }\n    private onCustomerBtnClick(): void {\n        let self = this;\n        if (!self._customerCanClick) {\n            return;\n        }\n        if (self._customerCanClick) {\n            self.onOpenCustomer();\n        }\n        self._customerCanClick = false;\n        self.scheduleOnce(function () {\n            self._customerCanClick = true;\n        }, 1.5);\n    }\n\n    private onOpenHomePage(): void {\n        LauncherFunction.openHomePage();\n    }\n    private onOpenCustomer(): void {\n        H5Customer.getInstance().toLogin();\n    }\n\n    public initView(): void {\n        // 加载loadingView\n        let loginViewPrefab: cc.Prefab = UIDepend.PrefabManager.getPrefabBundle(\n            LoadingSkin.Priority.LoginView\n        );\n        let loginNode: cc.Node = cc.instantiate(loginViewPrefab);\n        this.node.addChild(loginNode);\n\n        // 初始化loadingView控制器\n        this._LoginViewCtrl = loginNode.getComponent(LoginViewCtrl);\n    }\n}\n","import { reject } from \"lodash\";\nimport BundleCenter from \"../../../../main/core/bd/BundleCenter\";\nimport { BundleNames } from \"../../../../main/core/conf/BundleNames\";\nimport { Tools } from \"../../../../main/core/utils/Tools\";\nimport UIMgr from \"../../../plaza/common/Script/Component/base/UIMgr\";\nimport CommonSkin from \"../../../plaza/common/Script/conf/skin/CommonSkin\";\nimport { H5Page } from \"../../../plaza/common/Script/h5/H5Page\";\nimport { NewGameInfo } from \"../../../plaza/common/Script/NewGameInfo\";\nimport UniverseServiceMgr from \"../../../plaza/common/Script/universe/UniverseServiceMgr\";\nimport { CommonAccountUtil } from \"../../../plaza/common/Script/user/utils/CommonAccountUtil\";\nimport { CommonUserLoginUiUtil } from \"../../../plaza/common/Script/user/utils/CommonUserLoginUiUtil\";\nimport { BlackIpUtil } from \"../../../plaza/common/Script/utils/BlackIpUtil\";\nimport { AutoLogin } from \"./AutoLogin\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LoginViewCtrl extends cc.Component {\n    @property({ type: cc.Node, tooltip: \"各种登录按钮父节点\" })\n    btnLayout: cc.Node = null;\n\n    @property({ type: cc.Node, tooltip: \"客服按钮节点\" })\n    btn_customerService: cc.Node = null;\n\n    @property({ type: cc.Node, tooltip: \"首页按钮节点\" })\n    btn_homePage: cc.Node = null;\n\n    @property({ type: cc.Node, tooltip: \"注册按钮节点\" })\n    btn_register: cc.Node = null;\n\n    @property({ type: cc.Node, tooltip: \"游客登录按钮节点\" })\n    btn_guestLogin: cc.Node = null;\n\n    @property({ type: cc.Node, tooltip: \"账号登录按钮节点\" })\n    btn_accountLogin: cc.Node = null;\n\n    @property({ type: cc.Node, tooltip: \"facebook登录按钮节点\" })\n    btn_facebookLogin: cc.Node = null;\n\n    @property({ type: cc.Label, tooltip: \"版本号label\" })\n    lab_version: cc.Label = null;\n    @property({ type: cc.Button, tooltip: \"vest登录\" })\n    btn_vset_login: cc.Button = null;\n\n    onLoad() {\n        this.btn_customerService.on(cc.Node.EventType.TOUCH_END, this.onCustomerService, this);\n        this.btn_homePage.on(cc.Node.EventType.TOUCH_END, this.onHomePage, this);\n\n        this.btn_register.on(cc.Node.EventType.TOUCH_END, this.onRegister, this);\n        this.btn_guestLogin.on(cc.Node.EventType.TOUCH_END, this.onGuestLogin, this);\n        this.btn_accountLogin.on(cc.Node.EventType.TOUCH_END, this.onAccountLogin, this);\n        this.btn_facebookLogin.on(cc.Node.EventType.TOUCH_END, this.onFacebookLogin, this);\n\n        this.lab_version.string = CommonDepend.ProjectInfo.GAME_VERSION_V;\n    }\n\n    start() {\n        let account = CommonAccountUtil.getAllLastAccount();\n\n        if (!account) {\n            this.btn_guestLogin.active = true;\n        } else if (CommonAccountUtil.isGuestAccount(account)) {\n            this.btn_guestLogin.active = true;\n        } else {\n            this.btn_guestLogin.active = false;\n        }\n    }\n\n    public hideBtn() {\n        this.btn_customerService.active = false;\n        this.btn_homePage.active = false;\n\n        this.btn_register.active = false;\n        this.btn_accountLogin.active = false;\n        this.btn_guestLogin.active = false;\n        this.btn_facebookLogin.active = false;\n    }\n\n    public setHomePageBtnActive(isActive: boolean) {\n        this.btn_homePage.active = isActive;\n    }\n\n    private onCustomerService() {\n        Tools.clickManager(this.btn_customerService);\n        this.node.dispatchEvent(new cc.Event.EventCustom(\"on_Customer_Service\", true));\n    }\n\n    private onHomePage() {\n        Tools.clickManager(this.btn_homePage);\n        this.node.dispatchEvent(new cc.Event.EventCustom(\"on_Home_Page\", true));\n    }\n\n    private onRegister() {\n        Tools.clickManager(this.btn_register);\n\n        //有无在黑名单 如在则\n        if (BlackIpUtil.chcekIsInBlackList()) return;\n\n        UIMgr.showUI(CommonSkin.LoadOnDemand.Register);\n    }\n\n    @UIMgr.applyLoadingUi\n    private onGuestLogin() {\n        Tools.clickManager(this.btn_guestLogin);\n\n        //有无在黑名单 如在则\n        if (BlackIpUtil.chcekIsInBlackList()) return;\n\n        // return new Promise((resolve) => {\n        //     AutoLogin.getInstance()\n        //         .guestLogin()\n        //         .then(() => {\n        //             return CommonUserLoginUiUtil.launchHall();\n        //         })\n        //         .finally(() => {\n        //             resolve(true);\n        //         });\n        // });\n        return null;\n    }\n\n    private onAccountLogin() {\n        Tools.clickManager(this.btn_accountLogin);\n\n        //有无在黑名单 如在则\n        if (BlackIpUtil.chcekIsInBlackList()) return;\n\n        UIMgr.showUI(CommonSkin.LoadOnDemand.PasswordLogin);\n    }\n\n    private onFacebookLogin() {}\n\n    onPrivacyClicked() {\n        H5Page.onPrivacyClicked();\n    }\n    onTermsClicked() {\n        H5Page.onTermsClicked();\n    }\n    onRefundClicked() {\n        H5Page.onRefundClicked();\n    }\n    onAboutClicked() {\n        H5Page.onAboutClicked();\n    }\n    private onClickVestLogin(): void {\n        BundleCenter.getInstance().launchScene(BundleNames.CACHETA);\n    }\n}\n","import BundleCenter from \"../../../main/core/bd/BundleCenter\";\nimport { BundleNames } from \"../../../main/core/conf/BundleNames\";\nimport { GameType } from \"../../../main/core/conf/GameType\";\nimport PopUpViewBase from \"../../../main/core/popUpViewUtils/PopUpViewBase\";\nimport { NewGameInfo } from \"../../plaza/common/Script/NewGameInfo\";\nimport CommonSkin from \"../../plaza/common/Script/conf/skin/CommonSkin\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class RoomView extends PopUpViewBase {\n    @property(cc.PageView)\n    pageview: cc.PageView = null;\n\n    private base_amount = 0;\n    private enter_amount = 0;\n\n    private pageIndex = 0;\n\n    onLeft() {\n        if (this.pageIndex <= 0) {\n            return;\n        }\n        this.pageIndex--;\n        CC_DEBUG && cc.log(\"RoomView onLeft=\" + this.pageIndex);\n        this.pageview.setCurrentPageIndex(this.pageIndex);\n    }\n\n    onRight() {\n        if (this.pageIndex >= 2) {\n            return;\n        }\n        this.pageIndex++;\n        CC_DEBUG && cc.log(\"RoomView onRight=\" + this.pageIndex);\n        this.pageview.setCurrentPageIndex(this.pageIndex);\n    }\n    /**\n     * 开始房间号\n     * @param event\n     * @param customEventData\n     */\n    protected clickBtn(): void {\n        const pageIndex = this.pageview.getCurrentPageIndex();\n        CC_DEBUG && cc.log(\"RoomView clickBtn=\" + pageIndex);\n        let RoomListObj = {\n            id: 0,\n            base_amount: 50,\n            chips_amount: [],\n            bet_limit_amount: 0,\n            enter_limit_amount: 4000,\n            red_limit_amount: [],\n            table_id: 0,\n        };\n        if (pageIndex == 0) {\n            this.base_amount = 1;\n            this.enter_amount = 10;\n        } else if (pageIndex == 1) {\n            this.base_amount = 50;\n            this.enter_amount = 50;\n        } else if (pageIndex == 2) {\n            this.base_amount = 100;\n            this.enter_amount = 100;\n        }\n\n        NewGameInfo.getInstance().updateRoomList(GameType.CACHETA, [RoomListObj]);\n        CommonDepend.NewGameInfo.current.room = pageIndex;\n        BundleCenter.getInstance().launchScene(BundleNames.CACHETA);\n        cc.sys.localStorage.setItem(\"roomID\", pageIndex + \"\");\n        cc.sys.localStorage.setItem(\"base_amount\", this.base_amount);\n        cc.sys.localStorage.setItem(\"enter_amount\", this.enter_amount);\n    }\n}\n","import PopUpViewBase from \"../../../main/core/popUpViewUtils/PopUpViewBase\";\nimport UIMgr from \"../../plaza/common/Script/Component/base/UIMgr\";\nimport CommonSkin from \"../../plaza/common/Script/conf/skin/CommonSkin\";\nimport LoadingSkin from \"./conf/skin/LoadingSkin\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends PopUpViewBase {\n    @property(cc.EditBox)\n    private userIdTxt: cc.EditBox = null;\n\n    @property(cc.EditBox)\n    private passwordTxt: cc.EditBox = null;\n    @property(cc.EditBox)\n    private commPasswordTxt: cc.EditBox = null;\n    @property(cc.EditBox)\n    private oldPasswordTxt: cc.EditBox = null;\n    @property(cc.EditBox)\n    private Account: cc.EditBox = null;\n\n    onLoad() {}\n\n    start() {}\n    private onCloseSave(event): void {\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n        this.close();\n    }\n\n    /**\n     * 注册缓存\n     */\n    private UpdateUser(): void {\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n        let userid = this.userIdTxt.string;\n        let Account = this.Account.string;\n        let password = this.passwordTxt.string;\n        let oldPassword = this.oldPasswordTxt.string;\n        let commonPassword = this.commPasswordTxt.string;\n        let user = {\n            userId: \"\",\n            password: \"\",\n        };\n        user = JSON.parse(cc.sys.localStorage.getItem(\"user\" + userid + Account));\n        if (user != null && user.userId == userid) {\n            if (userid.length > 11 && userid != \"\") {\n                if (user.password == oldPassword) {\n                    if (password.length >= 6 && password != \"\") {\n                        if (commonPassword == password) {\n                            const user = {\n                                userId: this.userIdTxt.string,\n                                password: this.passwordTxt.string,\n                            };\n                            cc.sys.localStorage.removeItem(user.userId);\n                            //本地缓存\n                            cc.sys.localStorage.setItem(\n                                \"user\" + userid + Account,\n                                JSON.stringify(user)\n                            );\n                            this.getLogin();\n                        } else {\n                            this.errorInfo(\n                                \"The two passwords entered are different\",\n                                this.passwordTxt,\n                                6\n                            );\n                            this.errorInfo(\n                                \"The two passwords entered are different\",\n                                this.commPasswordTxt,\n                                6\n                            );\n                        }\n                    } else {\n                        this.errorInfo(\n                            \"Enter the password length can not be less than 6\",\n                            this.passwordTxt,\n                            6\n                        );\n                    }\n                } else {\n                    this.errorInfo(\"The old password entered is incorrect\", this.passwordTxt, 6);\n                }\n            } else {\n                this.errorInfo(\"The format of the entered number is incorrect\", this.userIdTxt, 11);\n                this.errorInfo(\"\", this.passwordTxt, 6);\n                this.errorInfo(\"\", this.commPasswordTxt, 6);\n                this.errorInfo(\"\", this.oldPasswordTxt, 6);\n            }\n        } else {\n            this.getRegister();\n        }\n    }\n\n    private getLogin(): void {\n        UIMgr.showUI(LoadingSkin.Priority.Login, {\n            zIndex: UIMgr.UILayer.ALERT,\n        });\n        this.close();\n    }\n    private getRegister(): void {\n        UIMgr.showUI(LoadingSkin.Priority.Register, {\n            zIndex: UIMgr.UILayer.ALERT,\n        });\n        this.close();\n    }\n    private errorInfo(info: string, EditBox: cc.EditBox, num: number): void {\n        EditBox.getComponent(cc.EditBox).fontColor = cc.color(255, 0, 0, 255);\n        EditBox.maxLength = 100;\n        EditBox.string = info;\n        this.scheduleOnce(() => {\n            EditBox.getComponent(cc.EditBox).fontColor = cc.color(255, 255, 255, 255);\n            EditBox.maxLength = num;\n            EditBox.string = \"\";\n        }, 2);\n    }\n}\n","import PopUpViewBase from \"../../../../main/core/popUpViewUtils/PopUpViewBase\";\nimport UIMgr from \"../../../plaza/common/Script/Component/base/UIMgr\";\nimport CommonSkin from \"../../../plaza/common/Script/conf/skin/CommonSkin\";\nimport LoadingSkin from \"../conf/skin/LoadingSkin\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends PopUpViewBase {\n    @property(cc.EditBox)\n    private userIdTxt: cc.EditBox = null;\n\n    @property(cc.EditBox)\n    private passwordTxt: cc.EditBox = null;\n    @property(cc.EditBox)\n    private commPasswordTxt: cc.EditBox = null;\n\n    @property(cc.EditBox)\n    private Account: cc.EditBox = null;\n\n    onLoad() {}\n\n    start() {}\n    private onCloseRegister(event): void {\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n        this.close();\n    }\n\n    /**\n     * 注册缓存\n     */\n    private SaveUser(): void {\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n        let userid = this.userIdTxt.string;\n        let Account = this.Account.string;\n        let password = this.passwordTxt.string;\n        let commonPassword = this.commPasswordTxt.string;\n        let user = {\n            userId: \"\",\n            password: \"\",\n        };\n        user = JSON.parse(cc.sys.localStorage.getItem(\"user\" + userid + Account));\n        if (user != null && user.userId == userid) {\n            this.errorInfo(\"account already exists\", this.userIdTxt, 11);\n            this.errorInfo(\"\", this.passwordTxt, 6);\n            this.errorInfo(\"\", this.commPasswordTxt, 6);\n        } else {\n            if (userid.length == 11 && userid != \"\") {\n                if (password.length >= 6 && password != \"\") {\n                    if (commonPassword == password) {\n                        const user = {\n                            userId: this.userIdTxt.string,\n                            password: this.passwordTxt.string,\n                        };\n                        //本地缓存\n                        cc.sys.localStorage.setItem(\n                            \"user\" + userid + Account,\n                            JSON.stringify(user)\n                        );\n                        this.getLogin();\n                    } else {\n                        this.errorInfo(\n                            \"The two passwords entered are different\",\n                            this.passwordTxt,\n                            6\n                        );\n                        this.errorInfo(\n                            \"The two passwords entered are different\",\n                            this.commPasswordTxt,\n                            6\n                        );\n                    }\n                } else {\n                    this.errorInfo(\n                        \"Enter the password length can not be less than 6\",\n                        this.passwordTxt,\n                        6\n                    );\n                }\n            } else {\n                this.errorInfo(\"The format of the number is incorrect\", this.userIdTxt, 11);\n                this.errorInfo(\"\", this.passwordTxt, 6);\n                this.errorInfo(\"\", this.commPasswordTxt, 6);\n            }\n        }\n    }\n\n    private getLogin(): void {\n        UIMgr.showUI(LoadingSkin.Priority.Login, {\n            zIndex: UIMgr.UILayer.ALERT,\n        });\n        this.close();\n    }\n    private errorInfo(info: string, EditBox: cc.EditBox, num: number): void {\n        EditBox.getComponent(cc.EditBox).fontColor = cc.color(255, 0, 0, 255);\n        EditBox.maxLength = 100;\n        EditBox.string = info;\n        this.scheduleOnce(() => {\n            EditBox.getComponent(cc.EditBox).fontColor = cc.color(255, 255, 255, 255);\n            EditBox.maxLength = num;\n            EditBox.string = \"\";\n        }, 2);\n    }\n}\n","import CommonSkin from \"../../plaza/common/Script/conf/skin/CommonSkin\";\nimport { Tools } from \"../../../main/core/utils/Tools\";\nimport LoadingSkin from \"./conf/skin/LoadingSkin\";\nimport UIMgr from \"../../plaza/common/Script/Component/base/UIMgr\";\nimport { _SpriteFrameItem } from \"../../../main/core/ui/component/item/_SpriteFrameItem\";\nimport { UserManager } from \"../../../main/core/user/UserManager\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class vestHallGame extends cc.Component {\n    @property(cc.Node)\n    private Hall: cc.Node = null;\n\n    @property(cc.Node)\n    @property(cc.Node)\n    private login: cc.Node = null;\n\n    @property(cc.Node)\n    private top: cc.Node = null;\n\n    @property(cc.Label)\n    private lb_money: cc.Label = null;\n\n    @property(cc.Label)\n    private lb_name: cc.Label = null;\n\n    @property(cc.Node)\n    private btnbg: cc.Node = null;\n\n    @property(cc.SpriteFrame)\n    private btnbg_01: cc.SpriteFrame = null;\n\n    @property(cc.SpriteFrame)\n    private btnbg_02: cc.SpriteFrame = null;\n\n    private key: string;\n    onLoad() {\n        // this.setUserName();\n        // this.playHallBgm();\n        this.key = UserManager.getInstance().key;\n        console.log(this.key);\n        this.login.active = true;\n        this.Hall.active = false;\n        this.top.active = false;\n        let isTRUE = cc.sys.localStorage.getItem(\"br-67\");\n        if (isTRUE == \"0\") {\n            this.login.active = false;\n            this.Hall.active = true;\n            this.top.active = true;\n            this.playHallBgm();\n            cc.sys.localStorage.setItem(\"br-67\", \"1\");\n            this.setUserName(this.key);\n        }\n        cc.director.on(\"OPENSENCE\", this.onClickContronl, this);\n        // cc.director.on(\"USERINFO\", (key: string) => this.getUserInfo(key), this);\n        cc.director.on(\"ADDCOIN\", (coin: string) => this.addCoin(coin), this);\n        cc.director.on(\"STARTCOIN\", this.reduceNum, this);\n        cc.director.on(\"PLAYMUSIC\", this.playHallBgm, this);\n    }\n\n    /**\n     * 减少金币\n     */\n    private reduceNum() {\n        this.key = UserManager.getInstance().key;\n        let lastCoin = Number(this.lb_money.string);\n        let addCoin = Number(1500);\n        let sum = lastCoin - addCoin;\n        let userInfo = JSON.parse(cc.sys.localStorage.getItem(this.key));\n        userInfo.coin = sum + \"\";\n        this.lb_money.string = sum + \"\";\n        cc.sys.localStorage.setItem(this.key, JSON.stringify(userInfo));\n    }\n    /**增加金币 */\n    private addCoin(coin: string) {\n        this.key = UserManager.getInstance().key;\n        let lastCoin = Number(this.lb_money.string);\n        let addCoin = Number(coin);\n        let sum = lastCoin + addCoin;\n        let userInfo = JSON.parse(cc.sys.localStorage.getItem(this.key));\n        userInfo.coin = sum + \"\";\n        this.lb_money.string = sum + \"\";\n        cc.sys.localStorage.setItem(this.key, JSON.stringify(userInfo));\n    }\n\n    private onClickStart(event): void {\n        Tools.clickManager(event.target);\n        CommonDepend.AudioManager.setMusicOpen(true);\n        CommonDepend.AudioManager.setEffectOpen(true);\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n        UIMgr.showUI(LoadingSkin.Priority.Login);\n    }\n\n    private onClickGetCacheta(event): void {\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n        UIMgr.showUISync(LoadingSkin.Priority.RoomView);\n    }\n\n    onClickContronl() {\n        this.playHallBgm();\n        this.top.active = true;\n        this.Hall.active = true;\n        this.login.active = false;\n        let key = UserManager.getInstance().key;\n        this.setUserName(key);\n    }\n\n    /**游客登录 */\n    private youke(event) {\n        Tools.clickManager(event.target);\n        this.playHallBgm();\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n        this.Hall.active = true;\n        this.top.active = true;\n        this.login.active = false;\n        let keyNum = Math.floor(Math.random() * 1000);\n        let key = \"user\" + keyNum;\n        UserManager.getInstance().key = key;\n        this.setUserName(key);\n    }\n\n    /**\n     * 查询用户信息\n     * @param key\n     */\n    private setUserName(key: string): void {\n        // this.coin.string = \"\" + userCoin;\n        let userInfo = {\n            userName: \"\",\n            coin: \"\",\n        };\n        userInfo = JSON.parse(cc.sys.localStorage.getItem(key));\n        if (userInfo == null) {\n            userInfo = { userName: \"1\", coin: \"2\" };\n            let userName = Math.floor(Math.random() * 1000) + 1000;\n            this.lb_name.string = \"ID: \" + userName;\n            userInfo.userName = \"\" + userName;\n            let Coins = Math.floor(Math.random() * 1000) + 12545;\n            this.lb_money.string = \"\" + Coins;\n            userInfo.coin = \"\" + Coins;\n            cc.sys.localStorage.setItem(key, JSON.stringify(userInfo));\n        } else {\n            if (userInfo.userName) {\n                this.lb_name.string = \"ID: \" + userInfo.userName;\n            } else {\n                let userName = Math.floor(Math.random() * 1000) + 1000;\n                this.lb_name.string = \"ID: \" + userName;\n                userInfo.userName = \"\" + userName;\n            }\n\n            if (userInfo.coin) {\n                this.lb_money.string = \"\" + userInfo.coin;\n            } else {\n                let Coins = Math.floor(Math.random() * 1000) + 12545;\n                this.lb_money.string = \"\" + Coins;\n                userInfo.coin = \"\" + Coins;\n            }\n            cc.sys.localStorage.setItem(key, JSON.stringify(userInfo));\n        }\n    }\n\n    private playHallBgm(): void {\n        CommonDepend.AudioManager.setMusicOpen(true);\n        CommonDepend.AudioManager.setEffectOpen(true);\n        CommonDepend.AudioManager.playMusic(CommonSkin.LoadOnDemand.hall_bg, true);\n        cc.sys.localStorage.setItem(\"Music\", 1);\n    }\n\n    /**\n     * 大厅音乐开关\n     */\n    btnMusic(): void {\n        let num = cc.sys.localStorage.getItem(\"Music\");\n        if (num == 1) {\n            this.btnbg.getComponent(cc.Sprite).spriteFrame = this.btnbg_01;\n            CommonDepend.AudioManager.setMusicOpen(false);\n            CommonDepend.AudioManager.setEffectOpen(false);\n            CommonDepend.AudioManager.playMusic(CommonSkin.LoadOnDemand.hall_bg, false);\n            cc.sys.localStorage.setItem(\"Music\", 0);\n        } else {\n            this.btnbg.getComponent(cc.Sprite).spriteFrame = this.btnbg_02;\n            CommonDepend.AudioManager.setMusicOpen(true);\n            CommonDepend.AudioManager.setEffectOpen(true);\n            CommonDepend.AudioManager.playMusic(CommonSkin.LoadOnDemand.hall_bg, true);\n            cc.sys.localStorage.setItem(\"Music\", 1);\n        }\n    }\n\n    //小游戏\n    onMiniGame(event) {\n        Tools.clickManager(event.target);\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n    }\n\n    //背包\n    onPack(event) {\n        Tools.clickManager(event.target);\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n    }\n    //朋友\n    onFirend(event) {\n        Tools.clickManager(event.target);\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n        UIMgr.showUI(LoadingSkin.Priority.FriendList);\n    }\n    //火爆活动\n    onActivity(event) {\n        Tools.clickManager(event.target);\n        CommonDepend.AudioManager.playEffect(CommonSkin.LoadOnDemand.btnEffect);\n        UIMgr.showUI(LoadingSkin.Priority.HotActivity);\n    }\n}\n"],"file":"index.js"}